{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/alignment-toolbar/index.js"],"names":["find","__","Toolbar","withViewportMatch","withSelect","compose","withBlockEditContext","ALIGNMENT_CONTROLS","icon","title","align","AlignmentToolbar","isCollapsed","value","onChange","applyOrUnset","undefined","activeAlignment","control","map","isActive","onClick","clientId","isLargeViewport","select","getBlockRootClientId","getEditorSettings","hasFixedToolbar"],"mappings":";;;AAAA;;;AAGA,SAASA,IAAT,QAAqB,QAArB;AAEA;;;;AAGA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;;;;AAGA,SAASC,oBAAT,QAAqC,uBAArC;AAEA,IAAMC,kBAAkB,GAAG,CAC1B;AACCC,EAAAA,IAAI,EAAE,kBADP;AAECC,EAAAA,KAAK,EAAER,EAAE,CAAE,YAAF,CAFV;AAGCS,EAAAA,KAAK,EAAE;AAHR,CAD0B,EAM1B;AACCF,EAAAA,IAAI,EAAE,oBADP;AAECC,EAAAA,KAAK,EAAER,EAAE,CAAE,cAAF,CAFV;AAGCS,EAAAA,KAAK,EAAE;AAHR,CAN0B,EAW1B;AACCF,EAAAA,IAAI,EAAE,mBADP;AAECC,EAAAA,KAAK,EAAER,EAAE,CAAE,aAAF,CAFV;AAGCS,EAAAA,KAAK,EAAE;AAHR,CAX0B,CAA3B;AAkBA,OAAO,SAASC,gBAAT,OAA8D;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AACpE,WAASC,YAAT,CAAuBL,KAAvB,EAA+B;AAC9B,WAAO;AAAA,aAAMI,QAAQ,CAAED,KAAK,KAAKH,KAAV,GAAkBM,SAAlB,GAA8BN,KAAhC,CAAd;AAAA,KAAP;AACA;;AAED,MAAMO,eAAe,GAAGjB,IAAI,CAAEO,kBAAF,EAAsB,UAAEW,OAAF;AAAA,WAAeA,OAAO,CAACR,KAAR,KAAkBG,KAAjC;AAAA,GAAtB,CAA5B;AAEA,SACC,cAAC,OAAD;AACC,IAAA,WAAW,EAAGD,WADf;AAEC,IAAA,IAAI,EAAGK,eAAe,GAAGA,eAAe,CAACT,IAAnB,GAA0B,kBAFjD;AAGC,IAAA,KAAK,EAAGP,EAAE,CAAE,uBAAF,CAHX;AAIC,IAAA,QAAQ,EAAGM,kBAAkB,CAACY,GAAnB,CAAwB,UAAED,OAAF,EAAe;AAAA,UACzCR,KADyC,GAC/BQ,OAD+B,CACzCR,KADyC;AAEjD,UAAMU,QAAQ,GAAKP,KAAK,KAAKH,KAA7B;AAEA,+BACIQ,OADJ;AAECE,QAAAA,QAAQ,EAARA,QAFD;AAGCC,QAAAA,OAAO,EAAEN,YAAY,CAAEL,KAAF;AAHtB;AAKA,KATU;AAJZ,IADD;AAiBA;AAED,eAAeL,OAAO,CACrBC,oBAAoB,CAAE,iBAAoB;AAAA,MAAhBgB,QAAgB,SAAhBA,QAAgB;AACzC,SAAO;AACNA,IAAAA,QAAQ,EAARA;AADM,GAAP;AAGA,CAJmB,CADC,EAMrBnB,iBAAiB,CAAE;AAAEoB,EAAAA,eAAe,EAAE;AAAnB,CAAF,CANI,EAOrBnB,UAAU,CAAE,UAAEoB,MAAF,SAA0D;AAAA,MAA9CF,QAA8C,SAA9CA,QAA8C;AAAA,MAApCC,eAAoC,SAApCA,eAAoC;AAAA,MAAnBX,WAAmB,SAAnBA,WAAmB;;AAAA,gBACjBY,MAAM,CAAE,aAAF,CADW;AAAA,MAC7DC,oBAD6D,WAC7DA,oBAD6D;AAAA,MACvCC,iBADuC,WACvCA,iBADuC;;AAErE,SAAO;AACNd,IAAAA,WAAW,EAAEA,WAAW,IAAI,CAAEW,eAAjB,IACZ,CAAEG,iBAAiB,GAAGC,eAAtB,IACAF,oBAAoB,CAAEH,QAAF;AAHf,GAAP;AAMA,CARS,CAPW,CAAP,CAgBZX,gBAhBY,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Toolbar } from '@wordpress/components';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { withBlockEditContext } from '../block-edit/context';\n\nconst ALIGNMENT_CONTROLS = [\n\t{\n\t\ticon: 'editor-alignleft',\n\t\ttitle: __( 'Align left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: 'editor-aligncenter',\n\t\ttitle: __( 'Align center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: 'editor-alignright',\n\t\ttitle: __( 'Align right' ),\n\t\talign: 'right',\n\t},\n];\n\nexport function AlignmentToolbar( { isCollapsed, value, onChange } ) {\n\tfunction applyOrUnset( align ) {\n\t\treturn () => onChange( value === align ? undefined : align );\n\t}\n\n\tconst activeAlignment = find( ALIGNMENT_CONTROLS, ( control ) => control.align === value );\n\n\treturn (\n\t\t<Toolbar\n\t\t\tisCollapsed={ isCollapsed }\n\t\t\ticon={ activeAlignment ? activeAlignment.icon : 'editor-alignleft' }\n\t\t\tlabel={ __( 'Change Text Alignment' ) }\n\t\t\tcontrols={ ALIGNMENT_CONTROLS.map( ( control ) => {\n\t\t\t\tconst { align } = control;\n\t\t\t\tconst isActive = ( value === align );\n\n\t\t\t\treturn {\n\t\t\t\t\t...control,\n\t\t\t\t\tisActive,\n\t\t\t\t\tonClick: applyOrUnset( align ),\n\t\t\t\t};\n\t\t\t} ) }\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithBlockEditContext( ( { clientId } ) => {\n\t\treturn {\n\t\t\tclientId,\n\t\t};\n\t} ),\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\twithSelect( ( select, { clientId, isLargeViewport, isCollapsed } ) => {\n\t\tconst { getBlockRootClientId, getEditorSettings } = select( 'core/editor' );\n\t\treturn {\n\t\t\tisCollapsed: isCollapsed || ! isLargeViewport || (\n\t\t\t\t! getEditorSettings().hasFixedToolbar &&\n\t\t\t\tgetBlockRootClientId( clientId )\n\t\t\t),\n\t\t};\n\t} ),\n)( AlignmentToolbar );\n"]}