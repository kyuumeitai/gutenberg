{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/block-library/src/pullquote/edit.js"],"names":["SOLID_COLOR_STYLE_NAME","SOLID_COLOR_CLASS","PullQuoteEdit","props","wasTextColorAutomaticallyComputed","pullQuoteMainColorSetter","bind","pullQuoteTextColorSetter","colorValue","colorUtils","textColor","setTextColor","setMainColor","color","getMostReadableColor","attributes","mainColor","setAttributes","isSelected","className","value","citation","isSolidColorStyle","figureStyle","backgroundColor","borderColor","blockquoteStyle","blockquoteClasses","class","undefined","nextValue","RichText","isEmpty","nextCitation","onChange","label","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tComponent,\n\tFragment,\n} from '@wordpress/element';\nimport {\n\tRichText,\n\tContrastChecker,\n\tInspectorControls,\n\twithColors,\n\tPanelColorSettings,\n} from '@wordpress/editor';\n\nexport const SOLID_COLOR_STYLE_NAME = 'solid-color';\nexport const SOLID_COLOR_CLASS = `is-style-${ SOLID_COLOR_STYLE_NAME }`;\n\nclass PullQuoteEdit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.wasTextColorAutomaticallyComputed = false;\n\t\tthis.pullQuoteMainColorSetter = this.pullQuoteMainColorSetter.bind( this );\n\t\tthis.pullQuoteTextColorSetter = this.pullQuoteTextColorSetter.bind( this );\n\t}\n\n\tpullQuoteMainColorSetter( colorValue ) {\n\t\tconst { colorUtils, textColor, setTextColor, setMainColor } = this.props;\n\t\tsetMainColor( colorValue );\n\t\tif ( ! textColor.color || this.wasTextColorAutomaticallyComputed ) {\n\t\t\tthis.wasTextColorAutomaticallyComputed = true;\n\t\t\tsetTextColor( colorUtils.getMostReadableColor( colorValue ) );\n\t\t}\n\t}\n\n\tpullQuoteTextColorSetter( colorValue ) {\n\t\tconst { setTextColor } = this.props;\n\t\tsetTextColor( colorValue );\n\t\tthis.wasTextColorAutomaticallyComputed = false;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tmainColor,\n\t\t\ttextColor,\n\t\t\tsetAttributes,\n\t\t\tisSelected,\n\t\t\tclassName,\n\t\t} = this.props;\n\n\t\tconst { value, citation } = attributes;\n\n\t\tconst isSolidColorStyle = includes( className, SOLID_COLOR_CLASS );\n\t\tconst figureStyle = isSolidColorStyle ?\n\t\t\t{ backgroundColor: mainColor.color } :\n\t\t\t{ borderColor: mainColor.color };\n\t\tconst blockquoteStyle = {\n\t\t\tcolor: textColor.color,\n\t\t};\n\t\tconst blockquoteClasses = textColor.color ? classnames( 'has-text-color', {\n\t\t\t[ textColor.class ]: textColor.class,\n\t\t} ) : undefined;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<figure style={ figureStyle } className={ classnames(\n\t\t\t\t\tclassName, {\n\t\t\t\t\t\t[ mainColor.class ]: isSolidColorStyle && mainColor.class,\n\t\t\t\t\t} ) }>\n\t\t\t\t\t<blockquote style={ blockquoteStyle } className={ blockquoteClasses }>\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t( nextValue ) => setAttributes( {\n\t\t\t\t\t\t\t\t\tvalue: nextValue,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* translators: the text of the quotation */\n\t\t\t\t\t\t\tplaceholder={ __( 'Write quote…' ) }\n\t\t\t\t\t\t\twrapperClassName=\"block-library-pullquote__content\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ ( ! RichText.isEmpty( citation ) || isSelected ) && (\n\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\tvalue={ citation }\n\t\t\t\t\t\t\t\t/* translators: the individual or entity quoted */\n\t\t\t\t\t\t\t\tplaceholder={ __( 'Write citation…' ) }\n\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t( nextCitation ) => setAttributes( {\n\t\t\t\t\t\t\t\t\t\tcitation: nextCitation,\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName=\"wp-block-pullquote__citation\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</blockquote>\n\t\t\t\t</figure>\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\ttitle={ __( 'Color Settings' ) }\n\t\t\t\t\t\tcolorSettings={ [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: mainColor.color,\n\t\t\t\t\t\t\t\tonChange: this.pullQuoteMainColorSetter,\n\t\t\t\t\t\t\t\tlabel: __( 'Main Color' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: textColor.color,\n\t\t\t\t\t\t\t\tonChange: this.pullQuoteTextColorSetter,\n\t\t\t\t\t\t\t\tlabel: __( 'Text Color' ),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ isSolidColorStyle && (\n\t\t\t\t\t\t\t<ContrastChecker\n\t\t\t\t\t\t\t\t{ ...{\n\t\t\t\t\t\t\t\t\ttextColor: textColor.color,\n\t\t\t\t\t\t\t\t\tbackgroundColor: mainColor.color,\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tisLargeText={ false }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</PanelColorSettings>\n\t\t\t\t</InspectorControls>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default withColors( { mainColor: 'background-color', textColor: 'color' } )(\n\tPullQuoteEdit\n);\n"]}