{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/rich-text/src/store/selectors.js"],"names":["getFormatTypes","state","Object","values","formatTypes","getFormatType","name"],"mappings":";;;;;;;;;;AAGA;;AAHA;;;;AAKA;;;;;;;AAOO,IAAMA,cAAc,GAAG,qBAC7B,UAAEC,KAAF;AAAA,SAAaC,MAAM,CAACC,MAAP,CAAeF,KAAK,CAACG,WAArB,CAAb;AAAA,CAD6B,EAE7B,UAAEH,KAAF;AAAA,SAAa,CACZA,KAAK,CAACG,WADM,CAAb;AAAA,CAF6B,CAAvB;AAOP;;;;;;;;;;;AAQO,SAASC,aAAT,CAAwBJ,KAAxB,EAA+BK,IAA/B,EAAsC;AAC5C,SAAOL,KAAK,CAACG,WAAN,CAAmBE,IAAnB,CAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport createSelector from 'rememo';\n\n/**\n * Returns all the available format types.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Format types.\n */\nexport const getFormatTypes = createSelector(\n\t( state ) => Object.values( state.formatTypes ),\n\t( state ) => [\n\t\tstate.formatTypes,\n\t]\n);\n\n/**\n * Returns a format type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name Format type name.\n *\n * @return {Object?} Format type.\n */\nexport function getFormatType( state, name ) {\n\treturn state.formatTypes[ name ];\n}\n"]}