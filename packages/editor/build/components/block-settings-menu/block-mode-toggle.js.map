{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/block-settings-menu/block-mode-toggle.js"],"names":["BlockModeToggle","blockType","mode","onToggleMode","small","label","undefined","select","clientId","getBlock","getBlockMode","block","name","dispatch","onToggle","noop","toggleBlockMode"],"mappings":";;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAZA;;;;AAKA;;;AASO,SAASA,eAAT,OAA6E;AAAA,MAAjDC,SAAiD,QAAjDA,SAAiD;AAAA,MAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCC,YAAgC,QAAhCA,YAAgC;AAAA,wBAAlBC,KAAkB;AAAA,MAAlBA,KAAkB,2BAAV,KAAU;;AACnF,MAAK,CAAE,6BAAiBH,SAAjB,EAA4B,MAA5B,EAAoC,IAApC,CAAP,EAAoD;AACnD,WAAO,IAAP;AACA;;AAED,MAAMI,KAAK,GAAGH,IAAI,KAAK,QAAT,GACb,cAAI,cAAJ,CADa,GAEb,cAAI,eAAJ,CAFD;AAIA,SACC,4BAAC,oBAAD;AACC,IAAA,SAAS,EAAC,qCADX;AAEC,IAAA,OAAO,EAAGC,YAFX;AAGC,IAAA,IAAI,EAAC,MAHN;AAIC,IAAA,KAAK,EAAGC,KAAK,GAAGC,KAAH,GAAWC;AAJzB,KAMG,CAAEF,KAAF,IAAWC,KANd,CADD;AAUA;;eAEc,sBAAS,CACvB,sBAAY,UAAEE,MAAF,SAA4B;AAAA,MAAhBC,QAAgB,SAAhBA,QAAgB;;AAAA,gBACJD,MAAM,CAAE,aAAF,CADF;AAAA,MAC/BE,QAD+B,WAC/BA,QAD+B;AAAA,MACrBC,YADqB,WACrBA,YADqB;;AAEvC,MAAMC,KAAK,GAAGF,QAAQ,CAAED,QAAF,CAAtB;AAEA,SAAO;AACNN,IAAAA,IAAI,EAAEQ,YAAY,CAAEF,QAAF,CADZ;AAENP,IAAAA,SAAS,EAAEU,KAAK,GAAG,0BAAcA,KAAK,CAACC,IAApB,CAAH,GAAgC;AAF1C,GAAP;AAIA,CARD,CADuB,EAUvB,wBAAc,UAAEC,QAAF;AAAA,6BAAcC,QAAd;AAAA,MAAcA,QAAd,+BAAyBC,YAAzB;AAAA,MAA+BP,QAA/B,SAA+BA,QAA/B;AAAA,SAAiD;AAC9DL,IAAAA,YAD8D,0BAC/C;AACdU,MAAAA,QAAQ,CAAE,aAAF,CAAR,CAA0BG,eAA1B,CAA2CR,QAA3C;AACAM,MAAAA,QAAQ;AACR;AAJ6D,GAAjD;AAAA,CAAd,CAVuB,CAAT,EAgBVd,eAhBU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem } from '@wordpress/components';\nimport { getBlockType, hasBlockSupport } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\nexport function BlockModeToggle( { blockType, mode, onToggleMode, small = false } ) {\n\tif ( ! hasBlockSupport( blockType, 'html', true ) ) {\n\t\treturn null;\n\t}\n\n\tconst label = mode === 'visual' ?\n\t\t__( 'Edit as HTML' ) :\n\t\t__( 'Edit visually' );\n\n\treturn (\n\t\t<MenuItem\n\t\t\tclassName=\"editor-block-settings-menu__control\"\n\t\t\tonClick={ onToggleMode }\n\t\t\ticon=\"html\"\n\t\t\tlabel={ small ? label : undefined }\n\t\t>\n\t\t\t{ ! small && label }\n\t\t</MenuItem>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlock, getBlockMode } = select( 'core/editor' );\n\t\tconst block = getBlock( clientId );\n\n\t\treturn {\n\t\t\tmode: getBlockMode( clientId ),\n\t\t\tblockType: block ? getBlockType( block.name ) : null,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { onToggle = noop, clientId } ) => ( {\n\t\tonToggleMode() {\n\t\t\tdispatch( 'core/editor' ).toggleBlockMode( clientId );\n\t\t\tonToggle();\n\t\t},\n\t} ) ),\n] )( BlockModeToggle );\n"]}