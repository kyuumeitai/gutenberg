{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/inner-blocks/index.js"],"names":["InnerBlocks","arguments","updateNestedSettings","props","templateLock","parentLock","undefined","innerBlocks","block","length","getTemplateLock","synchronizeBlocksWithTemplate","prevProps","template","hasTemplateChanged","replaceInnerBlocks","nextBlocks","blockListSettings","allowedBlocks","newSettings","clientId","isSmallScreen","isSelectedBlockInRoot","classes","Component","context","select","ownProps","isBlockSelected","hasSelectedInnerBlock","getBlock","getBlockListSettings","getBlockRootClientId","rootClientId","dispatch","replaceBlocks","insertBlocks","updateBlockListSettings","blocks","clientIds","settings","Content","BlockContent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { pick, isEqual, map } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { synchronizeBlocksWithTemplate, withBlockContentContext } from '@wordpress/blocks';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockList from '../block-list';\nimport { withBlockEditContext } from '../block-edit/context';\n\nclass InnerBlocks extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.updateNestedSettings();\n\t}\n\n\tgetTemplateLock() {\n\t\tconst {\n\t\t\ttemplateLock,\n\t\t\tparentLock,\n\t\t} = this.props;\n\t\treturn templateLock === undefined ? parentLock : templateLock;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { innerBlocks } = this.props.block;\n\t\t// only synchronize innerBlocks with template if innerBlocks are empty or a locking all exists\n\t\tif ( innerBlocks.length === 0 || this.getTemplateLock() === 'all' ) {\n\t\t\treturn \tthis.synchronizeBlocksWithTemplate();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { template, block } = this.props;\n\t\tconst { innerBlocks } = block;\n\n\t\tthis.updateNestedSettings();\n\t\t// only synchronize innerBlocks with template if innerBlocks are empty or a locking all exists\n\t\tif ( innerBlocks.length === 0 || this.getTemplateLock() === 'all' ) {\n\t\t\tconst hasTemplateChanged = ! isEqual( template, prevProps.template );\n\t\t\tif ( hasTemplateChanged ) {\n\t\t\t\tthis.synchronizeBlocksWithTemplate();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Called on mount or when a mismatch exists between the templates and\n\t * inner blocks, synchronizes inner blocks with the template, replacing\n\t * current blocks.\n\t */\n\tsynchronizeBlocksWithTemplate() {\n\t\tconst { template, block, replaceInnerBlocks } = this.props;\n\t\tconst { innerBlocks } = block;\n\n\t\t// Synchronize with templates. If the next set differs, replace.\n\t\tconst nextBlocks = synchronizeBlocksWithTemplate( innerBlocks, template );\n\t\tif ( ! isEqual( nextBlocks, innerBlocks\t) ) {\n\t\t\treplaceInnerBlocks( nextBlocks );\n\t\t}\n\t}\n\n\tupdateNestedSettings() {\n\t\tconst {\n\t\t\tblockListSettings,\n\t\t\tallowedBlocks,\n\t\t\tupdateNestedSettings,\n\t\t} = this.props;\n\n\t\tconst newSettings = {\n\t\t\tallowedBlocks,\n\t\t\ttemplateLock: this.getTemplateLock(),\n\t\t};\n\n\t\tif ( ! isShallowEqual( blockListSettings, newSettings ) ) {\n\t\t\tupdateNestedSettings( newSettings );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclientId,\n\t\t\tallowedBlocks,\n\t\t\ttemplateLock,\n\t\t\ttemplate,\n\t\t\tisSmallScreen,\n\t\t\tisSelectedBlockInRoot,\n\t\t} = this.props;\n\n\t\tconst classes = classnames( 'editor-inner-blocks', {\n\t\t\t'has-overlay': isSmallScreen && ! isSelectedBlockInRoot,\n\t\t} );\n\n\t\treturn (\n\t\t\t<div className={ classes }>\n\t\t\t\t<BlockList\n\t\t\t\t\trootClientId={ clientId }\n\t\t\t\t\t{ ...{ allowedBlocks, templateLock, template } }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nInnerBlocks = compose( [\n\twithBlockEditContext( ( context ) => pick( context, [ 'clientId' ] ) ),\n\twithViewportMatch( { isSmallScreen: '< medium' } ),\n\twithSelect( ( select, ownProps ) => {\n\t\tconst {\n\t\t\tisBlockSelected,\n\t\t\thasSelectedInnerBlock,\n\t\t\tgetBlock,\n\t\t\tgetBlockListSettings,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetTemplateLock,\n\t\t} = select( 'core/editor' );\n\t\tconst { clientId } = ownProps;\n\t\tconst rootClientId = getBlockRootClientId( clientId );\n\t\treturn {\n\t\t\tisSelectedBlockInRoot: isBlockSelected( clientId ) || hasSelectedInnerBlock( clientId ),\n\t\t\tblock: getBlock( clientId ),\n\t\t\tblockListSettings: getBlockListSettings( clientId ),\n\t\t\tparentLock: getTemplateLock( rootClientId ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst {\n\t\t\treplaceBlocks,\n\t\t\tinsertBlocks,\n\t\t\tupdateBlockListSettings,\n\t\t} = dispatch( 'core/editor' );\n\t\tconst { block, clientId } = ownProps;\n\n\t\treturn {\n\t\t\treplaceInnerBlocks( blocks ) {\n\t\t\t\tconst clientIds = map( block.innerBlocks, 'clientId' );\n\t\t\t\tif ( clientIds.length ) {\n\t\t\t\t\treplaceBlocks( clientIds, blocks );\n\t\t\t\t} else {\n\t\t\t\t\tinsertBlocks( blocks, undefined, clientId );\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdateNestedSettings( settings ) {\n\t\t\t\tdispatch( updateBlockListSettings( clientId, settings ) );\n\t\t\t},\n\t\t};\n\t} ),\n] )( InnerBlocks );\n\nInnerBlocks.Content = withBlockContentContext(\n\t( { BlockContent } ) => <BlockContent />\n);\n\nexport default InnerBlocks;\n"]}