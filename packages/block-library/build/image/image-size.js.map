{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/block-library/src/image/image-size.js"],"names":["ImageSize","arguments","state","width","undefined","height","bindContainer","bind","calculateSize","ref","container","prevProps","props","src","setState","fetchImageSize","dirtynessTrigger","image","onload","noop","window","Image","maxWidth","clientWidth","exceedMaxWidth","ratio","sizes","imageWidth","imageHeight","containerWidth","containerHeight","clientHeight","imageWidthWithinContainer","imageHeightWithinContainer","children","Component","resize"],"mappings":";;;;;;;;;AASA;;;;;;;;;;;;;;AANA;;AAKA;;AARA;;;;AAKA;;;IAMMA,S;;;;;AACL,uBAAc;AAAA;;AAAA;AACb,gHAAUC,SAAV;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAEC,SADK;AAEZC,MAAAA,MAAM,EAAED;AAFI,KAAb;AAIA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,mFAArB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,mFAArB;AAPa;AAQb;;;;kCAEcE,G,EAAM;AACpB,WAAKC,SAAL,GAAiBD,GAAjB;AACA;;;uCAEmBE,S,EAAY;AAC/B,UAAK,KAAKC,KAAL,CAAWC,GAAX,KAAmBF,SAAS,CAACE,GAAlC,EAAwC;AACvC,aAAKC,QAAL,CAAe;AACdX,UAAAA,KAAK,EAAEC,SADO;AAEdC,UAAAA,MAAM,EAAED;AAFM,SAAf;AAIA,aAAKW,cAAL;AACA;;AAED,UAAK,KAAKH,KAAL,CAAWI,gBAAX,KAAgCL,SAAS,CAACK,gBAA/C,EAAkE;AACjE,aAAKR,aAAL;AACA;AACD;;;wCAEmB;AACnB,WAAKO,cAAL;AACA;;;2CAEsB;AACtB,UAAK,KAAKE,KAAV,EAAkB;AACjB,aAAKA,KAAL,CAAWC,MAAX,GAAoBC,YAApB;AACA;AACD;;;qCAEgB;AAChB,WAAKF,KAAL,GAAa,IAAIG,MAAM,CAACC,KAAX,EAAb;AACA,WAAKJ,KAAL,CAAWC,MAAX,GAAoB,KAAKV,aAAzB;AACA,WAAKS,KAAL,CAAWJ,GAAX,GAAiB,KAAKD,KAAL,CAAWC,GAA5B;AACA;;;oCAEe;AACf,UAAMS,QAAQ,GAAG,KAAKZ,SAAL,CAAea,WAAhC;AACA,UAAMC,cAAc,GAAG,KAAKP,KAAL,CAAWd,KAAX,GAAmBmB,QAA1C;AACA,UAAMG,KAAK,GAAG,KAAKR,KAAL,CAAWZ,MAAX,GAAoB,KAAKY,KAAL,CAAWd,KAA7C;AACA,UAAMA,KAAK,GAAGqB,cAAc,GAAGF,QAAH,GAAc,KAAKL,KAAL,CAAWd,KAArD;AACA,UAAME,MAAM,GAAGmB,cAAc,GAAGF,QAAQ,GAAGG,KAAd,GAAsB,KAAKR,KAAL,CAAWZ,MAA9D;AACA,WAAKS,QAAL,CAAe;AAAEX,QAAAA,KAAK,EAALA,KAAF;AAASE,QAAAA,MAAM,EAANA;AAAT,OAAf;AACA;;;6BAEQ;AACR,UAAMqB,KAAK,GAAG;AACbC,QAAAA,UAAU,EAAE,KAAKV,KAAL,IAAc,KAAKA,KAAL,CAAWd,KADxB;AAEbyB,QAAAA,WAAW,EAAE,KAAKX,KAAL,IAAc,KAAKA,KAAL,CAAWZ,MAFzB;AAGbwB,QAAAA,cAAc,EAAE,KAAKnB,SAAL,IAAkB,KAAKA,SAAL,CAAea,WAHpC;AAIbO,QAAAA,eAAe,EAAE,KAAKpB,SAAL,IAAkB,KAAKA,SAAL,CAAeqB,YAJrC;AAKbC,QAAAA,yBAAyB,EAAE,KAAK9B,KAAL,CAAWC,KALzB;AAMb8B,QAAAA,0BAA0B,EAAE,KAAK/B,KAAL,CAAWG;AAN1B,OAAd;AAQA,aACC;AAAK,QAAA,GAAG,EAAG,KAAKC;AAAhB,SACG,KAAKM,KAAL,CAAWsB,QAAX,CAAqBR,KAArB,CADH,CADD;AAKA;;;EApEsBS,kB;;eAuET,+BAAkB;AAChCC,EAAAA,MAAM,EAAE;AADwB,CAAlB,EAEVpC,SAFU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { withGlobalEvents } from '@wordpress/compose';\nimport { Component } from '@wordpress/element';\n\nclass ImageSize extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t};\n\t\tthis.bindContainer = this.bindContainer.bind( this );\n\t\tthis.calculateSize = this.calculateSize.bind( this );\n\t}\n\n\tbindContainer( ref ) {\n\t\tthis.container = ref;\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.src !== prevProps.src ) {\n\t\t\tthis.setState( {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t} );\n\t\t\tthis.fetchImageSize();\n\t\t}\n\n\t\tif ( this.props.dirtynessTrigger !== prevProps.dirtynessTrigger ) {\n\t\t\tthis.calculateSize();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchImageSize();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.image ) {\n\t\t\tthis.image.onload = noop;\n\t\t}\n\t}\n\n\tfetchImageSize() {\n\t\tthis.image = new window.Image();\n\t\tthis.image.onload = this.calculateSize;\n\t\tthis.image.src = this.props.src;\n\t}\n\n\tcalculateSize() {\n\t\tconst maxWidth = this.container.clientWidth;\n\t\tconst exceedMaxWidth = this.image.width > maxWidth;\n\t\tconst ratio = this.image.height / this.image.width;\n\t\tconst width = exceedMaxWidth ? maxWidth : this.image.width;\n\t\tconst height = exceedMaxWidth ? maxWidth * ratio : this.image.height;\n\t\tthis.setState( { width, height } );\n\t}\n\n\trender() {\n\t\tconst sizes = {\n\t\t\timageWidth: this.image && this.image.width,\n\t\t\timageHeight: this.image && this.image.height,\n\t\t\tcontainerWidth: this.container && this.container.clientWidth,\n\t\t\tcontainerHeight: this.container && this.container.clientHeight,\n\t\t\timageWidthWithinContainer: this.state.width,\n\t\t\timageHeightWithinContainer: this.state.height,\n\t\t};\n\t\treturn (\n\t\t\t<div ref={ this.bindContainer }>\n\t\t\t\t{ this.props.children( sizes ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withGlobalEvents( {\n\tresize: 'calculateSize',\n} )( ImageSize );\n"]}