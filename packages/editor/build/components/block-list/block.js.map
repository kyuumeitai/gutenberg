{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/block-list/block.js"],"names":["BlockListBlock","arguments","setBlockListRef","bind","bindBlockNode","setAttributes","maybeHover","hideHoverEffects","mergeBlocks","insertBlocksAfter","onFocus","preventDrag","onPointerDown","deleteOrInsertAfterWrapper","onBlockError","onTouchStart","onClick","onDragStart","onDragEnd","selectOnOpen","hadTouchStart","state","error","dragging","isHovered","props","isSelected","focusTabbable","prevProps","isTypingWithinBlock","isFirstMultiSelected","wrapperNode","focus","node","blockRef","clientId","ignoreInnerBlocks","initialPosition","contains","document","activeElement","textInputs","tabbable","find","filter","isTextField","isReverse","target","last","first","attributes","block","onChange","type","name","metaAttributes","result","value","key","meta","onMetaChange","isPartOfMultiSelection","isMultiSelecting","setState","forward","previousBlockClientId","nextBlockClientId","onMerge","blocks","onInsertBlocks","order","onSelect","event","preventDefault","button","shiftKey","onShiftSelection","onSelectionStart","keyCode","isLocked","ENTER","onInsertDefaultBlockAfter","BACKSPACE","DELETE","onRemove","open","mode","isFocusMode","hasFixedToolbar","isFirst","isLast","rootClientId","isCaretWithinFormattedText","hoverArea","isEmptyDefaultBlock","isMovable","isPreviousBlockADefaultEmptyBlock","isParentOfSelectedBlock","isDraggable","blockName","isValid","blockType","blockLabel","title","isUnregisteredBlock","showEmptyBlockSideInserter","showSideInserter","shouldAppearSelected","shouldAppearHovered","shouldRenderMovers","shouldShowBreadcrumb","shouldShowContextualToolbar","shouldShowMobileToolbar","shouldShowInsertionPoint","canShowInBetweenInserter","wrapperClassName","onReplace","wrapperProps","getEditWrapperProps","blockElementId","blockEdit","undefined","isSelectionEnabled","toggleSelection","display","Component","applyWithSelect","select","isLargeViewport","isBlockSelected","getPreviousBlockClientId","getNextBlockClientId","getBlock","isAncestorMultiSelected","isBlockMultiSelected","isFirstMultiSelectedBlock","isTyping","getBlockIndex","getEditedPostAttribute","getBlockMode","getSelectedBlocksInitialCaretPosition","getEditorSettings","hasSelectedInnerBlock","getTemplateLock","focusMode","previousBlock","templateLock","applyWithDispatch","dispatch","ownProps","updateBlockAttributes","selectBlock","insertBlocks","insertDefaultBlock","removeBlock","replaceBlocks","editPost","index","selectionEnabled","withHoverAreas"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, reduce, size, first, last } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, Fragment } from '@wordpress/element';\nimport {\n\tfocus,\n\tisTextField,\n\tplaceCaretAtHorizontalEdge,\n\tplaceCaretAtVerticalEdge,\n} from '@wordpress/dom';\nimport { BACKSPACE, DELETE, ENTER } from '@wordpress/keycodes';\nimport {\n\tgetBlockType,\n\tgetSaveElement,\n\tisReusableBlock,\n\tisUnmodifiedDefaultBlock,\n\tgetUnregisteredTypeHandlerName,\n} from '@wordpress/blocks';\nimport { withFilters } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockEdit from '../block-edit';\nimport BlockMover from '../block-mover';\nimport BlockDropZone from '../block-drop-zone';\nimport BlockInvalidWarning from './block-invalid-warning';\nimport BlockCrashWarning from './block-crash-warning';\nimport BlockCrashBoundary from './block-crash-boundary';\nimport BlockHtml from './block-html';\nimport BlockBreadcrumb from './breadcrumb';\nimport BlockContextualToolbar from './block-contextual-toolbar';\nimport BlockMultiControls from './multi-controls';\nimport BlockMobileToolbar from './block-mobile-toolbar';\nimport BlockInsertionPoint from './insertion-point';\nimport IgnoreNestedEvents from '../ignore-nested-events';\nimport InserterWithShortcuts from '../inserter-with-shortcuts';\nimport Inserter from '../inserter';\nimport withHoverAreas from './with-hover-areas';\nimport { isInsideRootBlock } from '../../utils/dom';\n\nexport class BlockListBlock extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.setBlockListRef = this.setBlockListRef.bind( this );\n\t\tthis.bindBlockNode = this.bindBlockNode.bind( this );\n\t\tthis.setAttributes = this.setAttributes.bind( this );\n\t\tthis.maybeHover = this.maybeHover.bind( this );\n\t\tthis.hideHoverEffects = this.hideHoverEffects.bind( this );\n\t\tthis.mergeBlocks = this.mergeBlocks.bind( this );\n\t\tthis.insertBlocksAfter = this.insertBlocksAfter.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.preventDrag = this.preventDrag.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.deleteOrInsertAfterWrapper = this.deleteOrInsertAfterWrapper.bind( this );\n\t\tthis.onBlockError = this.onBlockError.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onClick = this.onClick.bind( this );\n\t\tthis.onDragStart = this.onDragStart.bind( this );\n\t\tthis.onDragEnd = this.onDragEnd.bind( this );\n\t\tthis.selectOnOpen = this.selectOnOpen.bind( this );\n\t\tthis.hadTouchStart = false;\n\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tdragging: false,\n\t\t\tisHovered: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.isSelected ) {\n\t\t\tthis.focusTabbable();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.isTypingWithinBlock || this.props.isSelected ) {\n\t\t\tthis.hideHoverEffects();\n\t\t}\n\n\t\tif ( this.props.isSelected && ! prevProps.isSelected ) {\n\t\t\tthis.focusTabbable( true );\n\t\t}\n\n\t\t// When triggering a multi-selection,\n\t\t// move the focus to the wrapper of the first selected block.\n\t\tif ( this.props.isFirstMultiSelected && ! prevProps.isFirstMultiSelected ) {\n\t\t\tthis.wrapperNode.focus();\n\t\t}\n\t}\n\n\tsetBlockListRef( node ) {\n\t\tthis.wrapperNode = node;\n\t\tthis.props.blockRef( node, this.props.clientId );\n\t}\n\n\tbindBlockNode( node ) {\n\t\tthis.node = node;\n\t}\n\n\t/**\n\t * When a block becomes selected, transition focus to an inner tabbable.\n\t *\n\t * @param {boolean} ignoreInnerBlocks Should not focus inner blocks.\n\t */\n\tfocusTabbable( ignoreInnerBlocks ) {\n\t\tconst { initialPosition } = this.props;\n\n\t\t// Focus is captured by the wrapper node, so while focus transition\n\t\t// should only consider tabbables within editable display, since it\n\t\t// may be the wrapper itself or a side control which triggered the\n\t\t// focus event, don't unnecessary transition to an inner tabbable.\n\t\tif ( this.wrapperNode.contains( document.activeElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find all tabbables within node.\n\t\tconst textInputs = focus.tabbable\n\t\t\t.find( this.node )\n\t\t\t.filter( isTextField )\n\t\t\t// Exclude inner blocks\n\t\t\t.filter( ( node ) => ! ignoreInnerBlocks || isInsideRootBlock( this.node, node ) );\n\n\t\t// If reversed (e.g. merge via backspace), use the last in the set of\n\t\t// tabbables.\n\t\tconst isReverse = -1 === initialPosition;\n\t\tconst target = ( isReverse ? last : first )( textInputs );\n\n\t\tif ( ! target ) {\n\t\t\tthis.wrapperNode.focus();\n\t\t\treturn;\n\t\t}\n\n\t\ttarget.focus();\n\n\t\t// In reverse case, need to explicitly place caret position.\n\t\tif ( isReverse ) {\n\t\t\tplaceCaretAtHorizontalEdge( target, true );\n\t\t\tplaceCaretAtVerticalEdge( target, true );\n\t\t}\n\t}\n\n\tsetAttributes( attributes ) {\n\t\tconst { block, onChange } = this.props;\n\t\tconst type = getBlockType( block.name );\n\t\tonChange( block.clientId, attributes );\n\n\t\tconst metaAttributes = reduce( attributes, ( result, value, key ) => {\n\t\t\tif ( get( type, [ 'attributes', key, 'source' ] ) === 'meta' ) {\n\t\t\t\tresult[ type.attributes[ key ].meta ] = value;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {} );\n\n\t\tif ( size( metaAttributes ) ) {\n\t\t\tthis.props.onMetaChange( {\n\t\t\t\t...this.props.meta,\n\t\t\t\t...metaAttributes,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonTouchStart() {\n\t\t// Detect touchstart to disable hover on iOS\n\t\tthis.hadTouchStart = true;\n\t}\n\n\tonClick() {\n\t\t// Clear touchstart detection\n\t\t// Browser will try to emulate mouse events also see https://www.html5rocks.com/en/mobile/touchandmouse/\n\t\tthis.hadTouchStart = false;\n\t}\n\n\t/**\n\t * A mouseover event handler to apply hover effect when a pointer device is\n\t * placed within the bounds of the block. The mouseover event is preferred\n\t * over mouseenter because it may be the case that a previous mouseenter\n\t * event was blocked from being handled by a IgnoreNestedEvents component,\n\t * therefore transitioning out of a nested block to the bounds of the block\n\t * would otherwise not trigger a hover effect.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter\n\t */\n\tmaybeHover() {\n\t\tconst { isPartOfMultiSelection, isSelected } = this.props;\n\t\tconst { isHovered } = this.state;\n\n\t\tif ( isHovered || isPartOfMultiSelection || isSelected ||\n\t\t\t\tthis.props.isMultiSelecting || this.hadTouchStart ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState( { isHovered: true } );\n\t}\n\n\t/**\n\t * Sets the block state as unhovered if currently hovering. There are cases\n\t * where mouseleave may occur but the block is not hovered (multi-select),\n\t * so to avoid unnecesary renders, the state is only set if hovered.\n\t */\n\thideHoverEffects() {\n\t\tif ( this.state.isHovered ) {\n\t\t\tthis.setState( { isHovered: false } );\n\t\t}\n\t}\n\n\tmergeBlocks( forward = false ) {\n\t\tconst { block, previousBlockClientId, nextBlockClientId, onMerge } = this.props;\n\n\t\t// Do nothing when it's the first block.\n\t\tif (\n\t\t\t( ! forward && ! previousBlockClientId ) ||\n\t\t\t( forward && ! nextBlockClientId )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( forward ) {\n\t\t\tonMerge( block.clientId, nextBlockClientId );\n\t\t} else {\n\t\t\tonMerge( previousBlockClientId, block.clientId );\n\t\t}\n\t}\n\n\tinsertBlocksAfter( blocks ) {\n\t\tthis.props.onInsertBlocks( blocks, this.props.order + 1 );\n\t}\n\n\t/**\n\t * Marks the block as selected when focused and not already selected. This\n\t * specifically handles the case where block does not set focus on its own\n\t * (via `setFocus`), typically if there is no focusable input in the block.\n\t *\n\t * @return {void}\n\t */\n\tonFocus() {\n\t\tif ( ! this.props.isSelected && ! this.props.isPartOfMultiSelection ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t}\n\n\t/**\n\t * Prevents default dragging behavior within a block to allow for multi-\n\t * selection to take effect unhampered.\n\t *\n\t * @param {DragEvent} event Drag event.\n\t *\n\t * @return {void}\n\t */\n\tpreventDrag( event ) {\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Begins tracking cursor multi-selection when clicking down within block.\n\t *\n\t * @param {MouseEvent} event A mousedown event.\n\t *\n\t * @return {void}\n\t */\n\tonPointerDown( event ) {\n\t\t// Not the main button.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\t\tif ( event.button !== 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( event.shiftKey ) {\n\t\t\tif ( ! this.props.isSelected ) {\n\t\t\t\tthis.props.onShiftSelection( this.props.clientId );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.props.onSelectionStart( this.props.clientId );\n\n\t\t\t// Allow user to escape out of a multi-selection to a singular\n\t\t\t// selection of a block via click. This is handled here since\n\t\t\t// onFocus excludes blocks involved in a multiselection, as\n\t\t\t// focus can be incurred by starting a multiselection (focus\n\t\t\t// moved to first block's multi-controls).\n\t\t\tif ( this.props.isPartOfMultiSelection ) {\n\t\t\t\tthis.props.onSelect();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Interprets keydown event intent to remove or insert after block if key\n\t * event occurs on wrapper node. This can occur when the block has no text\n\t * fields of its own, particularly after initial insertion, to allow for\n\t * easy deletion and continuous writing flow to add additional content.\n\t *\n\t * @param {KeyboardEvent} event Keydown event.\n\t */\n\tdeleteOrInsertAfterWrapper( event ) {\n\t\tconst { keyCode, target } = event;\n\n\t\tif (\n\t\t\t! this.props.isSelected ||\n\t\t\ttarget !== this.wrapperNode ||\n\t\t\tthis.props.isLocked\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch ( keyCode ) {\n\t\t\tcase ENTER:\n\t\t\t\t// Insert default block after current block if enter and event\n\t\t\t\t// not already handled by descendant.\n\t\t\t\tthis.props.onInsertDefaultBlockAfter();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\n\t\t\tcase BACKSPACE:\n\t\t\tcase DELETE:\n\t\t\t\t// Remove block on backspace.\n\t\t\t\tconst { clientId, onRemove } = this.props;\n\t\t\t\tonRemove( clientId );\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tonBlockError( error ) {\n\t\tthis.setState( { error } );\n\t}\n\n\tonDragStart() {\n\t\tthis.setState( { dragging: true } );\n\t}\n\n\tonDragEnd() {\n\t\tthis.setState( { dragging: false } );\n\t}\n\n\tselectOnOpen( open ) {\n\t\tif ( open && ! this.props.isSelected ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tblock,\n\t\t\torder,\n\t\t\tmode,\n\t\t\tisFocusMode,\n\t\t\thasFixedToolbar,\n\t\t\tisLocked,\n\t\t\tisFirst,\n\t\t\tisLast,\n\t\t\tclientId,\n\t\t\trootClientId,\n\t\t\tisSelected,\n\t\t\tisPartOfMultiSelection,\n\t\t\tisFirstMultiSelected,\n\t\t\tisTypingWithinBlock,\n\t\t\tisCaretWithinFormattedText,\n\t\t\tisMultiSelecting,\n\t\t\thoverArea,\n\t\t\tisEmptyDefaultBlock,\n\t\t\tisMovable,\n\t\t\tisPreviousBlockADefaultEmptyBlock,\n\t\t\tisParentOfSelectedBlock,\n\t\t\tisDraggable,\n\t\t} = this.props;\n\t\tconst isHovered = this.state.isHovered && ! isMultiSelecting;\n\t\tconst { name: blockName, isValid } = block;\n\t\tconst blockType = getBlockType( blockName );\n\t\t// translators: %s: Type of block (i.e. Text, Image etc)\n\t\tconst blockLabel = sprintf( __( 'Block: %s' ), blockType.title );\n\t\t// The block as rendered in the editor is composed of general block UI\n\t\t// (mover, toolbar, wrapper) and the display of the block content.\n\n\t\tconst isUnregisteredBlock = block.name === getUnregisteredTypeHandlerName();\n\n\t\t// If the block is selected and we're typing the block should not appear.\n\t\t// Empty paragraph blocks should always show up as unselected.\n\t\tconst showEmptyBlockSideInserter = ( isSelected || isHovered ) && isEmptyDefaultBlock && isValid;\n\t\tconst showSideInserter = ( isSelected || isHovered ) && isEmptyDefaultBlock;\n\t\tconst shouldAppearSelected = ! isFocusMode && ! hasFixedToolbar && ! showSideInserter && isSelected && ! isTypingWithinBlock;\n\t\tconst shouldAppearHovered = ! isFocusMode && ! hasFixedToolbar && isHovered && ! isEmptyDefaultBlock;\n\t\t// We render block movers and block settings to keep them tabbale even if hidden\n\t\tconst shouldRenderMovers = ! isFocusMode && ( isSelected || hoverArea === 'left' ) && ! showEmptyBlockSideInserter && ! isMultiSelecting && ! isPartOfMultiSelection && ! isTypingWithinBlock;\n\t\tconst shouldShowBreadcrumb = ! isFocusMode && isHovered && ! isEmptyDefaultBlock;\n\t\tconst shouldShowContextualToolbar = ! hasFixedToolbar && ! showSideInserter && ( ( isSelected && ( ! isTypingWithinBlock || isCaretWithinFormattedText ) ) || isFirstMultiSelected );\n\t\tconst shouldShowMobileToolbar = shouldAppearSelected;\n\t\tconst { error, dragging } = this.state;\n\n\t\t// Insertion point can only be made visible if the block is at the\n\t\t// the extent of a multi-selection, or not in a multi-selection.\n\t\tconst shouldShowInsertionPoint = ( isPartOfMultiSelection && isFirstMultiSelected ) || ! isPartOfMultiSelection;\n\t\tconst canShowInBetweenInserter = ! isEmptyDefaultBlock && ! isPreviousBlockADefaultEmptyBlock;\n\n\t\t// The wp-block className is important for editor styles.\n\t\t// Generate the wrapper class names handling the different states of the block.\n\t\tconst wrapperClassName = classnames( 'wp-block editor-block-list__block', {\n\t\t\t'has-warning': ! isValid || !! error || isUnregisteredBlock,\n\t\t\t'is-selected': shouldAppearSelected,\n\t\t\t'is-multi-selected': isPartOfMultiSelection,\n\t\t\t'is-hovered': shouldAppearHovered,\n\t\t\t'is-reusable': isReusableBlock( blockType ),\n\t\t\t'is-dragging': dragging,\n\t\t\t'is-typing': isTypingWithinBlock,\n\t\t\t'is-focused': isFocusMode && ( isSelected || isParentOfSelectedBlock ),\n\t\t\t'is-focus-mode': isFocusMode,\n\t\t} );\n\n\t\tconst { onReplace } = this.props;\n\n\t\t// Determine whether the block has props to apply to the wrapper.\n\t\tlet wrapperProps = this.props.wrapperProps;\n\t\tif ( blockType.getEditWrapperProps ) {\n\t\t\twrapperProps = {\n\t\t\t\t...wrapperProps,\n\t\t\t\t...blockType.getEditWrapperProps( block.attributes ),\n\t\t\t};\n\t\t}\n\t\tconst blockElementId = `block-${ clientId }`;\n\n\t\t// We wrap the BlockEdit component in a div that hides it when editing in\n\t\t// HTML mode. This allows us to render all of the ancillary pieces\n\t\t// (InspectorControls, etc.) which are inside `BlockEdit` but not\n\t\t// `BlockHTML`, even in HTML mode.\n\t\tlet blockEdit = (\n\t\t\t<BlockEdit\n\t\t\t\tname={ blockName }\n\t\t\t\tisSelected={ isSelected }\n\t\t\t\tattributes={ block.attributes }\n\t\t\t\tsetAttributes={ this.setAttributes }\n\t\t\t\tinsertBlocksAfter={ isLocked ? undefined : this.insertBlocksAfter }\n\t\t\t\tonReplace={ isLocked ? undefined : onReplace }\n\t\t\t\tmergeBlocks={ isLocked ? undefined : this.mergeBlocks }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisSelectionEnabled={ this.props.isSelectionEnabled }\n\t\t\t\ttoggleSelection={ this.props.toggleSelection }\n\t\t\t/>\n\t\t);\n\t\tif ( mode !== 'visual' ) {\n\t\t\tblockEdit = <div style={ { display: 'none' } }>{ blockEdit }</div>;\n\t\t}\n\n\t\t// Disable reasons:\n\t\t//\n\t\t//  jsx-a11y/mouse-events-have-key-events:\n\t\t//   - onMouseOver is explicitly handling hover effects\n\t\t//\n\t\t//  jsx-a11y/no-static-element-interactions:\n\t\t//   - Each block can be selected by clicking on it\n\n\t\t/* eslint-disable jsx-a11y/mouse-events-have-key-events, jsx-a11y/no-static-element-interactions, jsx-a11y/onclick-has-role, jsx-a11y/click-events-have-key-events */\n\t\treturn (\n\t\t\t<IgnoreNestedEvents\n\t\t\t\tid={ blockElementId }\n\t\t\t\tref={ this.setBlockListRef }\n\t\t\t\tonMouseOver={ this.maybeHover }\n\t\t\t\tonMouseOverHandled={ this.hideHoverEffects }\n\t\t\t\tonMouseLeave={ this.hideHoverEffects }\n\t\t\t\tclassName={ wrapperClassName }\n\t\t\t\tdata-type={ block.name }\n\t\t\t\tonTouchStart={ this.onTouchStart }\n\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\tonClick={ this.onClick }\n\t\t\t\tonKeyDown={ this.deleteOrInsertAfterWrapper }\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\taria-label={ blockLabel }\n\t\t\t\tchildHandledEvents={ [\n\t\t\t\t\t'onDragStart',\n\t\t\t\t\t'onMouseDown',\n\t\t\t\t] }\n\t\t\t\t{ ...wrapperProps }\n\t\t\t>\n\t\t\t\t{ shouldShowInsertionPoint && (\n\t\t\t\t\t<BlockInsertionPoint\n\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\tcanShowInserter={ canShowInBetweenInserter }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<BlockDropZone\n\t\t\t\t\tindex={ order }\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t/>\n\t\t\t\t{ shouldRenderMovers && (\n\t\t\t\t\t<BlockMover\n\t\t\t\t\t\tclientIds={ clientId }\n\t\t\t\t\t\tblockElementId={ blockElementId }\n\t\t\t\t\t\tisFirst={ isFirst }\n\t\t\t\t\t\tisLast={ isLast }\n\t\t\t\t\t\tisHidden={ ! ( isHovered || isSelected ) || hoverArea !== 'left' }\n\t\t\t\t\t\tisDraggable={ ( isDraggable !== false ) && ( ! isPartOfMultiSelection && isMovable ) }\n\t\t\t\t\t\tonDragStart={ this.onDragStart }\n\t\t\t\t\t\tonDragEnd={ this.onDragEnd }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ shouldShowBreadcrumb && (\n\t\t\t\t\t<BlockBreadcrumb\n\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\tisHidden={ ! ( isHovered || isSelected ) || hoverArea !== 'left' }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ shouldShowContextualToolbar && <BlockContextualToolbar /> }\n\t\t\t\t{ isFirstMultiSelected && (\n\t\t\t\t\t<BlockMultiControls rootClientId={ rootClientId } />\n\t\t\t\t) }\n\t\t\t\t<IgnoreNestedEvents\n\t\t\t\t\tref={ this.bindBlockNode }\n\t\t\t\t\tonDragStart={ this.preventDrag }\n\t\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\t\tclassName=\"editor-block-list__block-edit\"\n\t\t\t\t\tdata-block={ clientId }\n\t\t\t\t>\n\t\t\t\t\t<BlockCrashBoundary onError={ this.onBlockError }>\n\t\t\t\t\t\t{ isValid && blockEdit }\n\t\t\t\t\t\t{ isValid && mode === 'html' && (\n\t\t\t\t\t\t\t<BlockHtml clientId={ clientId } />\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ! isValid && [\n\t\t\t\t\t\t\t<BlockInvalidWarning\n\t\t\t\t\t\t\t\tkey=\"invalid-warning\"\n\t\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t<div key=\"invalid-preview\">\n\t\t\t\t\t\t\t\t{ getSaveElement( blockType, block.attributes ) }\n\t\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t] }\n\t\t\t\t\t</BlockCrashBoundary>\n\t\t\t\t\t{ shouldShowMobileToolbar && (\n\t\t\t\t\t\t<BlockMobileToolbar\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! error && <BlockCrashWarning /> }\n\t\t\t\t</IgnoreNestedEvents>\n\t\t\t\t{ showEmptyBlockSideInserter && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className=\"editor-block-list__side-inserter\">\n\t\t\t\t\t\t\t<InserterWithShortcuts\n\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\tonToggle={ this.selectOnOpen }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"editor-block-list__empty-block-inserter\">\n\t\t\t\t\t\t\t<Inserter\n\t\t\t\t\t\t\t\tposition=\"top right\"\n\t\t\t\t\t\t\t\tonToggle={ this.selectOnOpen }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Fragment>\n\t\t\t\t) }\n\t\t\t</IgnoreNestedEvents>\n\t\t);\n\t\t/* eslint-enable jsx-a11y/no-static-element-interactions, jsx-a11y/onclick-has-role, jsx-a11y/click-events-have-key-events */\n\t}\n}\n\nconst applyWithSelect = withSelect( ( select, { clientId, rootClientId, isLargeViewport } ) => {\n\tconst {\n\t\tisBlockSelected,\n\t\tgetPreviousBlockClientId,\n\t\tgetNextBlockClientId,\n\t\tgetBlock,\n\t\tisAncestorMultiSelected,\n\t\tisBlockMultiSelected,\n\t\tisFirstMultiSelectedBlock,\n\t\tisMultiSelecting,\n\t\tisTyping,\n\t\tisCaretWithinFormattedText,\n\t\tgetBlockIndex,\n\t\tgetEditedPostAttribute,\n\t\tgetBlockMode,\n\t\tisSelectionEnabled,\n\t\tgetSelectedBlocksInitialCaretPosition,\n\t\tgetEditorSettings,\n\t\thasSelectedInnerBlock,\n\t\tgetTemplateLock,\n\t} = select( 'core/editor' );\n\tconst isSelected = isBlockSelected( clientId );\n\tconst { hasFixedToolbar, focusMode } = getEditorSettings();\n\tconst block = getBlock( clientId );\n\tconst previousBlockClientId = getPreviousBlockClientId( clientId );\n\tconst previousBlock = getBlock( previousBlockClientId );\n\tconst templateLock = getTemplateLock( rootClientId );\n\tconst isParentOfSelectedBlock = hasSelectedInnerBlock( clientId, true );\n\n\treturn {\n\t\tnextBlockClientId: getNextBlockClientId( clientId ),\n\t\tisPartOfMultiSelection: isBlockMultiSelected( clientId ) || isAncestorMultiSelected( clientId ),\n\t\tisFirstMultiSelected: isFirstMultiSelectedBlock( clientId ),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\t// We only care about this prop when the block is selected\n\t\t// Thus to avoid unnecessary rerenders we avoid updating the prop if the block is not selected.\n\t\tisTypingWithinBlock: ( isSelected || isParentOfSelectedBlock ) && isTyping(),\n\t\tisCaretWithinFormattedText: isCaretWithinFormattedText(),\n\t\torder: getBlockIndex( clientId, rootClientId ),\n\t\tmeta: getEditedPostAttribute( 'meta' ),\n\t\tmode: getBlockMode( clientId ),\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tinitialPosition: getSelectedBlocksInitialCaretPosition(),\n\t\tisEmptyDefaultBlock: block && isUnmodifiedDefaultBlock( block ),\n\t\tisPreviousBlockADefaultEmptyBlock: previousBlock && isUnmodifiedDefaultBlock( previousBlock ),\n\t\tisMovable: 'all' !== templateLock,\n\t\tisLocked: !! templateLock,\n\t\tisFocusMode: focusMode && isLargeViewport,\n\t\thasFixedToolbar: hasFixedToolbar && isLargeViewport,\n\t\tpreviousBlockClientId,\n\t\tblock,\n\t\tisSelected,\n\t\tisParentOfSelectedBlock,\n\t};\n} );\n\nconst applyWithDispatch = withDispatch( ( dispatch, ownProps ) => {\n\tconst {\n\t\tupdateBlockAttributes,\n\t\tselectBlock,\n\t\tinsertBlocks,\n\t\tinsertDefaultBlock,\n\t\tremoveBlock,\n\t\tmergeBlocks,\n\t\treplaceBlocks,\n\t\teditPost,\n\t\ttoggleSelection,\n\t} = dispatch( 'core/editor' );\n\n\treturn {\n\t\tonChange( clientId, attributes ) {\n\t\t\tupdateBlockAttributes( clientId, attributes );\n\t\t},\n\t\tonSelect( clientId = ownProps.clientId, initialPosition ) {\n\t\t\tselectBlock( clientId, initialPosition );\n\t\t},\n\t\tonInsertBlocks( blocks, index ) {\n\t\t\tconst { rootClientId } = ownProps;\n\t\t\tinsertBlocks( blocks, index, rootClientId );\n\t\t},\n\t\tonInsertDefaultBlockAfter() {\n\t\t\tconst { order, rootClientId } = ownProps;\n\t\t\tinsertDefaultBlock( {}, rootClientId, order + 1 );\n\t\t},\n\t\tonRemove( clientId ) {\n\t\t\tremoveBlock( clientId );\n\t\t},\n\t\tonMerge( ...args ) {\n\t\t\tmergeBlocks( ...args );\n\t\t},\n\t\tonReplace( blocks ) {\n\t\t\treplaceBlocks( [ ownProps.clientId ], blocks );\n\t\t},\n\t\tonMetaChange( meta ) {\n\t\t\teditPost( { meta } );\n\t\t},\n\t\ttoggleSelection( selectionEnabled ) {\n\t\t\ttoggleSelection( selectionEnabled );\n\t\t},\n\t};\n} );\n\nexport default compose(\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\tapplyWithSelect,\n\tapplyWithDispatch,\n\twithFilters( 'editor.BlockListBlock' ),\n\twithHoverAreas,\n)( BlockListBlock );\n"]}