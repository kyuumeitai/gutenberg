{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/block-compare/index.js"],"names":["BlockCompare","originalContent","newContent","difference","map","item","pos","classes","added","removed","value","block","blockType","name","rawContent","renderedContent","attributes","newBlocks","innerBlocks","join","props","onKeep","onConvert","convertor","convertButtonText","original","getOriginalContent","converted","getConvertedContent","getDifference","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { castArray } from 'lodash';\nimport { diffChars } from 'diff';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { getBlockType, getSaveContent, getSaveElement } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport BlockView from './block-view';\n\nclass BlockCompare extends Component {\n\tgetDifference( originalContent, newContent ) {\n\t\tconst difference = diffChars( originalContent, newContent );\n\n\t\treturn difference.map( ( item, pos ) => {\n\t\t\tconst classes = classnames( {\n\t\t\t\t'editor-block-compare__added': item.added,\n\t\t\t\t'editor-block-compare__removed': item.removed,\n\t\t\t} );\n\n\t\t\treturn <span key={ pos } className={ classes }>{ item.value }</span>;\n\t\t} );\n\t}\n\n\tgetOriginalContent( block ) {\n\t\t// Get current block details\n\t\tconst blockType = getBlockType( block.name );\n\n\t\treturn {\n\t\t\trawContent: block.originalContent,\n\t\t\trenderedContent: getSaveElement( blockType, block.attributes ),\n\t\t};\n\t}\n\n\tgetConvertedContent( block ) {\n\t\t// The convertor may return an array of items or a single item\n\t\tconst newBlocks = castArray( block );\n\n\t\t// Get converted block details\n\t\tconst newContent = newBlocks.map( ( item ) => getSaveContent( getBlockType( item.name ), item.attributes, item.innerBlocks ) );\n\t\tconst renderedContent = newBlocks.map( ( item ) => getSaveElement( getBlockType( item.name ), item.attributes, item.innerBlocks ) );\n\n\t\treturn {\n\t\t\trawContent: newContent.join( '' ),\n\t\t\trenderedContent,\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { block, onKeep, onConvert, convertor, convertButtonText } = this.props;\n\t\tconst original = this.getOriginalContent( block );\n\t\tconst converted = this.getConvertedContent( convertor( block ) );\n\t\tconst difference = this.getDifference( original.rawContent, converted.rawContent );\n\n\t\treturn (\n\t\t\t<div className=\"editor-block-compare__wrapper\">\n\t\t\t\t<BlockView\n\t\t\t\t\ttitle={ __( 'Current' ) }\n\t\t\t\t\tclassName=\"editor-block-compare__current\"\n\t\t\t\t\taction={ onKeep }\n\t\t\t\t\tactionText={ __( 'Convert to HTML' ) }\n\t\t\t\t\trawContent={ original.rawContent }\n\t\t\t\t\trenderedContent={ original.renderedContent }\n\t\t\t\t/>\n\n\t\t\t\t<BlockView\n\t\t\t\t\ttitle={ __( 'After Conversion' ) }\n\t\t\t\t\tclassName=\"editor-block-compare__converted\"\n\t\t\t\t\taction={ onConvert }\n\t\t\t\t\tactionText={ convertButtonText }\n\t\t\t\t\trawContent={ difference }\n\t\t\t\t\trenderedContent={ converted.renderedContent }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BlockCompare;\n"]}