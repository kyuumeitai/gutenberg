{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/viewport/src/store/selectors.js"],"names":["takeRight","isViewportMatch","state","query","key","split","join"],"mappings":";;AAAA;;;AAGA,SAASA,SAAT,QAA0B,QAA1B;AAEA;;;;;;;;;;;;;;;;;AAgBA,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAyC;AAC/C;AACA;AACA,MAAMC,GAAG,GAAGJ,SAAS,EAAI,IAAJ,4BAAaG,KAAK,CAACE,KAAN,CAAa,GAAb,CAAb,IAAmC,CAAnC,CAAT,CAAgDC,IAAhD,CAAsD,GAAtD,CAAZ;AAEA,SAAO,CAAC,CAAEJ,KAAK,CAAEE,GAAF,CAAf;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { takeRight } from 'lodash';\n\n/**\n * Returns true if the viewport matches the given query, or false otherwise.\n *\n * @param {Object} state Viewport state object.\n * @param {string} query Query string. Includes operator and breakpoint name,\n *                       space separated. Operator defaults to >=.\n *\n * @example\n *\n * ```js\n * isViewportMatch( state, '< huge' );\n * isViewPortMatch( state, 'medium' );\n * ```\n *\n * @return {boolean} Whether viewport matches query.\n */\nexport function isViewportMatch( state, query ) {\n\t// Pad to _at least_ two elements to take from the right, effectively\n\t// defaulting the left-most value.\n\tconst key = takeRight( [ '>=', ...query.split( ' ' ) ], 2 ).join( ' ' );\n\n\treturn !! state[ key ];\n}\n"]}