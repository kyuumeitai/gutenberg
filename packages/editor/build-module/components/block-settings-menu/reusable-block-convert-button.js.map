{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/block-settings-menu/reusable-block-convert-button.js"],"names":["noop","every","map","Fragment","MenuItem","__","isReusableBlock","withSelect","withDispatch","compose","ReusableBlockConvertButton","isVisible","isStaticBlock","onConvertToStatic","onConvertToReusable","select","clientIds","getBlock","canInsertBlockType","getReusableBlock","__experimentalGetReusableBlock","getFreeformFallbackBlockName","getUnregisteredFallbackBlockName","blocks","clientId","block","length","name","attributes","ref","dispatch","onToggle","convertBlockToReusable","__experimentalConvertBlockToReusable","convertBlockToStatic","__experimentalConvertBlockToStatic"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop, every, map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { isReusableBlock } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\nexport function ReusableBlockConvertButton( {\n\tisVisible,\n\tisStaticBlock,\n\tonConvertToStatic,\n\tonConvertToReusable,\n} ) {\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{ isStaticBlock && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tclassName=\"editor-block-settings-menu__control\"\n\t\t\t\t\ticon=\"controls-repeat\"\n\t\t\t\t\tonClick={ onConvertToReusable }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Add to Reusable Blocks' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t\t{ ! isStaticBlock && (\n\t\t\t\t<MenuItem\n\t\t\t\t\tclassName=\"editor-block-settings-menu__control\"\n\t\t\t\t\ticon=\"controls-repeat\"\n\t\t\t\t\tonClick={ onConvertToStatic }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Convert to Regular Block' ) }\n\t\t\t\t</MenuItem>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientIds } ) => {\n\t\tconst {\n\t\t\tgetBlock,\n\t\t\tcanInsertBlockType,\n\t\t\t__experimentalGetReusableBlock: getReusableBlock,\n\t\t} = select( 'core/editor' );\n\t\tconst {\n\t\t\tgetFreeformFallbackBlockName,\n\t\t\tgetUnregisteredFallbackBlockName,\n\t\t} = select( 'core/blocks' );\n\n\t\tconst blocks = map( clientIds, ( clientId ) => getBlock( clientId ) );\n\n\t\tconst isVisible = (\n\t\t\t// Guard against the case where a regular block has *just* been converted to a\n\t\t\t// reusable block and doesn't yet exist in the editor store.\n\t\t\tevery( blocks, ( block ) => !! block ) &&\n\n\t\t\t// Hide 'Add to Reusable Blocks' when Reusable Blocks are disabled, i.e. when\n\t\t\t// core/block is not in the allowed_block_types filter.\n\t\t\tcanInsertBlockType( 'core/block' ) &&\n\n\t\t\t// Hide 'Add to Reusable Blocks' on Classic blocks. Showing it causes a\n\t\t\t// confusing UX, because of its similarity to the 'Convert to Blocks' button.\n\t\t\t( blocks.length !== 1 || (\n\t\t\t\tblocks[ 0 ].name !== getFreeformFallbackBlockName() &&\n\t\t\t\tblocks[ 0 ].name !== getUnregisteredFallbackBlockName()\n\t\t\t) )\n\t\t);\n\n\t\treturn {\n\t\t\tisVisible,\n\t\t\tisStaticBlock: isVisible && (\n\t\t\t\tblocks.length !== 1 ||\n\t\t\t\t! isReusableBlock( blocks[ 0 ] ) ||\n\t\t\t\t! getReusableBlock( blocks[ 0 ].attributes.ref )\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientIds, onToggle = noop } ) => {\n\t\tconst {\n\t\t\t__experimentalConvertBlockToReusable: convertBlockToReusable,\n\t\t\t__experimentalConvertBlockToStatic: convertBlockToStatic,\n\t\t} = dispatch( 'core/editor' );\n\n\t\treturn {\n\t\t\tonConvertToStatic() {\n\t\t\t\tif ( clientIds.length !== 1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconvertBlockToStatic( clientIds[ 0 ] );\n\t\t\t\tonToggle();\n\t\t\t},\n\t\t\tonConvertToReusable() {\n\t\t\t\tconvertBlockToReusable( clientIds );\n\t\t\t\tonToggle();\n\t\t\t},\n\t\t};\n\t} ),\n] )( ReusableBlockConvertButton );\n"]}