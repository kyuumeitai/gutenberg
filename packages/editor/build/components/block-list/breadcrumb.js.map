{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/block-list/breadcrumb.js"],"names":["BlockBreadcrumb","arguments","state","isFocused","onFocus","bind","onBlur","event","setState","stopPropagation","props","clientId","rootClientId","isLight","Component","select","ownProps","getBlockRootClientId","getEditorSettings","hasFixedToolbar"],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;AALA;;AAMA;;AACA;;AACA;;AAKA;;AAhBA;;;;AAKA;;;;AAQA;;;;AAKA;;;;;;;;;IASaA,e;;;;;AACZ,6BAAc;AAAA;;AAAA;AACb,sHAAUC,SAAV;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AADC,KAAb;AAGA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,mFAAf;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,mFAAd;AANa;AAOb;;;;4BAEQE,K,EAAQ;AAChB,WAAKC,QAAL,CAAe;AACdL,QAAAA,SAAS,EAAE;AADG,OAAf,EADgB,CAKhB;AACA;AACA;;AACAI,MAAAA,KAAK,CAACE,eAAN;AACA;;;6BAEQ;AACR,WAAKD,QAAL,CAAe;AACdL,QAAAA,SAAS,EAAE;AADG,OAAf;AAGA;;;6BAEQ;AAAA,wBACoC,KAAKO,KADzC;AAAA,UACAC,QADA,eACAA,QADA;AAAA,UACUC,YADV,eACUA,YADV;AAAA,UACwBC,OADxB,eACwBA,OADxB;AAGR,aACC;AAAK,QAAA,SAAS,EAAG,yBAAY,+BAAZ,EAA6C;AAC7D,sBAAYA;AADiD,SAA7C;AAAjB,SAGC,4BAAC,mBAAD,QACGD,YAAY,IACb,4BAAC,iBAAD,QACC,4BAAC,mBAAD;AAAY,QAAA,QAAQ,EAAGA;AAAvB,QADD,EAEC;AAAM,QAAA,SAAS,EAAC;AAAhB,QAFD,CAFF,EAOC,4BAAC,mBAAD;AAAY,QAAA,QAAQ,EAAGD;AAAvB,QAPD,CAHD,CADD;AAeA;;;EA7CmCG,kB;;;;eAgDtB,sBAAS,CACvB,sBAAY,UAAEC,MAAF,EAAUC,QAAV,EAAwB;AAAA,gBACiBD,MAAM,CAAE,aAAF,CADvB;AAAA,MAC3BE,oBAD2B,WAC3BA,oBAD2B;AAAA,MACLC,iBADK,WACLA,iBADK;;AAAA,MAE3BP,QAF2B,GAEdK,QAFc,CAE3BL,QAF2B;AAInC,SAAO;AACNC,IAAAA,YAAY,EAAEK,oBAAoB,CAAEN,QAAF,CAD5B;AAENE,IAAAA,OAAO,EAAEK,iBAAiB,GAAGC;AAFvB,GAAP;AAIA,CARD,CADuB,CAAT,EAUVnB,eAVU,C","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Component, Fragment } from '@wordpress/element';\nimport { Toolbar } from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTitle from '../block-title';\n\n/**\n * Block breadcrumb component, displaying the label of the block. If the block\n * descends from a root block, a button is displayed enabling the user to select\n * the root block.\n *\n * @param {string}   props.clientId        Client ID of block.\n * @param {string}   props.rootClientId    Client ID of block's root.\n * @param {Function} props.selectRootBlock Callback to select root block.\n */\nexport class BlockBreadcrumb extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisFocused: false,\n\t\t};\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t}\n\n\tonFocus( event ) {\n\t\tthis.setState( {\n\t\t\tisFocused: true,\n\t\t} );\n\n\t\t// This is used for improved interoperability\n\t\t// with the block's `onFocus` handler which selects the block, thus conflicting\n\t\t// with the intention to select the root block.\n\t\tevent.stopPropagation();\n\t}\n\n\tonBlur() {\n\t\tthis.setState( {\n\t\t\tisFocused: false,\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst { clientId, rootClientId, isLight } = this.props;\n\n\t\treturn (\n\t\t\t<div className={ classnames( 'editor-block-list__breadcrumb', {\n\t\t\t\t'is-light': isLight,\n\t\t\t} ) }>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{ rootClientId && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<BlockTitle clientId={ rootClientId } />\n\t\t\t\t\t\t\t<span className=\"editor-block-list__descendant-arrow\" />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) }\n\t\t\t\t\t<BlockTitle clientId={ clientId } />\n\t\t\t\t</Toolbar>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getBlockRootClientId, getEditorSettings } = select( 'core/editor' );\n\t\tconst { clientId } = ownProps;\n\n\t\treturn {\n\t\t\trootClientId: getBlockRootClientId( clientId ),\n\t\t\tisLight: getEditorSettings().hasFixedToolbar,\n\t\t};\n\t} ),\n] )( BlockBreadcrumb );\n"]}