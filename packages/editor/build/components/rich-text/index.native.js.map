{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/rich-text/index.native.js"],"names":["FORMATTING_CONTROLS","icon","title","format","isRichTextValueEmpty","value","length","getFormatValue","formatName","isActive","RichText","arguments","onChange","bind","onEnter","onBackspace","onContentSizeChange","changeFormats","toggleFormat","onActiveFormatsChange","isEmpty","valueToFormat","state","formats","selectedNodeId","htmlText","start","end","onSplit","props","record","html","range","multilineTag","removeNode","unwrapNode","removeAttribute","filterString","before","after","lastEventCount","undefined","text","removeRootTagsProduceByAztec","forceUpdate","newFormats","reduce","accFormats","activeFormat","setState","openingTagRegexp","RegExp","tagName","closingTagRegexp","replace","event","currentTimer","clearTimeout","nativeEvent","eventCount","contentWithoutRootTag","lastContent","setTimeout","content","contentSize","contentHeight","height","aztecHeight","splitContent","selectionStart","selectionEnd","onMerge","onRemove","keyCode","BACKSPACE","isReverse","empty","formatToValue","Array","isArray","children","toHTML","nextProps","_editor","applyFormat","args","node","newStateFormats","formatValue","isFormatActive","removeFormat","style","formattingControls","toolbarControls","filter","control","indexOf","map","onClick","flex","ref","Component","defaultProps","RichTextContainer","withInstanceId","Content","Tag"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport RCTAztecView from 'react-native-aztec';\nimport { View } from 'react-native';\nimport {\n\tforEach,\n\tmerge,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, RawHTML } from '@wordpress/element';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { Toolbar } from '@wordpress/components';\nimport {\n\tisEmpty,\n\tcreate,\n\tsplit,\n\ttoHTMLString,\n} from '@wordpress/rich-text';\nimport { BACKSPACE } from '@wordpress/keycodes';\nimport { children } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\n\nconst FORMATTING_CONTROLS = [\n\t{\n\t\ticon: 'editor-bold',\n\t\ttitle: __( 'Bold' ),\n\t\tformat: 'bold',\n\t},\n\t{\n\t\ticon: 'editor-italic',\n\t\ttitle: __( 'Italic' ),\n\t\tformat: 'italic',\n\t},\n\t{\n\t\ticon: 'admin-links',\n\t\ttitle: __( 'Link' ),\n\t\tformat: 'link',\n\t},\n\t{\n\t\ticon: 'editor-strikethrough',\n\t\ttitle: __( 'Strikethrough' ),\n\t\tformat: 'strikethrough',\n\t},\n];\n\nconst isRichTextValueEmpty = ( value ) => {\n\treturn ! value || ! value.length;\n};\n\nexport function getFormatValue( formatName ) {\n\tif ( 'link' === formatName ) {\n\t\t//TODO: Implement link command\n\t}\n\treturn { isActive: true };\n}\n\nexport class RichText extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onEnter = this.onEnter.bind( this );\n\t\tthis.onBackspace = this.onBackspace.bind( this );\n\t\tthis.onContentSizeChange = this.onContentSizeChange.bind( this );\n\t\tthis.changeFormats = this.changeFormats.bind( this );\n\t\tthis.toggleFormat = this.toggleFormat.bind( this );\n\t\tthis.onActiveFormatsChange = this.onActiveFormatsChange.bind( this );\n\t\tthis.isEmpty = this.isEmpty.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.state = {\n\t\t\tformats: {},\n\t\t\tselectedNodeId: 0,\n\t\t};\n\t}\n\n\t/*\n\t * Splits the content at the location of the selection.\n\t *\n\t * Replaces the content of the editor inside this element with the contents\n\t * before the selection. Sends the elements after the selection to the `onSplit`\n\t * handler.\n\t *\n\t */\n\tsplitContent( htmlText, start, end ) {\n\t\tconst { onSplit } = this.props;\n\n\t\tif ( ! onSplit ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst record = create( {\n\t\t\thtml: htmlText,\n\t\t\trange: null,\n\t\t\tmultilineTag: false,\n\t\t\tremoveNode: null,\n\t\t\tunwrapNode: null,\n\t\t\tremoveAttribute: null,\n\t\t\tfilterString: null,\n\t\t} );\n\n\t\t// TODO : Fix the index position in AztecNative for Android\n\t\tlet [ before, after ] = split( { start, end, ...record } );\n\n\t\t// In case split occurs at the trailing or leading edge of the field,\n\t\t// assume that the before/after values respectively reflect the current\n\t\t// value. This also provides an opportunity for the parent component to\n\t\t// determine whether the before/after value has changed using a trivial\n\t\t//  strict equality operation.\n\t\tif ( isEmpty( after ) ) {\n\t\t\tbefore = record;\n\t\t} else if ( isEmpty( before ) ) {\n\t\t\tafter = record;\n\t\t}\n\n\t\tif ( before ) {\n\t\t\tbefore = this.valueToFormat( before );\n\t\t}\n\n\t\tif ( after ) {\n\t\t\tafter = this.valueToFormat( after );\n\t\t}\n\n\t\t// The onSplit event can cause a content update event for this block.  Such event should\n\t\t// definitely be processed by our native components, since they have no knowledge of\n\t\t// how the split works.  Setting lastEventCount to undefined forces the native component to\n\t\t// always update when provided with new content.\n\t\tthis.lastEventCount = undefined;\n\n\t\tonSplit( before, after );\n\t}\n\n\tvalueToFormat( { formats, text } ) {\n\t\tconst value = toHTMLString( {\n\t\t\tvalue: { formats, text },\n\t\t\tmultilineTag: this.multilineTag,\n\t\t} );\n\t\t// remove the outer root tags\n\t\treturn this.removeRootTagsProduceByAztec( value );\n\t}\n\n\tonActiveFormatsChange( formats ) {\n\t\t// force re-render the component skipping shouldComponentUpdate() See: https://reactjs.org/docs/react-component.html#forceupdate\n\t\t// This is needed because our shouldComponentUpdate impl. doesn't take in consideration props yet.\n\t\tthis.forceUpdate();\n\t\tconst newFormats = formats.reduce( ( accFormats, activeFormat ) => {\n\t\t\taccFormats[ activeFormat ] = getFormatValue( activeFormat );\n\t\t\treturn accFormats;\n\t\t}, {} );\n\n\t\tthis.setState( {\n\t\t\tformats: merge( {}, newFormats ),\n\t\t\tselectedNodeId: this.state.selectedNodeId + 1,\n\t\t} );\n\t}\n\n\t/*\n\t * Cleans up any root tags produced by aztec.\n\t * TODO: This should be removed on a later version when aztec doesn't return the top tag of the text being edited\n\t */\n\n\tremoveRootTagsProduceByAztec( html ) {\n\t\tconst openingTagRegexp = RegExp( '^<' + this.props.tagName + '>', 'gim' );\n\t\tconst closingTagRegexp = RegExp( '</' + this.props.tagName + '>$', 'gim' );\n\t\treturn html.replace( openingTagRegexp, '' ).replace( closingTagRegexp, '' );\n\t}\n\n\t/**\n\t * Handles any case where the content of the AztecRN instance has changed.\n\t */\n\n\tonChange( event ) {\n\t\t// If we had a timer set to propagate a change, let's cancel it, because the user meanwhile typed something extra\n\t\tif ( !! this.currentTimer ) {\n\t\t\tclearTimeout( this.currentTimer );\n\t\t}\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\t\tconst contentWithoutRootTag = this.removeRootTagsProduceByAztec( event.nativeEvent.text );\n\t\tthis.lastContent = contentWithoutRootTag;\n\t\t// Set a time to call the onChange prop if nothing changes in the next second\n\t\tthis.currentTimer = setTimeout( function() {\n\t\t\tthis.props.onChange( {\n\t\t\t\tcontent: this.lastContent,\n\t\t\t} );\n\t\t}.bind( this ), 1000 );\n\t}\n\n\t/**\n\t * Handles any case where the content of the AztecRN instance has changed in size\n\t */\n\n\tonContentSizeChange( contentSize ) {\n\t\tconst contentHeight = contentSize.height;\n\t\tthis.forceUpdate(); // force re-render the component skipping shouldComponentUpdate() See: https://reactjs.org/docs/react-component.html#forceupdate\n\t\tthis.props.onContentSizeChange( {\n\t\t\taztecHeight: contentHeight,\n\t\t}\n\t\t);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tonEnter( event ) {\n\t\tif ( ! this.props.onSplit ) {\n\t\t\t// TODO: insert the \\n char instead?\n\t\t\treturn;\n\t\t}\n\n\t\tthis.splitContent( event.nativeEvent.text, event.nativeEvent.selectionStart, event.nativeEvent.selectionEnd );\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tonBackspace( event ) {\n\t\tconst { onMerge, onRemove } = this.props;\n\t\tif ( ! onMerge && ! onRemove ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst keyCode = BACKSPACE; // TODO : should we differentiate BACKSPACE and DELETE?\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\tconst empty = this.isEmpty();\n\n\t\tif ( onMerge ) {\n\t\t\t// The onMerge event can cause a content update event for this block.  Such event should\n\t\t\t// definitely be processed by our native components, since they have no knowledge of\n\t\t\t// how the split works.  Setting lastEventCount to undefined forces the native component to\n\t\t\t// always update when provided with new content.\n\t\t\tthis.lastEventCount = undefined;\n\n\t\t\tonMerge( ! isReverse );\n\t\t}\n\n\t\t// Only handle remove on Backspace. This serves dual-purpose of being\n\t\t// an intentional user interaction distinguishing between Backspace and\n\t\t// Delete to remove the empty field, but also to avoid merge & remove\n\t\t// causing destruction of two fields (merge, then removed merged).\n\t\tif ( onRemove && empty && isReverse ) {\n\t\t\tonRemove( ! isReverse );\n\t\t}\n\t}\n\n\tisEmpty() {\n\t\treturn isEmpty( this.formatToValue( this.props.value ) );\n\t}\n\n\tformatToValue( value ) {\n\t\t// Handle deprecated `children` and `node` sources.\n\t\tif ( Array.isArray( value ) ) {\n\t\t\treturn create( {\n\t\t\t\thtml: children.toHTML( value ),\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.props.format === 'string' ) {\n\t\t\treturn create( {\n\t\t\t\thtml: value,\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t} );\n\t\t}\n\n\t\t// Guard for blocks passing `null` in onSplit callbacks. May be removed\n\t\t// if onSplit is revised to not pass a `null` value.\n\t\tif ( value === null ) {\n\t\t\treturn create();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tshouldComponentUpdate( nextProps ) {\n\t\tif ( nextProps.tagName !== this.props.tagName ) {\n\t\t\tthis.lastEventCount = undefined;\n\t\t\tthis.lastContent = undefined;\n\t\t\treturn true;\n\t\t}\n\t\t// The check below allows us to avoid updating the content right after an `onChange` call\n\t\t// first time the component is drawn with empty content `lastContent` is undefined\n\t\tif ( nextProps.value &&\n\t\t\tthis.lastContent &&\n\t\t\tthis.lastEventCount ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tisFormatActive( format ) {\n\t\treturn this.state.formats[ format ] && this.state.formats[ format ].isActive;\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tremoveFormat( format ) {\n\t\tthis._editor.applyFormat( format );\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tapplyFormat( format, args, node ) {\n\t\tthis._editor.applyFormat( format );\n\t}\n\n\tchangeFormats( formats ) {\n\t\tconst newStateFormats = {};\n\t\tforEach( formats, ( formatValue, format ) => {\n\t\t\tnewStateFormats[ format ] = getFormatValue( format );\n\t\t\tconst isActive = this.isFormatActive( format );\n\t\t\tif ( isActive && ! formatValue ) {\n\t\t\t\tthis.removeFormat( format );\n\t\t\t} else if ( ! isActive && formatValue ) {\n\t\t\t\tthis.applyFormat( format );\n\t\t\t}\n\t\t} );\n\n\t\tthis.setState( ( state ) => ( {\n\t\t\tformats: merge( {}, state.formats, newStateFormats ),\n\t\t} ) );\n\t}\n\n\ttoggleFormat( format ) {\n\t\treturn () => this.changeFormats( {\n\t\t\t[ format ]: ! this.state.formats[ format ],\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tstyle,\n\t\t\tformattingControls,\n\t\t\tvalue,\n\t\t} = this.props;\n\n\t\tconst toolbarControls = FORMATTING_CONTROLS\n\t\t\t.filter( ( control ) => formattingControls.indexOf( control.format ) !== -1 )\n\t\t\t.map( ( control ) => ( {\n\t\t\t\t...control,\n\t\t\t\tonClick: this.toggleFormat( control.format ),\n\t\t\t\tisActive: this.isFormatActive( control.format ),\n\t\t\t} ) );\n\n\t\t// Save back to HTML from React tree\n\t\tconst html = '<' + tagName + '>' + value + '</' + tagName + '>';\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<View style={ { flex: 1 } }>\n\t\t\t\t\t<Toolbar controls={ toolbarControls } />\n\t\t\t\t</View>\n\t\t\t\t<RCTAztecView\n\t\t\t\t\tref={ ( ref ) => {\n\t\t\t\t\t\tthis._editor = ref;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttext={ { text: html, eventCount: this.lastEventCount } }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonEnter={ this.onEnter }\n\t\t\t\t\tonBackspace={ this.onBackspace }\n\t\t\t\t\tonContentSizeChange={ this.onContentSizeChange }\n\t\t\t\t\tonActiveFormatsChange={ this.onActiveFormatsChange }\n\t\t\t\t\tcolor={ 'black' }\n\t\t\t\t\tmaxImagesWidth={ 200 }\n\t\t\t\t\tstyle={ style }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformattingControls: FORMATTING_CONTROLS.map( ( { format } ) => format ),\n\tformat: 'string',\n};\n\nconst RichTextContainer = compose( [\n\twithInstanceId,\n] )( RichText );\n\nRichTextContainer.Content = ( { value, format, tagName: Tag, ...props } ) => {\n\tlet content;\n\tswitch ( format ) {\n\t\tcase 'string':\n\t\t\tcontent = <RawHTML>{ value }</RawHTML>;\n\t\t\tbreak;\n\t}\n\n\tif ( Tag ) {\n\t\treturn <Tag { ...props }>{ content }</Tag>;\n\t}\n\n\treturn content;\n};\n\nRichTextContainer.isEmpty = isRichTextValueEmpty;\n\nRichTextContainer.Content.defaultProps = {\n\tformat: 'string',\n};\n\nexport default RichTextContainer;\n"]}