{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/post-permalink/index.js"],"names":["classnames","withDispatch","withSelect","Component","__","compose","ClipboardButton","Button","ExternalLink","safeDecodeURI","PostPermalinkEditor","getWPAdminURL","PostPermalink","arguments","addVisibilityCheck","bind","onVisibilityChange","state","isCopied","isEditingPermalink","window","addEventListener","props","isEditable","refreshPost","document","visibilityState","prevProps","prevState","linkElement","focus","removeEventListener","isNew","postLink","samplePermalink","isPublished","ariaLabel","setState","select","isEditedPostNew","isPermalinkEditable","getCurrentPost","getPermalink","isCurrentPostPublished","link","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { ClipboardButton, Button, ExternalLink } from '@wordpress/components';\nimport { safeDecodeURI } from '@wordpress/url';\n\n/**\n * Internal Dependencies\n */\nimport PostPermalinkEditor from './editor.js';\nimport { getWPAdminURL } from '../../utils/url';\n\nclass PostPermalink extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.addVisibilityCheck = this.addVisibilityCheck.bind( this );\n\t\tthis.onVisibilityChange = this.onVisibilityChange.bind( this );\n\n\t\tthis.state = {\n\t\t\tisCopied: false,\n\t\t\tisEditingPermalink: false,\n\t\t};\n\t}\n\n\taddVisibilityCheck() {\n\t\twindow.addEventListener( 'visibilitychange', this.onVisibilityChange );\n\t}\n\n\tonVisibilityChange() {\n\t\tconst { isEditable, refreshPost } = this.props;\n\t\t// If the user just returned after having clicked the \"Change Permalinks\" button,\n\t\t// fetch a new copy of the post from the server, just in case they enabled permalinks.\n\t\tif ( ! isEditable && 'visible' === document.visibilityState ) {\n\t\t\trefreshPost();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\t// If we've just stopped editing the permalink, focus on the new permalink.\n\t\tif ( prevState.isEditingPermalink && ! this.state.isEditingPermalink ) {\n\t\t\tthis.linkElement.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener( 'visibilitychange', this.addVisibilityCheck );\n\t}\n\n\trender() {\n\t\tconst { isNew, postLink, isEditable, samplePermalink, isPublished } = this.props;\n\t\tconst { isCopied, isEditingPermalink } = this.state;\n\t\tconst ariaLabel = isCopied ? __( 'Permalink copied' ) : __( 'Copy the permalink' );\n\n\t\tif ( isNew || ! postLink ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"editor-post-permalink\">\n\t\t\t\t<ClipboardButton\n\t\t\t\t\tclassName={ classnames( 'editor-post-permalink__copy', { 'is-copied': isCopied } ) }\n\t\t\t\t\ttext={ samplePermalink }\n\t\t\t\t\tlabel={ ariaLabel }\n\t\t\t\t\tonCopy={ () => this.setState( { isCopied: true } ) }\n\t\t\t\t\taria-disabled={ isCopied }\n\t\t\t\t\ticon=\"admin-links\"\n\t\t\t\t/>\n\n\t\t\t\t<span className=\"editor-post-permalink__label\">{ __( 'Permalink:' ) }</span>\n\n\t\t\t\t{ ! isEditingPermalink &&\n\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\tclassName=\"editor-post-permalink__link\"\n\t\t\t\t\t\thref={ ! isPublished ? postLink : samplePermalink }\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tref={ ( linkElement ) => this.linkElement = linkElement }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ safeDecodeURI( samplePermalink ) }\n\t\t\t\t\t\t&lrm;\n\t\t\t\t\t</ExternalLink>\n\t\t\t\t}\n\n\t\t\t\t{ isEditingPermalink &&\n\t\t\t\t\t<PostPermalinkEditor\n\t\t\t\t\t\tonSave={ () => this.setState( { isEditingPermalink: false } ) }\n\t\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t{ isEditable && ! isEditingPermalink &&\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"editor-post-permalink__edit\"\n\t\t\t\t\t\tisLarge\n\t\t\t\t\t\tonClick={ () => this.setState( { isEditingPermalink: true } ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Edit' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\n\t\t\t\t{ ! isEditable &&\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"editor-post-permalink__change\"\n\t\t\t\t\t\tisLarge\n\t\t\t\t\t\thref={ getWPAdminURL( 'options-permalink.php' ) }\n\t\t\t\t\t\tonClick={ this.addVisibilityCheck }\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Change Permalinks' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditedPostNew,\n\t\t\tisPermalinkEditable,\n\t\t\tgetCurrentPost,\n\t\t\tgetPermalink,\n\t\t\tisCurrentPostPublished,\n\t\t} = select( 'core/editor' );\n\n\t\tconst { link } = getCurrentPost();\n\n\t\treturn {\n\t\t\tisNew: isEditedPostNew(),\n\t\t\tpostLink: link,\n\t\t\tisEditable: isPermalinkEditable(),\n\t\t\tsamplePermalink: getPermalink(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { refreshPost } = dispatch( 'core/editor' );\n\t\treturn { refreshPost };\n\t} ),\n] )( PostPermalink );\n"]}