{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/post-publish-button/index.js"],"names":["noop","get","Button","Component","createRef","withSelect","withDispatch","compose","PublishButtonLabel","PostPublishButton","props","buttonNode","focusOnMount","current","focus","isSaving","onStatusChange","onSave","isBeingScheduled","visibility","isPublishable","isSaveable","hasPublishAction","onSubmit","forceIsSaving","isButtonEnabled","publishStatus","onClick","select","forceIsDirty","isSavingPost","isEditedPostBeingScheduled","getEditedPostVisibility","isEditedPostSaveable","isEditedPostPublishable","isPostSavingLocked","getCurrentPost","getCurrentPostType","postType","dispatch","editPost","savePost","status"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PublishButtonLabel from './label';\nexport class PostPublishButton extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.buttonNode = createRef();\n\t}\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.buttonNode.current.focus();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tisSaving,\n\t\t\tonStatusChange,\n\t\t\tonSave,\n\t\t\tisBeingScheduled,\n\t\t\tvisibility,\n\t\t\tisPublishable,\n\t\t\tisSaveable,\n\t\t\thasPublishAction,\n\t\t\tonSubmit = noop,\n\t\t\tforceIsSaving,\n\t\t} = this.props;\n\t\tconst isButtonEnabled = isPublishable && isSaveable;\n\n\t\tlet publishStatus;\n\t\tif ( ! hasPublishAction ) {\n\t\t\tpublishStatus = 'pending';\n\t\t} else if ( isBeingScheduled ) {\n\t\t\tpublishStatus = 'future';\n\t\t} else if ( visibility === 'private' ) {\n\t\t\tpublishStatus = 'private';\n\t\t} else {\n\t\t\tpublishStatus = 'publish';\n\t\t}\n\n\t\tconst onClick = () => {\n\t\t\tonSubmit();\n\t\t\tonStatusChange( publishStatus );\n\t\t\tonSave();\n\t\t};\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tref={ this.buttonNode }\n\t\t\t\tclassName=\"editor-post-publish-button\"\n\t\t\t\tisPrimary\n\t\t\t\tisLarge\n\t\t\t\tonClick={ onClick }\n\t\t\t\tdisabled={ ! isButtonEnabled }\n\t\t\t\tisBusy={ isSaving }\n\t\t\t>\n\t\t\t\t<PublishButtonLabel forceIsSaving={ forceIsSaving } />\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { forceIsSaving, forceIsDirty } ) => {\n\t\tconst {\n\t\t\tisSavingPost,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tgetEditedPostVisibility,\n\t\t\tisEditedPostSaveable,\n\t\t\tisEditedPostPublishable,\n\t\t\tisPostSavingLocked,\n\t\t\tgetCurrentPost,\n\t\t\tgetCurrentPostType,\n\t\t} = select( 'core/editor' );\n\t\treturn {\n\t\t\tisSaving: forceIsSaving || isSavingPost(),\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tvisibility: getEditedPostVisibility(),\n\t\t\tisSaveable: isEditedPostSaveable() && ! isPostSavingLocked(),\n\t\t\tisPublishable: forceIsDirty || isEditedPostPublishable(),\n\t\t\thasPublishAction: get( getCurrentPost(), [ '_links', 'wp:action-publish' ], false ),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, savePost } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tonStatusChange: ( status ) => editPost( { status } ),\n\t\t\tonSave: savePost,\n\t\t};\n\t} ),\n] )( PostPublishButton );\n"]}