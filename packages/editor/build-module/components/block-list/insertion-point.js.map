{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/block-list/insertion-point.js"],"names":["classnames","isUnmodifiedDefaultBlock","Component","withSelect","Inserter","BlockInsertionPoint","arguments","state","isInserterFocused","onBlurInserter","bind","onFocusInserter","event","stopPropagation","setState","props","showInsertionPoint","canShowInserter","rootClientId","insertIndex","select","clientId","getBlockIndex","getBlockInsertionPoint","getBlock","isBlockInsertionPointVisible","blockIndex","insertionPoint","block","index"],"mappings":";;;;;;;;AAAA;;;AAGA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;;;;AAGA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA;;;;AAGA,OAAOC,QAAP,MAAqB,aAArB;;IAEMC,mB;;;;;AACL,iCAAc;AAAA;;AAAA;;AACb,8FAAUC,SAAV;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,iBAAiB,EAAE;AADP,KAAb;AAIA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,uDAAvB;AAPa;AAQb;;;;oCAEgBE,K,EAAQ;AACxB;AACA;AACA;AACAA,MAAAA,KAAK,CAACC,eAAN;AAEA,WAAKC,QAAL,CAAe;AACdN,QAAAA,iBAAiB,EAAE;AADL,OAAf;AAGA;;;qCAEgB;AAChB,WAAKM,QAAL,CAAe;AACdN,QAAAA,iBAAiB,EAAE;AADL,OAAf;AAGA;;;6BAEQ;AAAA,UACAA,iBADA,GACsB,KAAKD,KAD3B,CACAC,iBADA;AAAA,wBAOJ,KAAKO,KAPD;AAAA,UAGPC,kBAHO,eAGPA,kBAHO;AAAA,UAIPC,eAJO,eAIPA,eAJO;AAAA,UAKPC,YALO,eAKPA,YALO;AAAA,UAMPC,WANO,eAMPA,WANO;AASR,aACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACGH,kBAAkB,IACnB;AAAK,QAAA,SAAS,EAAC;AAAf,QAFF,EAIGC,eAAe,IAChB;AACC,QAAA,OAAO,EAAG,KAAKN,eADhB;AAEC,QAAA,MAAM,EAAG,KAAKF,cAFf;AAGC,QAAA,SAAS,EACRT,UAAU,CAAE,6CAAF,EAAiD;AAC1D,wBAAcQ;AAD4C,SAAjD;AAJZ,SASC,cAAC,QAAD;AACC,QAAA,YAAY,EAAGU,YADhB;AAEC,QAAA,KAAK,EAAGC;AAFT,QATD,CALF,CADD;AAuBA;;;;EA5DgCjB,S;;AA8DlC,eAAeC,UAAU,CAAE,UAAEiB,MAAF,QAA0C;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBH,YAAoB,QAApBA,YAAoB;;AAAA,gBAMhEE,MAAM,CAAE,aAAF,CAN0D;AAAA,MAEnEE,aAFmE,WAEnEA,aAFmE;AAAA,MAGnEC,sBAHmE,WAGnEA,sBAHmE;AAAA,MAInEC,QAJmE,WAInEA,QAJmE;AAAA,MAKnEC,4BALmE,WAKnEA,4BALmE;;AAOpE,MAAMC,UAAU,GAAGJ,aAAa,CAAED,QAAF,EAAYH,YAAZ,CAAhC;AACA,MAAMC,WAAW,GAAGO,UAApB;AACA,MAAMC,cAAc,GAAGJ,sBAAsB,EAA7C;AACA,MAAMK,KAAK,GAAGJ,QAAQ,CAAEH,QAAF,CAAtB;AACA,MAAML,kBAAkB,GACvBS,4BAA4B,MAC5BE,cAAc,CAACE,KAAf,KAAyBV,WADzB,IAEAQ,cAAc,CAACT,YAAf,KAAgCA,YAFhC,IAGA,CAAEjB,wBAAwB,CAAE2B,KAAF,CAJ3B;AAOA,SAAO;AAAEZ,IAAAA,kBAAkB,EAAlBA,kBAAF;AAAsBG,IAAAA,WAAW,EAAXA;AAAtB,GAAP;AACA,CAnBwB,CAAV,CAmBVd,mBAnBU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { isUnmodifiedDefaultBlock } from '@wordpress/blocks';\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Inserter from '../inserter';\n\nclass BlockInsertionPoint extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisInserterFocused: false,\n\t\t};\n\n\t\tthis.onBlurInserter = this.onBlurInserter.bind( this );\n\t\tthis.onFocusInserter = this.onFocusInserter.bind( this );\n\t}\n\n\tonFocusInserter( event ) {\n\t\t// Stop propagation of the focus event to avoid selecting the current\n\t\t// block while inserting a new block, as it is not relevant to sibling\n\t\t// insertion and conflicts with contextual toolbar placement.\n\t\tevent.stopPropagation();\n\n\t\tthis.setState( {\n\t\t\tisInserterFocused: true,\n\t\t} );\n\t}\n\n\tonBlurInserter() {\n\t\tthis.setState( {\n\t\t\tisInserterFocused: false,\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst { isInserterFocused } = this.state;\n\t\tconst {\n\t\t\tshowInsertionPoint,\n\t\t\tcanShowInserter,\n\t\t\trootClientId,\n\t\t\tinsertIndex,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"editor-block-list__insertion-point\">\n\t\t\t\t{ showInsertionPoint && (\n\t\t\t\t\t<div className=\"editor-block-list__insertion-point-indicator\" />\n\t\t\t\t) }\n\t\t\t\t{ canShowInserter && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tonFocus={ this.onFocusInserter }\n\t\t\t\t\t\tonBlur={ this.onBlurInserter }\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tclassnames( 'editor-block-list__insertion-point-inserter', {\n\t\t\t\t\t\t\t\t'is-visible': isInserterFocused,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Inserter\n\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\tindex={ insertIndex }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default withSelect( ( select, { clientId, rootClientId } ) => {\n\tconst {\n\t\tgetBlockIndex,\n\t\tgetBlockInsertionPoint,\n\t\tgetBlock,\n\t\tisBlockInsertionPointVisible,\n\t} = select( 'core/editor' );\n\tconst blockIndex = getBlockIndex( clientId, rootClientId );\n\tconst insertIndex = blockIndex;\n\tconst insertionPoint = getBlockInsertionPoint();\n\tconst block = getBlock( clientId );\n\tconst showInsertionPoint = (\n\t\tisBlockInsertionPointVisible() &&\n\t\tinsertionPoint.index === insertIndex &&\n\t\tinsertionPoint.rootClientId === rootClientId &&\n\t\t! isUnmodifiedDefaultBlock( block )\n\t);\n\n\treturn { showInsertionPoint, insertIndex };\n} )( BlockInsertionPoint );\n"]}