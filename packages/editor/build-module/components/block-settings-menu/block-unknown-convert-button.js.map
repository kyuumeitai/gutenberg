{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/block-settings-menu/block-unknown-convert-button.js"],"names":["getFreeformContentHandlerName","rawHandler","serialize","compose","withSelect","withDispatch","BlockConvertButton","select","clientId","canUserUseUnfilteredHTML","getBlock","block","shouldRender","name","dispatch","onClick","replaceBlocks","HTML","mode"],"mappings":"AAAA;;;AAGA,SAASA,6BAAT,EAAwCC,UAAxC,EAAoDC,SAApD,QAAqE,mBAArE;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AAEA;;;;AAGA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA,eAAeH,OAAO,CACrBC,UAAU,CAAE,UAAEG,MAAF,QAA4B;AAAA,MAAhBC,QAAgB,QAAhBA,QAAgB;;AAAA,gBACQD,MAAM,CAAE,aAAF,CADd;AAAA,MAC/BE,wBAD+B,WAC/BA,wBAD+B;AAAA,MACLC,QADK,WACLA,QADK;;AAEvC,MAAMC,KAAK,GAAGD,QAAQ,CAAEF,QAAF,CAAtB;AACA,SAAO;AACNG,IAAAA,KAAK,EAALA,KADM;AAENF,IAAAA,wBAAwB,EAAEA,wBAAwB,EAF5C;AAGNG,IAAAA,YAAY,EAAID,KAAK,IAAIA,KAAK,CAACE,IAAN,KAAeb,6BAA6B;AAH/D,GAAP;AAKA,CARS,CADW,EAUrBK,YAAY,CAAE,UAAES,QAAF;AAAA,MAAcH,KAAd,SAAcA,KAAd;AAAA,MAAqBF,wBAArB,SAAqBA,wBAArB;AAAA,SAAuD;AACpEM,IAAAA,OAAO,EAAE;AAAA,aAAMD,QAAQ,CAAE,aAAF,CAAR,CAA0BE,aAA1B,CACdL,KAAK,CAACH,QADQ,EAEdP,UAAU,CAAE;AACXgB,QAAAA,IAAI,EAAEf,SAAS,CAAES,KAAF,CADJ;AAEXO,QAAAA,IAAI,EAAE,QAFK;AAGXT,QAAAA,wBAAwB,EAAxBA;AAHW,OAAF,CAFI,CAAN;AAAA;AAD2D,GAAvD;AAAA,CAAF,CAVS,CAAP,CAoBZH,kBApBY,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getFreeformContentHandlerName, rawHandler, serialize } from '@wordpress/blocks';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BlockConvertButton from './block-convert-button';\n\nexport default compose(\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { canUserUseUnfilteredHTML, getBlock } = select( 'core/editor' );\n\t\tconst block = getBlock( clientId );\n\t\treturn {\n\t\t\tblock,\n\t\t\tcanUserUseUnfilteredHTML: canUserUseUnfilteredHTML(),\n\t\t\tshouldRender: ( block && block.name === getFreeformContentHandlerName() ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { block, canUserUseUnfilteredHTML } ) => ( {\n\t\tonClick: () => dispatch( 'core/editor' ).replaceBlocks(\n\t\t\tblock.clientId,\n\t\t\trawHandler( {\n\t\t\t\tHTML: serialize( block ),\n\t\t\t\tmode: 'BLOCKS',\n\t\t\t\tcanUserUseUnfilteredHTML,\n\t\t\t} )\n\t\t),\n\t} ) ),\n)( BlockConvertButton );\n"]}