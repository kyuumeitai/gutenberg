{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/edit-post/src/components/header/mode-switcher/index.js"],"names":["__","MenuItemsChoice","MenuGroup","compose","withSelect","withDispatch","shortcuts","MODES","value","label","ModeSwitcher","onSwitch","mode","choices","map","choice","shortcut","toggleEditorMode","display","select","getEditorMode","dispatch","ownProps","switchEditorMode","onSelect"],"mappings":";;;AAAA;;;AAGA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,uBAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AAEA;;;;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA;;;;;;AAKA,IAAMC,KAAK,GAAG,CACb;AACCC,EAAAA,KAAK,EAAE,QADR;AAECC,EAAAA,KAAK,EAAET,EAAE,CAAE,eAAF;AAFV,CADa,EAKb;AACCQ,EAAAA,KAAK,EAAE,MADR;AAECC,EAAAA,KAAK,EAAET,EAAE,CAAE,aAAF;AAFV,CALa,CAAd;;AAWA,SAASU,YAAT,OAA4C;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,IAAS,QAATA,IAAS;AAC3C,MAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAW,UAAEC,MAAF,EAAc;AACxC,QAAKA,MAAM,CAACP,KAAP,KAAiBI,IAAtB,EAA6B;AAC5B,+BAAYG,MAAZ;AAAoBC,QAAAA,QAAQ,EAAEV,SAAS,CAACW,gBAAV,CAA2BC;AAAzD;AACA;;AACD,WAAOH,MAAP;AACA,GALe,CAAhB;AAOA,SACC,cAAC,SAAD;AACC,IAAA,KAAK,EAAGf,EAAE,CAAE,QAAF;AADX,KAGC,cAAC,eAAD;AACC,IAAA,OAAO,EAAGa,OADX;AAEC,IAAA,KAAK,EAAGD,IAFT;AAGC,IAAA,QAAQ,EAAGD;AAHZ,IAHD,CADD;AAWA;;AAED,eAAeR,OAAO,CAAE,CACvBC,UAAU,CAAE,UAAEe,MAAF;AAAA,SAAgB;AAC3BP,IAAAA,IAAI,EAAEO,MAAM,CAAE,gBAAF,CAAN,CAA2BC,aAA3B;AADqB,GAAhB;AAAA,CAAF,CADa,EAIvBf,YAAY,CAAE,UAAEgB,QAAF,EAAYC,QAAZ;AAAA,SAA4B;AACzCX,IAAAA,QADyC,oBAC/BC,IAD+B,EACxB;AAChBS,MAAAA,QAAQ,CAAE,gBAAF,CAAR,CAA6BE,gBAA7B,CAA+CX,IAA/C;AACAU,MAAAA,QAAQ,CAACE,QAAT,CAAmBZ,IAAnB;AACA;AAJwC,GAA5B;AAAA,CAAF,CAJW,CAAF,CAAP,CAUVF,YAVU,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItemsChoice, MenuGroup } from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport shortcuts from '../../../keyboard-shortcuts';\n/**\n * Set of available mode options.\n *\n * @type {Array}\n */\nconst MODES = [\n\t{\n\t\tvalue: 'visual',\n\t\tlabel: __( 'Visual Editor' ),\n\t},\n\t{\n\t\tvalue: 'text',\n\t\tlabel: __( 'Code Editor' ),\n\t},\n];\n\nfunction ModeSwitcher( { onSwitch, mode } ) {\n\tconst choices = MODES.map( ( choice ) => {\n\t\tif ( choice.value !== mode ) {\n\t\t\treturn { ...choice, shortcut: shortcuts.toggleEditorMode.display };\n\t\t}\n\t\treturn choice;\n\t} );\n\n\treturn (\n\t\t<MenuGroup\n\t\t\tlabel={ __( 'Editor' ) }\n\t\t>\n\t\t\t<MenuItemsChoice\n\t\t\t\tchoices={ choices }\n\t\t\t\tvalue={ mode }\n\t\t\t\tonSelect={ onSwitch }\n\t\t\t/>\n\t\t</MenuGroup>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tmode: select( 'core/edit-post' ).getEditorMode(),\n\t} ) ),\n\twithDispatch( ( dispatch, ownProps ) => ( {\n\t\tonSwitch( mode ) {\n\t\t\tdispatch( 'core/edit-post' ).switchEditorMode( mode );\n\t\t\townProps.onSelect( mode );\n\t\t},\n\t} ) ),\n] )( ModeSwitcher );\n"]}