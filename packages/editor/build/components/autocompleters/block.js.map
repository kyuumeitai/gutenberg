{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/autocompleters/block.js"],"names":["defaultGetBlockInsertionParentClientId","getBlockInsertionPoint","rootClientId","defaultGetInserterItems","getInserterItems","defaultGetSelectedBlockName","selectedBlock","getSelectedBlock","name","createBlockCompleter","getBlockInsertionParentClientId","getSelectedBlockName","className","triggerPrefix","options","selectedBlockName","filter","inserterItem","getOptionKeywords","title","keywords","getOptionLabel","icon","allowContext","before","after","test","getOptionCompletion","initialAttributes","action","value","isOptionDisabled","isDisabled"],"mappings":";;;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AATA;;;;AAMA;;;;AAKA;;;;;;;AAOA,SAASA,sCAAT,GAAkD;AACjD,SAAO,kBAAQ,aAAR,EAAwBC,sBAAxB,GAAiDC,YAAxD;AACA;AAED;;;;;;;;;;;AASA,SAASC,uBAAT,CAAkCD,YAAlC,EAAiD;AAChD,SAAO,kBAAQ,aAAR,EAAwBE,gBAAxB,CAA0CF,YAA1C,CAAP;AACA;AAED;;;;;;;;AAMA,SAASG,2BAAT,GAAuC;AACtC,MAAMC,aAAa,GAAG,kBAAQ,aAAR,EAAwBC,gBAAxB,EAAtB;AACA,SAAOD,aAAa,GAAGA,aAAa,CAACE,IAAjB,GAAwB,IAA5C;AACA;AAED;;;;;;;AAKO,SAASC,oBAAT,GAKE;AAAA,iFAAL,EAAK;AAAA,mCAHRC,+BAGQ;AAAA,MAHRA,+BAGQ,sCAH0BV,sCAG1B;AAAA,mCAFRI,gBAEQ;AAAA,MAFRA,gBAEQ,sCAFWD,uBAEX;AAAA,mCADRQ,oBACQ;AAAA,MADRA,oBACQ,sCADeN,2BACf;;AACR,SAAO;AACNG,IAAAA,IAAI,EAAE,QADA;AAENI,IAAAA,SAAS,EAAE,8BAFL;AAGNC,IAAAA,aAAa,EAAE,GAHT;AAINC,IAAAA,OAJM,qBAII;AACT,UAAMC,iBAAiB,GAAGJ,oBAAoB,EAA9C;AACA,aAAOP,gBAAgB,CAAEM,+BAA+B,EAAjC,CAAhB,CAAsDM,MAAtD,EACN;AACA,gBAAEC,YAAF;AAAA,eAAoBF,iBAAiB,KAAKE,YAAY,CAACT,IAAvD;AAAA,OAFM,CAAP;AAIA,KAVK;AAWNU,IAAAA,iBAXM,6BAWaD,YAXb,EAW4B;AAAA,UACzBE,KADyB,GACAF,YADA,CACzBE,KADyB;AAAA,kCACAF,YADA,CAClBG,QADkB;AAAA,UAClBA,QADkB,sCACP,EADO;AAEjC,8CAAYA,QAAZ,UAAsBD,KAAtB;AACA,KAdK;AAeNE,IAAAA,cAfM,0BAeUJ,YAfV,EAeyB;AAAA,UACtBK,IADsB,GACNL,YADM,CACtBK,IADsB;AAAA,UAChBH,KADgB,GACNF,YADM,CAChBE,KADgB;AAE9B,aAAO,CACN,4BAAC,kBAAD;AAAW,QAAA,GAAG,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAGG,IAA7B;AAAoC,QAAA,UAAU;AAA9C,QADM,EAENH,KAFM,CAAP;AAIA,KArBK;AAsBNI,IAAAA,YAtBM,wBAsBQC,MAtBR,EAsBgBC,KAtBhB,EAsBwB;AAC7B,aAAO,EAAI,KAAKC,IAAL,CAAWF,MAAX,KAAuB,KAAKE,IAAL,CAAWD,KAAX,CAA3B,CAAP;AACA,KAxBK;AAyBNE,IAAAA,mBAzBM,+BAyBeV,YAzBf,EAyB8B;AAAA,UAC3BT,IAD2B,GACCS,YADD,CAC3BT,IAD2B;AAAA,UACrBoB,iBADqB,GACCX,YADD,CACrBW,iBADqB;AAEnC,aAAO;AACNC,QAAAA,MAAM,EAAE,SADF;AAENC,QAAAA,KAAK,EAAE,yBAAatB,IAAb,EAAmBoB,iBAAnB;AAFD,OAAP;AAIA,KA/BK;AAgCNG,IAAAA,gBAhCM,4BAgCYd,YAhCZ,EAgC2B;AAChC,aAAOA,YAAY,CAACe,UAApB;AACA;AAlCK,GAAP;AAoCA;AAED;;;;;;;eAKevB,oBAAoB,E","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport BlockIcon from '../block-icon';\n\n/**\n * Returns the client ID of the parent where a newly inserted block would be\n * placed.\n *\n * @return {string} Client ID of the parent where a newly inserted block would\n *                  be placed.\n */\nfunction defaultGetBlockInsertionParentClientId() {\n\treturn select( 'core/editor' ).getBlockInsertionPoint().rootClientId;\n}\n\n/**\n * Returns the inserter items for the specified parent block.\n *\n * @param {string} rootClientId Client ID of the block for which to retrieve\n *                              inserter items.\n *\n * @return {Array<Editor.InserterItem>} The inserter items for the specified\n *                                      parent.\n */\nfunction defaultGetInserterItems( rootClientId ) {\n\treturn select( 'core/editor' ).getInserterItems( rootClientId );\n}\n\n/**\n * Returns the name of the currently selected block.\n *\n * @return {string?} The name of the currently selected block or `null` if no\n *                   block is selected.\n */\nfunction defaultGetSelectedBlockName() {\n\tconst selectedBlock = select( 'core/editor' ).getSelectedBlock();\n\treturn selectedBlock ? selectedBlock.name : null;\n}\n\n/**\n * Creates a blocks repeater for replacing the current block with a selected block type.\n *\n * @return {Completer} A blocks completer.\n */\nexport function createBlockCompleter( {\n\t// Allow store-based selectors to be overridden for unit test.\n\tgetBlockInsertionParentClientId = defaultGetBlockInsertionParentClientId,\n\tgetInserterItems = defaultGetInserterItems,\n\tgetSelectedBlockName = defaultGetSelectedBlockName,\n} = {} ) {\n\treturn {\n\t\tname: 'blocks',\n\t\tclassName: 'editor-autocompleters__block',\n\t\ttriggerPrefix: '/',\n\t\toptions() {\n\t\t\tconst selectedBlockName = getSelectedBlockName();\n\t\t\treturn getInserterItems( getBlockInsertionParentClientId() ).filter(\n\t\t\t\t// Avoid offering to replace the current block with a block of the same type.\n\t\t\t\t( inserterItem ) => selectedBlockName !== inserterItem.name\n\t\t\t);\n\t\t},\n\t\tgetOptionKeywords( inserterItem ) {\n\t\t\tconst { title, keywords = [] } = inserterItem;\n\t\t\treturn [ ...keywords, title ];\n\t\t},\n\t\tgetOptionLabel( inserterItem ) {\n\t\t\tconst { icon, title } = inserterItem;\n\t\t\treturn [\n\t\t\t\t<BlockIcon key=\"icon\" icon={ icon } showColors />,\n\t\t\t\ttitle,\n\t\t\t];\n\t\t},\n\t\tallowContext( before, after ) {\n\t\t\treturn ! ( /\\S/.test( before ) || /\\S/.test( after ) );\n\t\t},\n\t\tgetOptionCompletion( inserterItem ) {\n\t\t\tconst { name, initialAttributes } = inserterItem;\n\t\t\treturn {\n\t\t\t\taction: 'replace',\n\t\t\t\tvalue: createBlock( name, initialAttributes ),\n\t\t\t};\n\t\t},\n\t\tisOptionDisabled( inserterItem ) {\n\t\t\treturn inserterItem.isDisabled;\n\t\t},\n\t};\n}\n\n/**\n * Creates a blocks repeater for replacing the current block with a selected block type.\n *\n * @return {Completer} A blocks completer.\n */\nexport default createBlockCompleter();\n"]}