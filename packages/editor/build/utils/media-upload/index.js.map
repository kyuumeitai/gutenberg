{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/utils/media-upload/index.js"],"names":["allowedTypes","filesList","maxUploadFileSize","onError","noop","onFileChange","getCurrentPostId","getEditorSettings","wpAllowedMimeTypes","allowedMimeTypes","additionalData","post","message"],"mappings":";;;;;;;AAGA;;AAKA;;AAKA;;AAbA;;;;AAKA;;;;AAKA;;;;AAKA;;;;;;;;;;;AAWe,wBAMX;AAAA,MALHA,YAKG,QALHA,YAKG;AAAA,MAJHC,SAIG,QAJHA,SAIG;AAAA,MAHHC,iBAGG,QAHHA,iBAGG;AAAA,0BAFHC,OAEG;AAAA,MAFHA,QAEG,6BAFOC,YAEP;AAAA,MADHC,YACG,QADHA,YACG;;AAAA,gBAIC,kBAAQ,aAAR,CAJD;AAAA,MAEFC,gBAFE,WAEFA,gBAFE;AAAA,MAGFC,iBAHE,WAGFA,iBAHE;;AAKH,MAAMC,kBAAkB,GAAGD,iBAAiB,GAAGE,gBAA/C;AACAP,EAAAA,iBAAiB,GAAGA,iBAAiB,IAAIK,iBAAiB,GAAGL,iBAA7D;AAEA,gCAAa;AACZF,IAAAA,YAAY,EAAZA,YADY;AAEZC,IAAAA,SAAS,EAATA,SAFY;AAGZI,IAAAA,YAAY,EAAZA,YAHY;AAIZK,IAAAA,cAAc,EAAE;AACfC,MAAAA,IAAI,EAAEL,gBAAgB;AADP,KAJJ;AAOZJ,IAAAA,iBAAiB,EAAjBA,iBAPY;AAQZC,IAAAA,OAAO,EAAE;AAAA,UAAIS,OAAJ,SAAIA,OAAJ;AAAA,aAAmBT,QAAO,CAAES,OAAF,CAA1B;AAAA,KARG;AASZJ,IAAAA,kBAAkB,EAAlBA;AATY,GAAb;AAWA","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { mediaUpload } from './media-upload';\n\n/**\n * Upload a media file when the file upload button is activated.\n * Wrapper around mediaUpload() that injects the current post ID.\n *\n * @param   {Object}   $0                   Parameters object passed to the function.\n * @param   {string}   $0.allowedTypes      Array with the types of media that can be uploaded, if unset all types are allowed.\n * @param   {Array}    $0.filesList         List of files.\n * @param   {?number}  $0.maxUploadFileSize Maximum upload size in bytes allowed for the site.\n * @param   {Function} $0.onError           Function called when an error happens.\n * @param   {Function} $0.onFileChange      Function called each time a file or a temporary representation of the file is available.\n */\nexport default function( {\n\tallowedTypes,\n\tfilesList,\n\tmaxUploadFileSize,\n\tonError = noop,\n\tonFileChange,\n} ) {\n\tconst {\n\t\tgetCurrentPostId,\n\t\tgetEditorSettings,\n\t} = select( 'core/editor' );\n\tconst wpAllowedMimeTypes = getEditorSettings().allowedMimeTypes;\n\tmaxUploadFileSize = maxUploadFileSize || getEditorSettings().maxUploadFileSize;\n\n\tmediaUpload( {\n\t\tallowedTypes,\n\t\tfilesList,\n\t\tonFileChange,\n\t\tadditionalData: {\n\t\t\tpost: getCurrentPostId(),\n\t\t},\n\t\tmaxUploadFileSize,\n\t\tonError: ( { message } ) => onError( message ),\n\t\twpAllowedMimeTypes,\n\t} );\n}\n"]}