{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/block-library/src/missing/index.js"],"names":["__","sprintf","RawHTML","Fragment","Button","getBlockType","createBlock","withDispatch","Warning","MissingBlockWarning","attributes","convertToHTML","originalName","originalUndelimitedContent","hasContent","hasHTMLBlock","actions","messageHTML","push","edit","dispatch","clientId","replaceBlock","content","name","settings","category","title","description","supports","className","customClassName","inserter","html","type","originalContent","source","save"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { RawHTML, Fragment } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { getBlockType, createBlock } from '@wordpress/blocks';\nimport { withDispatch } from '@wordpress/data';\nimport { Warning } from '@wordpress/editor';\n\nfunction MissingBlockWarning( { attributes, convertToHTML } ) {\n\tconst { originalName, originalUndelimitedContent } = attributes;\n\tconst hasContent = !! originalUndelimitedContent;\n\tconst hasHTMLBlock = getBlockType( 'core/html' );\n\n\tconst actions = [];\n\tlet messageHTML;\n\tif ( hasContent && hasHTMLBlock ) {\n\t\tmessageHTML = sprintf(\n\t\t\t__( 'Your site doesn\\'t include support for the \"%s\" block. You can leave this block intact, convert its content to a Custom HTML block, or remove it entirely.' ),\n\t\t\toriginalName\n\t\t);\n\t\tactions.push(\n\t\t\t<Button key=\"convert\" onClick={ convertToHTML } isLarge isPrimary>\n\t\t\t\t{ __( 'Keep as HTML' ) }\n\t\t\t</Button>\n\t\t);\n\t} else {\n\t\tmessageHTML = sprintf(\n\t\t\t__( 'Your site doesn\\'t include support for the \"%s\" block. You can leave this block intact or remove it entirely.' ),\n\t\t\toriginalName\n\t\t);\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Warning actions={ actions }>\n\t\t\t\t{ messageHTML }\n\t\t\t</Warning>\n\t\t\t<RawHTML>{ originalUndelimitedContent }</RawHTML>\n\t\t</Fragment>\n\t);\n}\n\nconst edit = withDispatch( ( dispatch, { clientId, attributes } ) => {\n\tconst { replaceBlock } = dispatch( 'core/editor' );\n\treturn {\n\t\tconvertToHTML() {\n\t\t\treplaceBlock( clientId, createBlock( 'core/html', {\n\t\t\t\tcontent: attributes.originalUndelimitedContent,\n\t\t\t} ) );\n\t\t},\n\t};\n} )( MissingBlockWarning );\n\nexport const name = 'core/missing';\n\nexport const settings = {\n\tname,\n\tcategory: 'common',\n\ttitle: __( 'Unrecognized Block' ),\n\tdescription: __( 'Your site doesn\\'t include support for this block.' ),\n\n\tsupports: {\n\t\tclassName: false,\n\t\tcustomClassName: false,\n\t\tinserter: false,\n\t\thtml: false,\n\t},\n\n\tattributes: {\n\t\toriginalName: {\n\t\t\ttype: 'string',\n\t\t},\n\t\toriginalUndelimitedContent: {\n\t\t\ttype: 'string',\n\t\t},\n\t\toriginalContent: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t},\n\t},\n\n\tedit,\n\tsave( { attributes } ) {\n\t\t// Preserve the missing block's content.\n\t\treturn <RawHTML>{ attributes.originalContent }</RawHTML>;\n\t},\n};\n"]}