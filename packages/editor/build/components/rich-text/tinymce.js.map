{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/rich-text/tinymce.js"],"names":["window","getSelection","TEXT_NODE","Node","TINYMCE_ZWSP","needsInternetExplorerInputFix","editorNode","test","navigator","userAgent","tagName","applyInternetExplorerInputFix","mapTextInputEvent","textInputEvent","stopImmediatePropagation","inputEvent","document","createEvent","initEvent","data","target","dispatchEvent","mapDeletionKeyUpEvents","keyCode","isDeletion","BACKSPACE","DELETE","contains","addEventListener","removeInternetExplorerInputFix","removeEventListener","IS_PLACEHOLDER_VISIBLE_ATTR_NAME","TinyMCE","bindEditorNode","bind","onFocus","onKeyDown","props","initialize","nextProps","configureIsPlaceholderVisible","isPlaceholderVisible","style","setAttribute","Object","assign","className","removedKeys","updatedKeys","forEach","key","removeAttribute","editor","destroy","isPlaceholderVisibleString","String","getAttribute","settings","getSettings","theme","inline","toolbar","browser_spellcheck","entity_encoding","convert_urls","verify_html","inline_boundaries_selector","plugins","tinymce","init","setup","onSetup","setHTML","on","dom","character","shortcuts","remove","number","setRef","event","ENTER","preventDefault","LEFT","RIGHT","focusNode","nodeType","nodeValue","length","isReverse","edgeSibling","noop","ariaProps","defaultValue","onPaste","onInput","multilineTag","multilineWrapperTags","onKeyUp","role","initialHTML","Array","isArray","children","toHTML","value","contentEditable","__html","Component"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport tinymce from 'tinymce';\nimport { isEqual, noop } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Component, createElement } from '@wordpress/element';\nimport { BACKSPACE, DELETE, ENTER, LEFT, RIGHT } from '@wordpress/keycodes';\nimport { toHTMLString } from '@wordpress/rich-text';\nimport { children } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { diffAriaProps, pickAriaProps } from './aria';\n\n/**\n * Browser dependencies\n */\n\nconst { getSelection } = window;\nconst { TEXT_NODE } = window.Node;\n\n/**\n * Zero-width space character used by TinyMCE as a caret landing point for\n * inline boundary nodes.\n *\n * @see tinymce/src/core/main/ts/text/Zwsp.ts\n *\n * @type {string}\n */\nexport const TINYMCE_ZWSP = '\\uFEFF';\n\n/**\n * Determines whether we need a fix to provide `input` events for contenteditable.\n *\n * @param {Element} editorNode The root editor node.\n *\n * @return {boolean} A boolean indicating whether the fix is needed.\n */\nfunction needsInternetExplorerInputFix( editorNode ) {\n\treturn (\n\t\t// Rely on userAgent in the absence of a reasonable feature test for contenteditable `input` events.\n\t\t/Trident/.test( window.navigator.userAgent ) &&\n\t\t// IE11 dispatches input events for `<input>` and `<textarea>`.\n\t\t! /input/i.test( editorNode.tagName ) &&\n\t\t! /textarea/i.test( editorNode.tagName )\n\t);\n}\n\n/**\n * Applies a fix that provides `input` events for contenteditable in Internet Explorer.\n *\n * @param {Element} editorNode The root editor node.\n *\n * @return {Function} A function to remove the fix (for cleanup).\n */\nfunction applyInternetExplorerInputFix( editorNode ) {\n\t/**\n\t * Dispatches `input` events in response to `textinput` events.\n\t *\n\t * IE provides a `textinput` event that is similar to an `input` event,\n\t * and we use it to manually dispatch an `input` event.\n\t * `textinput` is dispatched for text entry but for not deletions.\n\t *\n\t * @param {Event} textInputEvent An Internet Explorer `textinput` event.\n\t */\n\tfunction mapTextInputEvent( textInputEvent ) {\n\t\ttextInputEvent.stopImmediatePropagation();\n\n\t\tconst inputEvent = document.createEvent( 'Event' );\n\t\tinputEvent.initEvent( 'input', true, false );\n\t\tinputEvent.data = textInputEvent.data;\n\t\ttextInputEvent.target.dispatchEvent( inputEvent );\n\t}\n\n\t/**\n\t * Dispatches `input` events in response to Delete and Backspace keyup.\n\t *\n\t * It would be better dispatch an `input` event after each deleting\n\t * `keydown` because the DOM is updated after each, but it is challenging\n\t * to determine the right time to dispatch `input` since propagation of\n\t * `keydown` can be stopped at any point.\n\t *\n\t * It's easier to listen for `keyup` in the capture phase and dispatch\n\t * `input` before `keyup` propagates further. It's not perfect, but should\n\t * be good enough.\n\t *\n\t * @param {KeyboardEvent} keyUp\n\t * @param {Node}          keyUp.target  The event target.\n\t * @param {number}        keyUp.keyCode The key code.\n\t */\n\tfunction mapDeletionKeyUpEvents( { target, keyCode } ) {\n\t\tconst isDeletion = BACKSPACE === keyCode || DELETE === keyCode;\n\n\t\tif ( isDeletion && editorNode.contains( target ) ) {\n\t\t\tconst inputEvent = document.createEvent( 'Event' );\n\t\t\tinputEvent.initEvent( 'input', true, false );\n\t\t\tinputEvent.data = null;\n\t\t\ttarget.dispatchEvent( inputEvent );\n\t\t}\n\t}\n\n\teditorNode.addEventListener( 'textinput', mapTextInputEvent );\n\tdocument.addEventListener( 'keyup', mapDeletionKeyUpEvents, true );\n\treturn function removeInternetExplorerInputFix() {\n\t\teditorNode.removeEventListener( 'textinput', mapTextInputEvent );\n\t\tdocument.removeEventListener( 'keyup', mapDeletionKeyUpEvents, true );\n\t};\n}\n\nconst IS_PLACEHOLDER_VISIBLE_ATTR_NAME = 'data-is-placeholder-visible';\nexport default class TinyMCE extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.bindEditorNode = this.bindEditorNode.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\t}\n\n\tonFocus() {\n\t\tif ( this.props.onFocus ) {\n\t\t\tthis.props.onFocus();\n\t\t}\n\n\t\tthis.initialize();\n\t}\n\n\t// We must prevent rerenders because RichText, the browser, and TinyMCE will\n\t// modify the DOM. React will rerender the DOM fine, but we're losing\n\t// selection and it would be more expensive to do so as it would just set\n\t// the inner HTML through `dangerouslySetInnerHTML`. Instead RichText does\n\t// it's own diffing and selection setting.\n\t//\n\t// Because we never update the component, we have to look through props and\n\t// update the attributes on the wrapper nodes here. `componentDidUpdate`\n\t// will never be called.\n\tshouldComponentUpdate( nextProps ) {\n\t\tthis.configureIsPlaceholderVisible( nextProps.isPlaceholderVisible );\n\n\t\tif ( ! isEqual( this.props.style, nextProps.style ) ) {\n\t\t\tthis.editorNode.setAttribute( 'style', '' );\n\t\t\tObject.assign( this.editorNode.style, nextProps.style );\n\t\t}\n\n\t\tif ( ! isEqual( this.props.className, nextProps.className ) ) {\n\t\t\tthis.editorNode.className = classnames( nextProps.className, 'editor-rich-text__tinymce' );\n\t\t}\n\n\t\tconst { removedKeys, updatedKeys } = diffAriaProps( this.props, nextProps );\n\t\tremovedKeys.forEach( ( key ) =>\n\t\t\tthis.editorNode.removeAttribute( key ) );\n\t\tupdatedKeys.forEach( ( key ) =>\n\t\t\tthis.editorNode.setAttribute( key, nextProps[ key ] ) );\n\n\t\treturn false;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( ! this.editor ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.destroy();\n\t\tdelete this.editor;\n\t}\n\n\tconfigureIsPlaceholderVisible( isPlaceholderVisible ) {\n\t\tconst isPlaceholderVisibleString = String( !! isPlaceholderVisible );\n\t\tif ( this.editorNode.getAttribute( IS_PLACEHOLDER_VISIBLE_ATTR_NAME ) !== isPlaceholderVisibleString ) {\n\t\t\tthis.editorNode.setAttribute( IS_PLACEHOLDER_VISIBLE_ATTR_NAME, isPlaceholderVisibleString );\n\t\t}\n\t}\n\n\tinitialize() {\n\t\tconst settings = this.props.getSettings( {\n\t\t\ttheme: false,\n\t\t\tinline: true,\n\t\t\ttoolbar: false,\n\t\t\tbrowser_spellcheck: true,\n\t\t\tentity_encoding: 'raw',\n\t\t\tconvert_urls: false,\n\t\t\t// Disables TinyMCE's parsing to verify HTML. It makes\n\t\t\t// initialisation a bit faster. Since we're setting raw HTML\n\t\t\t// already with dangerouslySetInnerHTML, we don't need this to be\n\t\t\t// verified.\n\t\t\tverify_html: false,\n\t\t\tinline_boundaries_selector: 'a[href],code,b,i,strong,em,del,ins,sup,sub',\n\t\t\tplugins: [],\n\t\t} );\n\n\t\ttinymce.init( {\n\t\t\t...settings,\n\t\t\ttarget: this.editorNode,\n\t\t\tsetup: ( editor ) => {\n\t\t\t\tthis.editor = editor;\n\t\t\t\tthis.props.onSetup( editor );\n\n\t\t\t\t// TinyMCE resets the element content on initialization, even\n\t\t\t\t// when it's already identical to what exists currently. This\n\t\t\t\t// behavior clobbers a selection which exists at the time of\n\t\t\t\t// initialization, thus breaking writing flow navigation. The\n\t\t\t\t// hack here neutralizes setHTML during initialization.\n\t\t\t\tlet setHTML;\n\n\t\t\t\teditor.on( 'preinit', () => {\n\t\t\t\t\tsetHTML = editor.dom.setHTML;\n\t\t\t\t\teditor.dom.setHTML = () => {};\n\t\t\t\t} );\n\n\t\t\t\teditor.on( 'init', () => {\n\t\t\t\t\t// See https://github.com/tinymce/tinymce/blob/master/src/core/main/ts/keyboard/FormatShortcuts.ts\n\t\t\t\t\t[ 'b', 'i', 'u' ].forEach( ( character ) => {\n\t\t\t\t\t\teditor.shortcuts.remove( `meta+${ character }` );\n\t\t\t\t\t} );\n\t\t\t\t\t[ 1, 2, 3, 4, 5, 6, 7, 8, 9 ].forEach( ( number ) => {\n\t\t\t\t\t\teditor.shortcuts.remove( `access+${ number }` );\n\t\t\t\t\t} );\n\n\t\t\t\t\teditor.dom.setHTML = setHTML;\n\t\t\t\t} );\n\n\t\t\t\teditor.on( 'keydown', this.onKeyDown, true );\n\t\t\t},\n\t\t} );\n\t}\n\n\tbindEditorNode( editorNode ) {\n\t\tthis.editorNode = editorNode;\n\n\t\tif ( this.props.setRef ) {\n\t\t\tthis.props.setRef( editorNode );\n\t\t}\n\n\t\t/**\n\t\t * A ref function can be used for cleanup because React calls it with\n\t\t * `null` when unmounting.\n\t\t */\n\t\tif ( this.removeInternetExplorerInputFix ) {\n\t\t\tthis.removeInternetExplorerInputFix();\n\t\t\tthis.removeInternetExplorerInputFix = null;\n\t\t}\n\n\t\tif ( editorNode && needsInternetExplorerInputFix( editorNode ) ) {\n\t\t\tthis.removeInternetExplorerInputFix = applyInternetExplorerInputFix( editorNode );\n\t\t}\n\t}\n\n\tonKeyDown( event ) {\n\t\tconst { keyCode } = event;\n\n\t\t// Disables TinyMCE behaviour.\n\t\tif ( keyCode === ENTER || keyCode === BACKSPACE || keyCode === DELETE ) {\n\t\t\tevent.preventDefault();\n\t\t\t// For some reason this is needed to also prevent the insertion of\n\t\t\t// line breaks.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Handles a horizontal navigation key down event to handle the case\n\t\t// where TinyMCE attempts to preventDefault when on the outside edge of\n\t\t// an inline boundary when arrowing _away_ from the boundary, not within\n\t\t// it. Replaces the TinyMCE event `preventDefault` behavior with a noop,\n\t\t// such that those relying on `defaultPrevented` are not misinformed\n\t\t// about the arrow event.\n\t\t//\n\t\t// If TinyMCE#4476 is resolved, this handling may be removed.\n\t\t//\n\t\t// @see https://github.com/tinymce/tinymce/issues/4476\n\t\tif ( keyCode !== LEFT && keyCode !== RIGHT ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { focusNode } = getSelection();\n\t\tconst { nodeType, nodeValue } = focusNode;\n\n\t\tif ( nodeType !== TEXT_NODE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nodeValue.length !== 1 || nodeValue[ 0 ] !== TINYMCE_ZWSP ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Consider to be moving away from inline boundary based on:\n\t\t//\n\t\t// 1. Within a text fragment consisting only of ZWSP.\n\t\t// 2. If in reverse, there is no previous sibling. If forward, there is\n\t\t//    no next sibling (i.e. end of node).\n\t\tconst isReverse = event.keyCode === LEFT;\n\t\tconst edgeSibling = isReverse ? 'previousSibling' : 'nextSibling';\n\t\tif ( ! focusNode[ edgeSibling ] ) {\n\t\t\t// Note: This is not reassigning on the native event, rather the\n\t\t\t// \"fixed\" TinyMCE copy, which proxies its preventDefault to the\n\t\t\t// native event. By reassigning here, we're effectively preventing\n\t\t\t// the proxied call on the native event, but not otherwise mutating\n\t\t\t// the original event object.\n\t\t\tevent.preventDefault = noop;\n\t\t}\n\t}\n\n\trender() {\n\t\tconst ariaProps = pickAriaProps( this.props );\n\t\tconst {\n\t\t\ttagName = 'div',\n\t\t\tstyle,\n\t\t\tdefaultValue,\n\t\t\tclassName,\n\t\t\tisPlaceholderVisible,\n\t\t\tonPaste,\n\t\t\tonInput,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tonKeyDown,\n\t\t\tonKeyUp,\n\t\t} = this.props;\n\n\t\t/*\n\t\t * The role=textbox and aria-multiline=true must always be used together\n\t\t * as TinyMCE always behaves like a sort of textarea where text wraps in\n\t\t * multiple lines. Only the table block editable element is excluded.\n\t\t */\n\t\tif ( tagName !== 'table' ) {\n\t\t\tariaProps.role = 'textbox';\n\t\t\tariaProps[ 'aria-multiline' ] = true;\n\t\t}\n\n\t\t// If a default value is provided, render it into the DOM even before\n\t\t// TinyMCE finishes initializing. This avoids a short delay by allowing\n\t\t// us to show and focus the content before it's truly ready to edit.\n\t\tlet initialHTML = defaultValue;\n\n\t\t// Guard for blocks passing `null` in onSplit callbacks. May be removed\n\t\t// if onSplit is revised to not pass a `null` value.\n\t\tif ( defaultValue === null ) {\n\t\t\tinitialHTML = '';\n\t\t// Handle deprecated `children` and `node` sources.\n\t\t} else if ( Array.isArray( defaultValue ) ) {\n\t\t\tinitialHTML = children.toHTML( defaultValue );\n\t\t} else if ( typeof defaultValue !== 'string' ) {\n\t\t\tinitialHTML = toHTMLString( {\n\t\t\t\tvalue: defaultValue,\n\t\t\t\tmultilineTag,\n\t\t\t\tmultilineWrapperTags,\n\t\t\t} );\n\t\t}\n\n\t\tif ( initialHTML === '' ) {\n\t\t\t// Ensure the field is ready to receive focus by TinyMCE.\n\t\t\tinitialHTML = '<br data-mce-bogus=\"1\">';\n\t\t}\n\n\t\treturn createElement( tagName, {\n\t\t\t...ariaProps,\n\t\t\tclassName: classnames( className, 'editor-rich-text__tinymce' ),\n\t\t\tcontentEditable: true,\n\t\t\t[ IS_PLACEHOLDER_VISIBLE_ATTR_NAME ]: isPlaceholderVisible,\n\t\t\tref: this.bindEditorNode,\n\t\t\tstyle,\n\t\t\tsuppressContentEditableWarning: true,\n\t\t\tdangerouslySetInnerHTML: { __html: initialHTML },\n\t\t\tonPaste,\n\t\t\tonInput,\n\t\t\tonFocus: this.onFocus,\n\t\t\tonKeyDown,\n\t\t\tonKeyUp,\n\t\t} );\n\t}\n}\n"]}