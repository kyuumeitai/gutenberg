{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/post-publish-panel/index.js"],"names":["PostPublishPanel","arguments","onSubmit","bind","prevProps","isPublished","props","isSaving","isDirty","onClose","hasPublishAction","forceIsDirty","forceIsSaving","isBeingScheduled","isPublishSidebarEnabled","isScheduled","onTogglePublishSidebar","PostPublishExtension","PrePublishExtension","additionalProps","isPublishedOrScheduled","propsForPanel","Component","select","getCurrentPost","isCurrentPostPublished","isCurrentPostScheduled","isEditedPostBeingScheduled","isEditedPostDirty","isSavingPost","dispatch","disablePublishSidebar","enablePublishSidebar","withConstrainedTabbing"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get, omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport {\n\tIconButton,\n\tSpinner,\n\tCheckboxControl,\n\twithConstrainedTabbing,\n} from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal Dependencies\n */\nimport PostPublishButton from '../post-publish-button';\nimport PostPublishPanelPrepublish from './prepublish';\nimport PostPublishPanelPostpublish from './postpublish';\n\nexport class PostPublishPanel extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onSubmit = this.onSubmit.bind( this );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\t// Automatically collapse the publish sidebar when a post\n\t\t// is published and the user makes an edit.\n\t\tif ( prevProps.isPublished && ! this.props.isSaving && this.props.isDirty ) {\n\t\t\tthis.props.onClose();\n\t\t}\n\t}\n\n\tonSubmit() {\n\t\tconst { onClose, hasPublishAction } = this.props;\n\t\tif ( ! hasPublishAction ) {\n\t\t\tonClose();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tforceIsDirty,\n\t\t\tforceIsSaving,\n\t\t\tisBeingScheduled,\n\t\t\tisPublished,\n\t\t\tisPublishSidebarEnabled,\n\t\t\tisScheduled,\n\t\t\tisSaving,\n\t\t\tonClose,\n\t\t\tonTogglePublishSidebar,\n\t\t\tPostPublishExtension,\n\t\t\tPrePublishExtension,\n\t\t\t...additionalProps\n\t\t} = this.props;\n\t\tconst isPublishedOrScheduled = isPublished || ( isScheduled && isBeingScheduled );\n\t\tconst propsForPanel = omit( additionalProps, [ 'hasPublishAction', 'isDirty' ] );\n\t\treturn (\n\t\t\t<div className=\"editor-post-publish-panel\" { ...propsForPanel }>\n\t\t\t\t<div className=\"editor-post-publish-panel__header\">\n\t\t\t\t\t{ isPublishedOrScheduled && ! isSaving ? (\n\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-published\">\n\t\t\t\t\t\t\t{ isScheduled ? __( 'Scheduled' ) : __( 'Published' ) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-publish-button\">\n\t\t\t\t\t\t\t<PostPublishButton focusOnMount={ true } onSubmit={ this.onSubmit } forceIsDirty={ forceIsDirty } forceIsSaving={ forceIsSaving } />\n\t\t\t\t\t\t\t<span className=\"editor-post-publish-panel__spacer\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-expanded={ true }\n\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\ticon=\"no-alt\"\n\t\t\t\t\t\tlabel={ __( 'Close panel' ) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editor-post-publish-panel__content\">\n\t\t\t\t\t{ ! isSaving && ! isPublishedOrScheduled && (\n\t\t\t\t\t\t<PostPublishPanelPrepublish>\n\t\t\t\t\t\t\t{ PrePublishExtension && <PrePublishExtension /> }\n\t\t\t\t\t\t</PostPublishPanelPrepublish>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ! isSaving && isPublishedOrScheduled && (\n\t\t\t\t\t\t<PostPublishPanelPostpublish>\n\t\t\t\t\t\t\t{ PostPublishExtension && <PostPublishExtension /> }\n\t\t\t\t\t\t</PostPublishPanelPostpublish>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isSaving && ( <Spinner /> ) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editor-post-publish-panel__footer\">\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\tlabel={ __( 'Always show pre-publish checks.' ) }\n\t\t\t\t\t\tchecked={ isPublishSidebarEnabled }\n\t\t\t\t\t\tonChange={ onTogglePublishSidebar }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetCurrentPost,\n\t\t\tisCurrentPostPublished,\n\t\t\tisCurrentPostScheduled,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tisEditedPostDirty,\n\t\t\tisSavingPost,\n\t\t} = select( 'core/editor' );\n\t\tconst { isPublishSidebarEnabled } = select( 'core/editor' );\n\t\treturn {\n\t\t\thasPublishAction: get( getCurrentPost(), [ '_links', 'wp:action-publish' ], false ),\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tisDirty: isEditedPostDirty(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisPublishSidebarEnabled: isPublishSidebarEnabled(),\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisScheduled: isCurrentPostScheduled(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { isPublishSidebarEnabled } ) => {\n\t\tconst { disablePublishSidebar, enablePublishSidebar } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tonTogglePublishSidebar: ( ) => {\n\t\t\t\tif ( isPublishSidebarEnabled ) {\n\t\t\t\t\tdisablePublishSidebar();\n\t\t\t\t} else {\n\t\t\t\t\tenablePublishSidebar();\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n\twithConstrainedTabbing,\n] )( PostPublishPanel );\n"]}