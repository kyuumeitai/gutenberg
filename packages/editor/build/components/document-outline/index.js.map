{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/document-outline/index.js"],"names":["emptyHeadingContent","incorrectLevelContent","singleH1Headings","multipleH1Headings","computeOutlineHeadings","blocks","path","block","name","level","attributes","isEmpty","isEmptyHeading","innerBlocks","heading","content","length","DocumentOutline","title","onSelect","isTitleSupported","headings","prevHeadingLevel","onSelectHeading","clientId","focusTitle","titleNode","document","querySelector","focus","hasTitle","countByLevel","hasMultipleH1","map","item","index","isIncorrectLevel","isValid","select","getEditedPostAttribute","getBlocks","getPostType","postType","dispatch","selectBlock"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { countBy, flatMap, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport DocumentOutlineItem from './item';\nimport RichText from './../rich-text';\n\n/**\n * Module constants\n */\nconst emptyHeadingContent = <em>{ __( '(Empty heading)' ) }</em>;\nconst incorrectLevelContent = [\n\t<br key=\"incorrect-break\" />,\n\t<em key=\"incorrect-message\">{ __( '(Incorrect heading level)' ) }</em>,\n];\nconst singleH1Headings = [\n\t<br key=\"incorrect-break-h1\" />,\n\t<em key=\"incorrect-message-h1\">{ __( '(Your theme may already use a H1 for the post title)' ) }</em>,\n];\nconst multipleH1Headings = [\n\t<br key=\"incorrect-break-multiple-h1\" />,\n\t<em key=\"incorrect-message-multiple-h1\">{ __( '(Multiple H1 headings are not recommended)' ) }</em>,\n];\n\n/**\n * Returns an array of heading blocks enhanced with the following properties:\n * path    - An array of blocks that are ancestors of the heading starting from a top-level node.\n *           Can be an empty array if the heading is a top-level node (is not nested inside another block).\n * level   - An integer with the heading level.\n * isEmpty - Flag indicating if the heading has no content.\n *\n * @param {?Array} blocks An array of blocks.\n * @param {?Array} path   An array of blocks that are ancestors of the blocks passed as blocks.\n *\n * @return {Array} An array of heading blocks enhanced with the properties described above.\n */\nconst computeOutlineHeadings = ( blocks = [], path = [] ) => {\n\treturn flatMap( blocks, ( block = {} ) => {\n\t\tif ( block.name === 'core/heading' ) {\n\t\t\treturn {\n\t\t\t\t...block,\n\t\t\t\tpath,\n\t\t\t\tlevel: block.attributes.level,\n\t\t\t\tisEmpty: isEmptyHeading( block ),\n\t\t\t};\n\t\t}\n\t\treturn computeOutlineHeadings( block.innerBlocks, [ ...path, block ] );\n\t} );\n};\n\nconst isEmptyHeading = ( heading ) => ! heading.attributes.content || heading.attributes.content.length === 0;\n\nexport const DocumentOutline = ( { blocks = [], title, onSelect, isTitleSupported } ) => {\n\tconst headings = computeOutlineHeadings( blocks );\n\n\tif ( headings.length < 1 ) {\n\t\treturn null;\n\t}\n\n\tlet prevHeadingLevel = 1;\n\n\t// Select the corresponding block in the main editor\n\t// when clicking on a heading item from the list.\n\tconst onSelectHeading = ( clientId ) => onSelect( clientId );\n\tconst focusTitle = () => {\n\t\t// Not great but it's the simplest way to focus the title right now.\n\t\tconst titleNode = document.querySelector( '.editor-post-title__input' );\n\t\tif ( titleNode ) {\n\t\t\ttitleNode.focus();\n\t\t}\n\t};\n\n\tconst hasTitle = isTitleSupported && title;\n\tconst countByLevel = countBy( headings, 'level' );\n\tconst hasMultipleH1 = countByLevel[ 1 ] > 1;\n\n\treturn (\n\t\t<div className=\"document-outline\">\n\t\t\t<ul>\n\t\t\t\t{ hasTitle && (\n\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\tlevel={ __( 'Title' ) }\n\t\t\t\t\t\tisValid\n\t\t\t\t\t\tonClick={ focusTitle }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ title }\n\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t) }\n\t\t\t\t{ headings.map( ( item, index ) => {\n\t\t\t\t\t// Headings remain the same, go up by one, or down by any amount.\n\t\t\t\t\t// Otherwise there are missing levels.\n\t\t\t\t\tconst isIncorrectLevel = item.level > prevHeadingLevel + 1;\n\n\t\t\t\t\tconst isValid = (\n\t\t\t\t\t\t! item.isEmpty &&\n\t\t\t\t\t\t! isIncorrectLevel &&\n\t\t\t\t\t\t!! item.level &&\n\t\t\t\t\t\t( item.level !== 1 || ( ! hasMultipleH1 && ! hasTitle ) )\n\t\t\t\t\t);\n\t\t\t\t\tprevHeadingLevel = item.level;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\tlevel={ `H${ item.level }` }\n\t\t\t\t\t\t\tisValid={ isValid }\n\t\t\t\t\t\t\tonClick={ () => onSelectHeading( item.clientId ) }\n\t\t\t\t\t\t\tpath={ item.path }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ item.isEmpty ?\n\t\t\t\t\t\t\t\temptyHeadingContent :\n\t\t\t\t\t\t\t\t<RichText.Content\n\t\t\t\t\t\t\t\t\ttagName=\"span\"\n\t\t\t\t\t\t\t\t\tvalue={ item.attributes.content }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ isIncorrectLevel && incorrectLevelContent }\n\t\t\t\t\t\t\t{ item.level === 1 && hasMultipleH1 && multipleH1Headings }\n\t\t\t\t\t\t\t{ hasTitle && item.level === 1 && ! hasMultipleH1 && singleH1Headings }\n\t\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default compose(\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getBlocks } = select( 'core/editor' );\n\t\tconst { getPostType } = select( 'core' );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tblocks: getBlocks(),\n\t\t\tisTitleSupported: get( postType, [ 'supports', 'title' ], false ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { selectBlock } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tonSelect: selectBlock,\n\t\t};\n\t} )\n)( DocumentOutline );\n"]}