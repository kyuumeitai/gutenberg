{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/block-library/src/pullquote/index.js"],"names":["classnames","get","includes","__","_x","getColorClassName","RichText","getColorObjectByAttributeValues","select","Path","Polygon","SVG","default","edit","SOLID_COLOR_STYLE_NAME","SOLID_COLOR_CLASS","blockAttributes","value","type","source","selector","multiline","citation","mainColor","customMainColor","textColor","customTextColor","name","settings","title","description","icon","category","attributes","styles","label","isDefault","supports","align","save","className","isSolidColorStyle","figureClass","figureStyles","backgroundColor","borderColor","colors","getEditorSettings","colorObject","color","blockquoteTextColorClass","blockquoteClasses","undefined","blockquoteStyle","isEmpty","deprecated"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tgetColorClassName,\n\tRichText,\n\tgetColorObjectByAttributeValues,\n} from '@wordpress/editor';\nimport {\n\tselect,\n} from '@wordpress/data';\nimport { Path, Polygon, SVG } from '@wordpress/components';\n\nimport {\n\tdefault as edit,\n\tSOLID_COLOR_STYLE_NAME,\n\tSOLID_COLOR_CLASS,\n} from './edit';\n\nconst blockAttributes = {\n\tvalue: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'blockquote',\n\t\tmultiline: 'p',\n\t},\n\tcitation: {\n\t\ttype: 'string',\n\t\tsource: 'html',\n\t\tselector: 'cite',\n\t\tdefault: '',\n\t},\n\tmainColor: {\n\t\ttype: 'string',\n\t},\n\tcustomMainColor: {\n\t\ttype: 'string',\n\t},\n\ttextColor: {\n\t\ttype: 'string',\n\t},\n\tcustomTextColor: {\n\t\ttype: 'string',\n\t},\n};\n\nexport const name = 'core/pullquote';\n\nexport const settings = {\n\n\ttitle: __( 'Pullquote' ),\n\n\tdescription: __( 'Give special visual emphasis to a quote from your text.' ),\n\n\ticon: <SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><Path d=\"M0,0h24v24H0V0z\" fill=\"none\" /><Polygon points=\"21 18 2 18 2 20 21 20\" /><Path d=\"m19 10v4h-15v-4h15m1-2h-17c-0.55 0-1 0.45-1 1v6c0 0.55 0.45 1 1 1h17c0.55 0 1-0.45 1-1v-6c0-0.55-0.45-1-1-1z\" /><Polygon points=\"21 4 2 4 2 6 21 6\" /></SVG>,\n\n\tcategory: 'formatting',\n\n\tattributes: blockAttributes,\n\n\tstyles: [\n\t\t{ name: 'default', label: _x( 'Regular', 'block style' ), isDefault: true },\n\t\t{ name: SOLID_COLOR_STYLE_NAME, label: __( 'Solid Color' ) },\n\t],\n\n\tsupports: {\n\t\talign: [ 'left', 'right', 'wide', 'full' ],\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { mainColor, customMainColor, textColor, customTextColor, value, citation, className } = attributes;\n\t\tconst isSolidColorStyle = includes( className, SOLID_COLOR_CLASS );\n\n\t\tlet figureClass, figureStyles;\n\t\t// Is solid color style\n\t\tif ( isSolidColorStyle ) {\n\t\t\tfigureClass = getColorClassName( 'background-color', mainColor );\n\t\t\tif ( ! figureClass ) {\n\t\t\t\tfigureStyles = {\n\t\t\t\t\tbackgroundColor: customMainColor,\n\t\t\t\t};\n\t\t\t}\n\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\n\t\t} else if ( customMainColor ) {\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: customMainColor,\n\t\t\t};\n\t\t// Is normal style and a named color is being used, we need to retrieve the color value to set the style,\n\t\t// as there is no expectation that themes create classes that set border colors.\n\t\t} else if ( mainColor ) {\n\t\t\tconst colors = get( select( 'core/editor' ).getEditorSettings(), [ 'colors' ], [] );\n\t\t\tconst colorObject = getColorObjectByAttributeValues( colors, mainColor );\n\t\t\tfigureStyles = {\n\t\t\t\tborderColor: colorObject.color,\n\t\t\t};\n\t\t}\n\n\t\tconst blockquoteTextColorClass = getColorClassName( 'color', textColor );\n\t\tconst blockquoteClasses = textColor || customTextColor ? classnames( 'has-text-color', {\n\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\n\t\t} ) : undefined;\n\t\tconst blockquoteStyle = blockquoteTextColorClass ? undefined : { color: customTextColor };\n\t\treturn (\n\t\t\t<figure className={ figureClass } style={ figureStyles }>\n\t\t\t\t<blockquote className={ blockquoteClasses } style={ blockquoteStyle } >\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"cite\" value={ citation } /> }\n\t\t\t\t</blockquote>\n\t\t\t</figure>\n\t\t);\n\t},\n\n\tdeprecated: [ {\n\t\tattributes: {\n\t\t\t...blockAttributes,\n\t\t},\n\t\tsave( { attributes } ) {\n\t\t\tconst { value, citation } = attributes;\n\t\t\treturn (\n\t\t\t\t<blockquote>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"cite\" value={ citation } /> }\n\t\t\t\t</blockquote>\n\t\t\t);\n\t\t},\n\t}, {\n\t\tattributes: {\n\t\t\t...blockAttributes,\n\t\t\tcitation: {\n\t\t\t\ttype: 'string',\n\t\t\t\tsource: 'html',\n\t\t\t\tselector: 'footer',\n\t\t\t},\n\t\t\talign: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: 'none',\n\t\t\t},\n\t\t},\n\n\t\tsave( { attributes } ) {\n\t\t\tconst { value, citation, align } = attributes;\n\n\t\t\treturn (\n\t\t\t\t<blockquote className={ `align${ align }` }>\n\t\t\t\t\t<RichText.Content value={ value } multiline />\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && <RichText.Content tagName=\"footer\" value={ citation } /> }\n\t\t\t\t</blockquote>\n\t\t\t);\n\t\t},\n\t} ],\n};\n"]}