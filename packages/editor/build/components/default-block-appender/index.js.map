{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/default-block-appender/index.js"],"names":["DefaultBlockAppender","isLocked","isVisible","onAppend","showPrompt","placeholder","rootClientId","value","select","ownProps","getBlockCount","getBlock","getEditorSettings","getTemplateLock","isEmpty","lastBlock","lastBlockClientId","isLastBlockDefault","isLastBlockValid","bodyPlaceholder","dispatch","insertDefaultBlock","startTyping","undefined"],"mappings":";;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAnBA;;;;AAKA;;;;AASA;;;AAOO,SAASA,oBAAT,OAOH;AAAA,MANHC,QAMG,QANHA,QAMG;AAAA,MALHC,SAKG,QALHA,SAKG;AAAA,MAJHC,QAIG,QAJHA,QAIG;AAAA,MAHHC,UAGG,QAHHA,UAGG;AAAA,MAFHC,WAEG,QAFHA,WAEG;AAAA,MADHC,YACG,QADHA,YACG;;AACH,MAAKL,QAAQ,IAAI,CAAEC,SAAnB,EAA+B;AAC9B,WAAO,IAAP;AACA;;AAED,MAAMK,KAAK,GAAG,kCAAgBF,WAAhB,KAAiC,cAAI,kBAAJ,CAA/C,CALG,CAOH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SACC;AAAK,2BAAsBC,YAAY,IAAI,EAA3C;AAAgD,IAAA,SAAS,EAAC;AAA1D,KACC,4BAAC,sBAAD;AAAe,IAAA,YAAY,EAAGA;AAA9B,IADD,EAEC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,kBAAa,cAAI,WAAJ,CAFd;AAGC,IAAA,SAAS,EAAC,wCAHX;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,QAAQ,MALT;AAMC,IAAA,OAAO,EAAGH,QANX;AAOC,IAAA,KAAK,EAAGC,UAAU,GAAGG,KAAH,GAAW;AAP9B,IAFD,EAWC,4BAAC,8BAAD;AAAuB,IAAA,YAAY,EAAGD;AAAtC,IAXD,EAYC,4BAAC,iBAAD;AAAU,IAAA,QAAQ,EAAC;AAAnB,IAZD,CADD;AAgBA;;eACc,sBACd,sBAAY,UAAEE,MAAF,EAAUC,QAAV,EAAwB;AAAA,gBACqCD,MAAM,CAAE,aAAF,CAD3C;AAAA,MAC3BE,aAD2B,WAC3BA,aAD2B;AAAA,MACZC,QADY,WACZA,QADY;AAAA,MACFC,iBADE,WACFA,iBADE;AAAA,MACiBC,eADjB,WACiBA,eADjB;;AAGnC,MAAMC,OAAO,GAAG,CAAEJ,aAAa,CAAED,QAAQ,CAACH,YAAX,CAA/B;AACA,MAAMS,SAAS,GAAGJ,QAAQ,CAAEF,QAAQ,CAACO,iBAAX,CAA1B;AACA,MAAMC,kBAAkB,GAAG,iBAAKF,SAAL,EAAgB,CAAE,MAAF,CAAhB,MAAiC,kCAA5D;AACA,MAAMG,gBAAgB,GAAG,iBAAKH,SAAL,EAAgB,CAAE,SAAF,CAAhB,CAAzB;;AANmC,2BAOPH,iBAAiB,EAPV;AAAA,MAO3BO,eAP2B,sBAO3BA,eAP2B;;AASnC,SAAO;AACNjB,IAAAA,SAAS,EAAEY,OAAO,IAAI,CAAEG,kBAAb,IAAmC,CAAEC,gBAD1C;AAENd,IAAAA,UAAU,EAAEU,OAFN;AAGNb,IAAAA,QAAQ,EAAE,CAAC,CAAEY,eAAe,CAAEJ,QAAQ,CAACH,YAAX,CAHtB;AAIND,IAAAA,WAAW,EAAEc;AAJP,GAAP;AAMA,CAfD,CADc,EAiBd,wBAAc,UAAEC,QAAF,EAAYX,QAAZ,EAA0B;AAAA,kBAInCW,QAAQ,CAAE,aAAF,CAJ2B;AAAA,MAEtCC,kBAFsC,aAEtCA,kBAFsC;AAAA,MAGtCC,WAHsC,aAGtCA,WAHsC;;AAMvC,SAAO;AACNnB,IAAAA,QADM,sBACK;AAAA,UACFG,YADE,GACeG,QADf,CACFH,YADE;AAGVe,MAAAA,kBAAkB,CAAEE,SAAF,EAAajB,YAAb,CAAlB;AACAgB,MAAAA,WAAW;AACX;AANK,GAAP;AAQA,CAdD,CAjBc,EAgCZtB,oBAhCY,C","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { getDefaultBlockName } from '@wordpress/blocks';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BlockDropZone from '../block-drop-zone';\nimport InserterWithShortcuts from '../inserter-with-shortcuts';\nimport Inserter from '../inserter';\n\nexport function DefaultBlockAppender( {\n\tisLocked,\n\tisVisible,\n\tonAppend,\n\tshowPrompt,\n\tplaceholder,\n\trootClientId,\n} ) {\n\tif ( isLocked || ! isVisible ) {\n\t\treturn null;\n\t}\n\n\tconst value = decodeEntities( placeholder ) || __( 'Write your story' );\n\n\t// The appender \"button\" is in-fact a text field so as to support\n\t// transitions by WritingFlow occurring by arrow key press. WritingFlow\n\t// only supports tab transitions into text fields and to the block focus\n\t// boundary.\n\t//\n\t// See: https://github.com/WordPress/gutenberg/issues/4829#issuecomment-374213658\n\t//\n\t// If it were ever to be made to be a proper `button` element, it is\n\t// important to note that `onFocus` alone would not be sufficient to\n\t// capture click events, notably in Firefox.\n\t//\n\t// See: https://gist.github.com/cvrebert/68659d0333a578d75372\n\n\t// The wp-block className is important for editor styles.\n\n\treturn (\n\t\t<div data-root-client-id={ rootClientId || '' } className=\"wp-block editor-default-block-appender\">\n\t\t\t<BlockDropZone rootClientId={ rootClientId } />\n\t\t\t<input\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={ __( 'Add block' ) }\n\t\t\t\tclassName=\"editor-default-block-appender__content\"\n\t\t\t\ttype=\"text\"\n\t\t\t\treadOnly\n\t\t\t\tonFocus={ onAppend }\n\t\t\t\tvalue={ showPrompt ? value : '' }\n\t\t\t/>\n\t\t\t<InserterWithShortcuts rootClientId={ rootClientId } />\n\t\t\t<Inserter position=\"top right\" />\n\t\t</div>\n\t);\n}\nexport default compose(\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getBlockCount, getBlock, getEditorSettings, getTemplateLock } = select( 'core/editor' );\n\n\t\tconst isEmpty = ! getBlockCount( ownProps.rootClientId );\n\t\tconst lastBlock = getBlock( ownProps.lastBlockClientId );\n\t\tconst isLastBlockDefault = get( lastBlock, [ 'name' ] ) === getDefaultBlockName();\n\t\tconst isLastBlockValid = get( lastBlock, [ 'isValid' ] );\n\t\tconst { bodyPlaceholder } = getEditorSettings();\n\n\t\treturn {\n\t\t\tisVisible: isEmpty || ! isLastBlockDefault || ! isLastBlockValid,\n\t\t\tshowPrompt: isEmpty,\n\t\t\tisLocked: !! getTemplateLock( ownProps.rootClientId ),\n\t\t\tplaceholder: bodyPlaceholder,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst {\n\t\t\tinsertDefaultBlock,\n\t\t\tstartTyping,\n\t\t} = dispatch( 'core/editor' );\n\n\t\treturn {\n\t\t\tonAppend() {\n\t\t\t\tconst { rootClientId } = ownProps;\n\n\t\t\t\tinsertDefaultBlock( undefined, rootClientId );\n\t\t\t\tstartTyping();\n\t\t\t},\n\t\t};\n\t} ),\n)( DefaultBlockAppender );\n"]}