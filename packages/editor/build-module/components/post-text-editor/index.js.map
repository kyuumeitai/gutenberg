{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/post-text-editor/index.js"],"names":["Textarea","__","decodeEntities","Component","Fragment","parse","withSelect","withDispatch","withInstanceId","compose","PostTextEditor","arguments","edit","bind","stopEditing","state","event","value","target","props","onChange","setState","isDirty","onPersist","placeholder","instanceId","decodedPlaceholder","select","getEditedPostContent","getEditorSettings","bodyPlaceholder","dispatch","editPost","resetBlocks","content"],"mappings":";;;;;;;;AAAA;;;AAGA,OAAOA,QAAP,MAAqB,yBAArB;AAEA;;;;AAGA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,oBAAxC;AAEA,WAAaC,cAAb;AAAA;AAAA;AAAA;;AACC,4BAAc;AAAA;;AAAA;;AACb,yFAAUC,SAAV;AAEA,UAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,uDAAZ;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AAEA,UAAKE,KAAL,GAAa,EAAb;AANa;AAOb;;AARF;AAAA;;AAqBC;;;;;;;;;;;AArBD,yBAgCOC,KAhCP,EAgCe;AACb,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,WAAKE,KAAL,CAAWC,QAAX,CAAqBH,KAArB;AACA,WAAKI,QAAL,CAAe;AAAEJ,QAAAA,KAAK,EAALA,KAAF;AAASK,QAAAA,OAAO,EAAE;AAAlB,OAAf;AACA;AAED;;;;;;AAtCD;AAAA;AAAA,kCA2Ce;AACb,UAAK,KAAKP,KAAL,CAAWO,OAAhB,EAA0B;AACzB,aAAKH,KAAL,CAAWI,SAAX,CAAsB,KAAKR,KAAL,CAAWE,KAAjC;AACA,aAAKI,QAAL,CAAe;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAf;AACA;AACD;AAhDF;AAAA;AAAA,6BAkDU;AAAA,UACAL,KADA,GACU,KAAKF,KADf,CACAE,KADA;AAAA,wBAE4B,KAAKE,KAFjC;AAAA,UAEAK,WAFA,eAEAA,WAFA;AAAA,UAEaC,UAFb,eAEaA,UAFb;AAGR,UAAMC,kBAAkB,GAAGxB,cAAc,CAAEsB,WAAF,CAAzC;AAEA,aACC,cAAC,QAAD,QACC;AAAO,QAAA,OAAO,yBAAoBC,UAApB,CAAd;AAAkD,QAAA,SAAS,EAAC;AAA5D,SACGC,kBAAkB,IAAIzB,EAAE,CAAE,kBAAF,CAD3B,CADD,EAIC,cAAC,QAAD;AACC,QAAA,YAAY,EAAC,KADd;AAEC,QAAA,KAAK,EAAGgB,KAFT;AAGC,QAAA,QAAQ,EAAG,KAAKL,IAHjB;AAIC,QAAA,MAAM,EAAG,KAAKE,WAJf;AAKC,QAAA,SAAS,EAAC,yBALX;AAMC,QAAA,EAAE,yBAAoBW,UAApB,CANH;AAOC,QAAA,WAAW,EAAGC,kBAAkB,IAAIzB,EAAE,CAAE,kBAAF;AAPvC,QAJD,CADD;AAgBA;AAvEF;AAAA;AAAA,6CAUkCkB,KAVlC,EAUyCJ,KAVzC,EAUiD;AAC/C,UAAKA,KAAK,CAACO,OAAX,EAAqB;AACpB,eAAO,IAAP;AACA;;AAED,aAAO;AACNL,QAAAA,KAAK,EAAEE,KAAK,CAACF,KADP;AAENK,QAAAA,OAAO,EAAE;AAFH,OAAP;AAIA;AAnBF;;AAAA;AAAA,EAAoCnB,SAApC;AA0EA,eAAeM,OAAO,CAAE,CACvBH,UAAU,CAAE,UAAEqB,MAAF,EAAc;AAAA,gBAC2BA,MAAM,CAAE,aAAF,CADjC;AAAA,MACjBC,oBADiB,WACjBA,oBADiB;AAAA,MACKC,iBADL,WACKA,iBADL;;AAAA,2BAEGA,iBAAiB,EAFpB;AAAA,MAEjBC,eAFiB,sBAEjBA,eAFiB;;AAGzB,SAAO;AACNb,IAAAA,KAAK,EAAEW,oBAAoB,EADrB;AAENJ,IAAAA,WAAW,EAAEM;AAFP,GAAP;AAIA,CAPS,CADa,EASvBvB,YAAY,CAAE,UAAEwB,QAAF,EAAgB;AAAA,kBACKA,QAAQ,CAAE,aAAF,CADb;AAAA,MACrBC,QADqB,aACrBA,QADqB;AAAA,MACXC,WADW,aACXA,WADW;;AAE7B,SAAO;AACNb,IAAAA,QADM,oBACIc,OADJ,EACc;AACnBF,MAAAA,QAAQ,CAAE;AAAEE,QAAAA,OAAO,EAAPA;AAAF,OAAF,CAAR;AACA,KAHK;AAINX,IAAAA,SAJM,qBAIKW,OAJL,EAIe;AACpBD,MAAAA,WAAW,CAAE5B,KAAK,CAAE6B,OAAF,CAAP,CAAX;AACA;AANK,GAAP;AAQA,CAVW,CATW,EAoBvB1B,cApBuB,CAAF,CAAP,CAqBVE,cArBU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { Component, Fragment } from '@wordpress/element';\nimport { parse } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withInstanceId, compose } from '@wordpress/compose';\n\nexport class PostTextEditor extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.edit = this.edit.bind( this );\n\t\tthis.stopEditing = this.stopEditing.bind( this );\n\n\t\tthis.state = {};\n\t}\n\n\tstatic getDerivedStateFromProps( props, state ) {\n\t\tif ( state.isDirty ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: props.value,\n\t\t\tisDirty: false,\n\t\t};\n\t}\n\n\t/**\n\t * Handles a textarea change event to notify the onChange prop callback and\n\t * reflect the new value in the component's own state. This marks the start\n\t * of the user's edits, if not already changed, preventing future props\n\t * changes to value from replacing the rendered value. This is expected to\n\t * be followed by a reset to dirty state via `stopEditing`.\n\t *\n\t * @see stopEditing\n\t *\n\t * @param {Event} event Change event.\n\t */\n\tedit( event ) {\n\t\tconst value = event.target.value;\n\t\tthis.props.onChange( value );\n\t\tthis.setState( { value, isDirty: true } );\n\t}\n\n\t/**\n\t * Function called when the user has completed their edits, responsible for\n\t * ensuring that changes, if made, are surfaced to the onPersist prop\n\t * callback and resetting dirty state.\n\t */\n\tstopEditing() {\n\t\tif ( this.state.isDirty ) {\n\t\t\tthis.props.onPersist( this.state.value );\n\t\t\tthis.setState( { isDirty: false } );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\tconst { placeholder, instanceId } = this.props;\n\t\tconst decodedPlaceholder = decodeEntities( placeholder );\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<label htmlFor={ `post-content-${ instanceId }` } className=\"screen-reader-text\">\n\t\t\t\t\t{ decodedPlaceholder || __( 'Write your story' ) }\n\t\t\t\t</label>\n\t\t\t\t<Textarea\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ this.edit }\n\t\t\t\t\tonBlur={ this.stopEditing }\n\t\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\t\tplaceholder={ decodedPlaceholder || __( 'Write your story' ) }\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getEditedPostContent, getEditorSettings } = select( 'core/editor' );\n\t\tconst { bodyPlaceholder } = getEditorSettings();\n\t\treturn {\n\t\t\tvalue: getEditedPostContent(),\n\t\t\tplaceholder: bodyPlaceholder,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetBlocks } = dispatch( 'core/editor' );\n\t\treturn {\n\t\t\tonChange( content ) {\n\t\t\t\teditPost( { content } );\n\t\t\t},\n\t\t\tonPersist( content ) {\n\t\t\t\tresetBlocks( parse( content ) );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n] )( PostTextEditor );\n"]}