{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/blocks/src/api/raw-handling/phrasing-content-reducer.js"],"names":["isBlockContent","node","schema","hasOwnProperty","nodeName","toLowerCase","doc","style","fontWeight","fontStyle","target","rel","removeAttribute","hasChildNodes","Array","from","childNodes","some","child"],"mappings":";;;;;;;AAGA;;AAKA;;AARA;;;;AAKA;;;AAKA,SAASA,cAAT,CAAyBC,IAAzB,EAA6C;AAAA,MAAdC,MAAc,uEAAL,EAAK;AAC5C,SAAOA,MAAM,CAACC,cAAP,CAAuBF,IAAI,CAACG,QAAL,CAAcC,WAAd,EAAvB,CAAP;AACA;;AAEc,kBAAUJ,IAAV,EAAgBK,GAAhB,EAAqBJ,MAArB,EAA8B;AAC5C,MAAKD,IAAI,CAACG,QAAL,KAAkB,MAAvB,EAAgC;AAAA,sBACGH,IAAI,CAACM,KADR;AAAA,QACvBC,UADuB,eACvBA,UADuB;AAAA,QACXC,SADW,eACXA,SADW;;AAG/B,QAAKD,UAAU,KAAK,MAAf,IAAyBA,UAAU,KAAK,KAA7C,EAAqD;AACpDP,MAAAA,IAAI,GAAG,qBAAYA,IAAZ,EAAkB,QAAlB,EAA4BK,GAA5B,CAAP;AACA,KAFD,MAEO,IAAKG,SAAS,KAAK,QAAnB,EAA8B;AACpCR,MAAAA,IAAI,GAAG,qBAAYA,IAAZ,EAAkB,IAAlB,EAAwBK,GAAxB,CAAP;AACA;AACD,GARD,MAQO,IAAKL,IAAI,CAACG,QAAL,KAAkB,GAAvB,EAA6B;AACnCH,IAAAA,IAAI,GAAG,qBAAYA,IAAZ,EAAkB,QAAlB,EAA4BK,GAA5B,CAAP;AACA,GAFM,MAEA,IAAKL,IAAI,CAACG,QAAL,KAAkB,GAAvB,EAA6B;AACnCH,IAAAA,IAAI,GAAG,qBAAYA,IAAZ,EAAkB,IAAlB,EAAwBK,GAAxB,CAAP;AACA,GAFM,MAEA,IAAKL,IAAI,CAACG,QAAL,KAAkB,GAAvB,EAA6B;AACnC,QAAKH,IAAI,CAACS,MAAL,CAAYL,WAAZ,OAA8B,QAAnC,EAA8C;AAC7CJ,MAAAA,IAAI,CAACU,GAAL,GAAW,qBAAX;AACA,KAFD,MAEO;AACNV,MAAAA,IAAI,CAACW,eAAL,CAAsB,QAAtB;AACAX,MAAAA,IAAI,CAACW,eAAL,CAAsB,KAAtB;AACA;AACD;;AAED,MACC,wCAAmBX,IAAnB,KACAA,IAAI,CAACY,aAAL,EADA,IAEAC,KAAK,CAACC,IAAN,CAAYd,IAAI,CAACe,UAAjB,EAA8BC,IAA9B,CAAoC,UAAEC,KAAF;AAAA,WAAalB,cAAc,CAAEkB,KAAF,EAAShB,MAAT,CAA3B;AAAA,GAApC,CAHD,EAIE;AACD,qBAAQD,IAAR;AACA;AACD","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { unwrap, replaceTag } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { isPhrasingContent } from './phrasing-content';\n\nfunction isBlockContent( node, schema = {} ) {\n\treturn schema.hasOwnProperty( node.nodeName.toLowerCase() );\n}\n\nexport default function( node, doc, schema ) {\n\tif ( node.nodeName === 'SPAN' ) {\n\t\tconst { fontWeight, fontStyle } = node.style;\n\n\t\tif ( fontWeight === 'bold' || fontWeight === '700' ) {\n\t\t\tnode = replaceTag( node, 'strong', doc );\n\t\t} else if ( fontStyle === 'italic' ) {\n\t\t\tnode = replaceTag( node, 'em', doc );\n\t\t}\n\t} else if ( node.nodeName === 'B' ) {\n\t\tnode = replaceTag( node, 'strong', doc );\n\t} else if ( node.nodeName === 'I' ) {\n\t\tnode = replaceTag( node, 'em', doc );\n\t} else if ( node.nodeName === 'A' ) {\n\t\tif ( node.target.toLowerCase() === '_blank' ) {\n\t\t\tnode.rel = 'noreferrer noopener';\n\t\t} else {\n\t\t\tnode.removeAttribute( 'target' );\n\t\t\tnode.removeAttribute( 'rel' );\n\t\t}\n\t}\n\n\tif (\n\t\tisPhrasingContent( node ) &&\n\t\tnode.hasChildNodes() &&\n\t\tArray.from( node.childNodes ).some( ( child ) => isBlockContent( child, schema ) )\n\t) {\n\t\tunwrap( node );\n\t}\n}\n"]}