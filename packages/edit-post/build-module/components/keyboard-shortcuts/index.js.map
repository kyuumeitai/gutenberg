{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/edit-post/src/components/keyboard-shortcuts/index.js"],"names":["Component","KeyboardShortcuts","withSelect","withDispatch","compose","shortcuts","EditorModeKeyboardShortcuts","arguments","toggleMode","bind","toggleSidebar","props","mode","switchMode","event","preventDefault","isEditorSidebarOpen","closeSidebar","openSidebar","toggleEditorMode","raw","select","getEditorMode","isEditorSidebarOpened","hasBlockSelection","getBlockSelectionStart","dispatch","switchEditorMode","sidebarToOpen","openGeneralSidebar","closeGeneralSidebar"],"mappings":";;;;;;;;;AAAA;;;AAGA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;;;;AAGA,OAAOC,SAAP,MAAsB,0BAAtB;;IAEMC,2B;;;;;AACL,yCAAc;AAAA;;AAAA;;AACb,sGAAUC,SAAV;AAEA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AAJa;AAKb;;;;iCAEY;AAAA,wBACiB,KAAKE,KADtB;AAAA,UACJC,IADI,eACJA,IADI;AAAA,UACEC,UADF,eACEA,UADF;AAEZA,MAAAA,UAAU,CAAED,IAAI,KAAK,QAAT,GAAoB,MAApB,GAA6B,QAA/B,CAAV;AACA;;;kCAEcE,K,EAAQ;AACtB;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN;AAHsB,yBAIqC,KAAKJ,KAJ1C;AAAA,UAIdK,mBAJc,gBAIdA,mBAJc;AAAA,UAIOC,YAJP,gBAIOA,YAJP;AAAA,UAIqBC,WAJrB,gBAIqBA,WAJrB;;AAMtB,UAAKF,mBAAL,EAA2B;AAC1BC,QAAAA,YAAY;AACZ,OAFD,MAEO;AACNC,QAAAA,WAAW;AACX;AACD;;;6BAEQ;AAAA;;AACR,aACC,cAAC,iBAAD;AACC,QAAA,UAAU,MADX;AAEC,QAAA,SAAS,oCACNb,SAAS,CAACc,gBAAV,CAA2BC,GADrB,EAC4B,KAAKZ,UADjC,yBAENH,SAAS,CAACK,aAAV,CAAwBU,GAFlB,EAEyB,KAAKV,aAF9B;AAFV,QADD;AASA;;;;EApCwCV,S;;AAuC1C,eAAeI,OAAO,CAAE,CACvBF,UAAU,CAAE,UAAEmB,MAAF;AAAA,SAAgB;AAC3BT,IAAAA,IAAI,EAAES,MAAM,CAAE,gBAAF,CAAN,CAA2BC,aAA3B,EADqB;AAE3BN,IAAAA,mBAAmB,EAAEK,MAAM,CAAE,gBAAF,CAAN,CAA2BE,qBAA3B,EAFM;AAG3BC,IAAAA,iBAAiB,EAAE,CAAC,CAAEH,MAAM,CAAE,aAAF,CAAN,CAAwBI,sBAAxB;AAHK,GAAhB;AAAA,CAAF,CADa,EAMvBtB,YAAY,CAAE,UAAEuB,QAAF;AAAA,MAAcF,iBAAd,SAAcA,iBAAd;AAAA,SAAyC;AACtDX,IAAAA,UADsD,sBAC1CD,IAD0C,EACnC;AAClBc,MAAAA,QAAQ,CAAE,gBAAF,CAAR,CAA6BC,gBAA7B,CAA+Cf,IAA/C;AACA,KAHqD;AAItDM,IAAAA,WAJsD,yBAIxC;AACb,UAAMU,aAAa,GAAGJ,iBAAiB,GAAG,iBAAH,GAAuB,oBAA9D;AACAE,MAAAA,QAAQ,CAAE,gBAAF,CAAR,CAA6BG,kBAA7B,CAAiDD,aAAjD;AACA,KAPqD;AAQtDX,IAAAA,YAAY,EAAES,QAAQ,CAAE,gBAAF,CAAR,CAA6BI;AARW,GAAzC;AAAA,CAAF,CANW,CAAF,CAAP,CAgBVxB,2BAhBU,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { KeyboardShortcuts } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport shortcuts from '../../keyboard-shortcuts';\n\nclass EditorModeKeyboardShortcuts extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.toggleMode = this.toggleMode.bind( this );\n\t\tthis.toggleSidebar = this.toggleSidebar.bind( this );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode } = this.props;\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\ttoggleSidebar( event ) {\n\t\t// This shortcut has no known clashes, but use preventDefault to prevent any\n\t\t// obscure shortcuts from triggering.\n\t\tevent.preventDefault();\n\t\tconst { isEditorSidebarOpen, closeSidebar, openSidebar } = this.props;\n\n\t\tif ( isEditorSidebarOpen ) {\n\t\t\tcloseSidebar();\n\t\t} else {\n\t\t\topenSidebar();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<KeyboardShortcuts\n\t\t\t\tbindGlobal\n\t\t\t\tshortcuts={ {\n\t\t\t\t\t[ shortcuts.toggleEditorMode.raw ]: this.toggleMode,\n\t\t\t\t\t[ shortcuts.toggleSidebar.raw ]: this.toggleSidebar,\n\t\t\t\t} }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tmode: select( 'core/edit-post' ).getEditorMode(),\n\t\tisEditorSidebarOpen: select( 'core/edit-post' ).isEditorSidebarOpened(),\n\t\thasBlockSelection: !! select( 'core/editor' ).getBlockSelectionStart(),\n\t} ) ),\n\twithDispatch( ( dispatch, { hasBlockSelection } ) => ( {\n\t\tswitchMode( mode ) {\n\t\t\tdispatch( 'core/edit-post' ).switchEditorMode( mode );\n\t\t},\n\t\topenSidebar() {\n\t\t\tconst sidebarToOpen = hasBlockSelection ? 'edit-post/block' : 'edit-post/document';\n\t\t\tdispatch( 'core/edit-post' ).openGeneralSidebar( sidebarToOpen );\n\t\t},\n\t\tcloseSidebar: dispatch( 'core/edit-post' ).closeGeneralSidebar,\n\t} ) ),\n] )( EditorModeKeyboardShortcuts );\n"]}