{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/post-preview-button/index.js"],"names":["writeInterstitialMessage","targetDocument","markup","write","close","PostPreviewButton","arguments","openPreviewWindow","bind","prevProps","previewLink","props","setPreviewWindowLink","previewWindow","url","closed","location","postId","event","preventDefault","window","open","getWindowTarget","focus","isAutosaveable","target","href","autosave","document","currentPostLink","isSaveable","Component","select","getCurrentPostId","getCurrentPostAttribute","getAutosaveAttribute","getEditedPostAttribute","isEditedPostSaveable","isEditedPostAutosaveable","getPostType","postType","isViewable","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, renderToString } from '@wordpress/element';\nimport { Button, Path, SVG } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { DotTip } from '@wordpress/nux';\nimport { ifCondition, compose } from '@wordpress/compose';\n\nfunction writeInterstitialMessage( targetDocument ) {\n\tlet markup = renderToString(\n\t\t<div className=\"editor-post-preview-button__interstitial-message\">\n\t\t\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 96 96\">\n\t\t\t\t<Path className=\"outer\" d=\"M48 12c19.9 0 36 16.1 36 36S67.9 84 48 84 12 67.9 12 48s16.1-36 36-36\" fill=\"none\" />\n\t\t\t\t<Path className=\"inner\" d=\"M69.5 46.4c0-3.9-1.4-6.7-2.6-8.8-1.6-2.6-3.1-4.9-3.1-7.5 0-2.9 2.2-5.7 5.4-5.7h.4C63.9 19.2 56.4 16 48 16c-11.2 0-21 5.7-26.7 14.4h2.1c3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3L40 67.5l7-20.9L42 33c-1.7-.1-3.3-.3-3.3-.3-1.7-.1-1.5-2.7.2-2.6 0 0 5.3.4 8.4.4 3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3l11.5 34.3 3.3-10.4c1.6-4.5 2.4-7.8 2.4-10.5zM16.1 48c0 12.6 7.3 23.5 18 28.7L18.8 35c-1.7 4-2.7 8.4-2.7 13zm32.5 2.8L39 78.6c2.9.8 5.9 1.3 9 1.3 3.7 0 7.3-.6 10.6-1.8-.1-.1-.2-.3-.2-.4l-9.8-26.9zM76.2 36c0 3.2-.6 6.9-2.4 11.4L64 75.6c9.5-5.5 15.9-15.8 15.9-27.6 0-5.5-1.4-10.8-3.9-15.3.1 1 .2 2.1.2 3.3z\" fill=\"none\" />\n\t\t\t</SVG>\n\t\t\t<p>{ __( 'Generating preview…' ) }</p>\n\t\t</div>\n\t);\n\n\tmarkup += `\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 100vh;\n\t\t\t\twidth: 100vw;\n\t\t\t}\n\t\t\t@-webkit-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-moz-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-o-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg {\n\t\t\t\twidth: 192px;\n\t\t\t\theight: 192px;\n\t\t\t\tstroke: #555d66;\n\t\t\t\tstroke-width: 0.75;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg .outer,\n\t\t\t.editor-post-preview-button__interstitial-message svg .inner {\n\t\t\t\tstroke-dasharray: 280;\n\t\t\t\tstroke-dashoffset: 280;\n\t\t\t\t-webkit-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-moz-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-o-animation: paint 1.5s ease infinite alternate;\n\t\t\t\tanimation: paint 1.5s ease infinite alternate;\n\t\t\t}\n\t\t\tp {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t\t\t}\n\t\t</style>\n\t`;\n\n\ttargetDocument.write( markup );\n\ttargetDocument.close();\n}\n\nexport class PostPreviewButton extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.openPreviewWindow = this.openPreviewWindow.bind( this );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { previewLink } = this.props;\n\n\t\t// This relies on the window being responsible to unset itself when\n\t\t// navigation occurs or a new preview window is opened, to avoid\n\t\t// unintentional forceful redirects.\n\t\tif ( previewLink && ! prevProps.previewLink ) {\n\t\t\tthis.setPreviewWindowLink( previewLink );\n\n\t\t\t// Once popup redirect is evaluated, even if already closed, delete\n\t\t\t// reference to avoid later assignment of location in post update.\n\t\t\tdelete this.previewWindow;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the preview window's location to the given URL, if a preview window\n\t * exists and is not closed.\n\t *\n\t * @param {string} url URL to assign as preview window location.\n\t */\n\tsetPreviewWindowLink( url ) {\n\t\tconst { previewWindow } = this;\n\n\t\tif ( previewWindow && ! previewWindow.closed ) {\n\t\t\tpreviewWindow.location = url;\n\t\t}\n\t}\n\n\tgetWindowTarget() {\n\t\tconst { postId } = this.props;\n\t\treturn `wp-preview-${ postId }`;\n\t}\n\n\topenPreviewWindow( event ) {\n\t\t// Our Preview button has its 'href' and 'target' set correctly for a11y\n\t\t// purposes. Unfortunately, though, we can't rely on the default 'click'\n\t\t// handler since sometimes it incorrectly opens a new tab instead of reusing\n\t\t// the existing one.\n\t\t// https://github.com/WordPress/gutenberg/pull/8330\n\t\tevent.preventDefault();\n\n\t\t// Open up a Preview tab if needed. This is where we'll show the preview.\n\t\tif ( ! this.previewWindow || this.previewWindow.closed ) {\n\t\t\tthis.previewWindow = window.open( '', this.getWindowTarget() );\n\t\t}\n\n\t\t// Focus the Preview tab. This might not do anything, depending on the browser's\n\t\t// and user's preferences.\n\t\t// https://html.spec.whatwg.org/multipage/interaction.html#dom-window-focus\n\t\tthis.previewWindow.focus();\n\n\t\t// If we don't need to autosave the post before previewing, then we simply\n\t\t// load the Preview URL in the Preview tab.\n\t\tif ( ! this.props.isAutosaveable ) {\n\t\t\tthis.setPreviewWindowLink( event.target.href );\n\t\t\treturn;\n\t\t}\n\n\t\t// Request an autosave. This happens asynchronously and causes the component\n\t\t// to update when finished.\n\t\tthis.props.autosave();\n\n\t\t// Display a 'Generating preview' message in the Preview tab while we wait for the\n\t\t// autosave to finish.\n\t\twriteInterstitialMessage( this.previewWindow.document );\n\t}\n\n\trender() {\n\t\tconst { previewLink, currentPostLink, isSaveable } = this.props;\n\n\t\t// Link to the `?preview=true` URL if we have it, since this lets us see\n\t\t// changes that were autosaved since the post was last published. Otherwise,\n\t\t// just link to the post's URL.\n\t\tconst href = previewLink || currentPostLink;\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tisLarge\n\t\t\t\tclassName=\"editor-post-preview\"\n\t\t\t\thref={ href }\n\t\t\t\ttarget={ this.getWindowTarget() }\n\t\t\t\tdisabled={ ! isSaveable }\n\t\t\t\tonClick={ this.openPreviewWindow }\n\t\t\t>\n\t\t\t\t{ _x( 'Preview', 'imperative verb' ) }\n\t\t\t\t<span className=\"screen-reader-text\">\n\t\t\t\t\t{\n\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t\t<DotTip tipId=\"core/editor.preview\">\n\t\t\t\t\t{ __( 'Click “Preview” to load a preview of this page, so you can make sure you’re happy with your blocks.' ) }\n\t\t\t\t</DotTip>\n\t\t\t</Button>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetCurrentPostId,\n\t\t\tgetCurrentPostAttribute,\n\t\t\tgetAutosaveAttribute,\n\t\t\tgetEditedPostAttribute,\n\t\t\tisEditedPostSaveable,\n\t\t\tisEditedPostAutosaveable,\n\t\t} = select( 'core/editor' );\n\t\tconst {\n\t\t\tgetPostType,\n\t\t} = select( 'core' );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\t\treturn {\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tcurrentPostLink: getCurrentPostAttribute( 'link' ),\n\t\t\tpreviewLink: getAutosaveAttribute( 'preview_link' ),\n\t\t\tisSaveable: isEditedPostSaveable(),\n\t\t\tisAutosaveable: isEditedPostAutosaveable(),\n\t\t\tisViewable: get( postType, [ 'viewable' ], false ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tautosave: dispatch( 'core/editor' ).autosave,\n\t} ) ),\n\tifCondition( ( { isViewable } ) => isViewable ),\n] )( PostPreviewButton );\n"]}