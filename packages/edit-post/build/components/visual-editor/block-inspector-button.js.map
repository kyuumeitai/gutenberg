{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/edit-post/src/components/visual-editor/block-inspector-button.js"],"names":["BlockInspectorButton","areAdvancedSettingsOpened","closeSidebar","openEditorSidebar","onClick","noop","small","speak","speakMessage","label","undefined","shortcuts","toggleSidebar","select","getActiveGeneralSidebarName","dispatch","openGeneralSidebar","closeGeneralSidebar","withSpokenMessages"],"mappings":";;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AAKA;;AAhBA;;;;AAKA;;;;AAQA;;;AAKO,SAASA,oBAAT,OAOH;AAAA,MANHC,yBAMG,QANHA,yBAMG;AAAA,MALHC,YAKG,QALHA,YAKG;AAAA,MAJHC,iBAIG,QAJHA,iBAIG;AAAA,0BAHHC,OAGG;AAAA,MAHHA,OAGG,6BAHOC,YAGP;AAAA,wBAFHC,KAEG;AAAA,MAFHA,KAEG,2BAFK,KAEL;AAAA,MADHC,KACG,QADHA,KACG;;AACH,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1B,QAAKP,yBAAL,EAAiC;AAChCM,MAAAA,KAAK,CAAE,cAAI,uBAAJ,CAAF,CAAL;AACA,KAFD,MAEO;AACNA,MAAAA,KAAK,CAAE,cAAI,4EAAJ,CAAF,CAAL;AACA;AACD,GAND;;AAQA,MAAME,KAAK,GAAGR,yBAAyB,GAAG,cAAI,qBAAJ,CAAH,GAAiC,cAAI,qBAAJ,CAAxE;AAEA,SACC,4BAAC,oBAAD;AACC,IAAA,SAAS,EAAC,qCADX;AAEC,IAAA,OAAO,EAAG,kBAAMA,yBAAyB,GAAGC,YAAH,GAAkBC,iBAAjD,EAAoEK,YAApE,EAAkFJ,OAAlF,CAFX;AAGC,IAAA,IAAI,EAAC,eAHN;AAIC,IAAA,KAAK,EAAGE,KAAK,GAAGG,KAAH,GAAWC,SAJzB;AAKC,IAAA,QAAQ,EAAGC,2BAAUC;AALtB,KAOG,CAAEN,KAAF,IAAWG,KAPd,CADD;AAWA;;eAEc,sBACd,sBAAY,UAAEI,MAAF;AAAA,SAAgB;AAC3BZ,IAAAA,yBAAyB,EAAEY,MAAM,CAAE,gBAAF,CAAN,CAA2BC,2BAA3B,OAA6D;AAD7D,GAAhB;AAAA,CAAZ,CADc,EAId,wBAAc,UAAEC,QAAF;AAAA,SAAkB;AAC/BZ,IAAAA,iBAAiB,EAAE;AAAA,aAAMY,QAAQ,CAAE,gBAAF,CAAR,CAA6BC,kBAA7B,CAAiD,iBAAjD,CAAN;AAAA,KADY;AAE/Bd,IAAAA,YAAY,EAAEa,QAAQ,CAAE,gBAAF,CAAR,CAA6BE;AAFZ,GAAlB;AAAA,CAAd,CAJc,EAQdC,8BARc,EASZlB,oBATY,C","sourcesContent":["/**\n * External dependencies\n */\nimport { flow, noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem, withSpokenMessages } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport shortcuts from '../../keyboard-shortcuts';\n\nexport function BlockInspectorButton( {\n\tareAdvancedSettingsOpened,\n\tcloseSidebar,\n\topenEditorSidebar,\n\tonClick = noop,\n\tsmall = false,\n\tspeak,\n} ) {\n\tconst speakMessage = () => {\n\t\tif ( areAdvancedSettingsOpened ) {\n\t\t\tspeak( __( 'Block settings closed' ) );\n\t\t} else {\n\t\t\tspeak( __( 'Additional settings are now available in the Editor block settings sidebar' ) );\n\t\t}\n\t};\n\n\tconst label = areAdvancedSettingsOpened ? __( 'Hide Block Settings' ) : __( 'Show Block Settings' );\n\n\treturn (\n\t\t<MenuItem\n\t\t\tclassName=\"editor-block-settings-menu__control\"\n\t\t\tonClick={ flow( areAdvancedSettingsOpened ? closeSidebar : openEditorSidebar, speakMessage, onClick ) }\n\t\t\ticon=\"admin-generic\"\n\t\t\tlabel={ small ? label : undefined }\n\t\t\tshortcut={ shortcuts.toggleSidebar }\n\t\t>\n\t\t\t{ ! small && label }\n\t\t</MenuItem>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\tareAdvancedSettingsOpened: select( 'core/edit-post' ).getActiveGeneralSidebarName() === 'edit-post/block',\n\t} ) ),\n\twithDispatch( ( dispatch ) => ( {\n\t\topenEditorSidebar: () => dispatch( 'core/edit-post' ).openGeneralSidebar( 'edit-post/block' ),\n\t\tcloseSidebar: dispatch( 'core/edit-post' ).closeGeneralSidebar,\n\t} ) ),\n\twithSpokenMessages,\n)( BlockInspectorButton );\n"]}