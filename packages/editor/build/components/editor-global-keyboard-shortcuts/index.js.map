{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/editor-global-keyboard-shortcuts/index.js"],"names":["preventDefault","event","shortcuts","duplicate","raw","rawShortcut","primaryShift","display","displayShortcut","removeBlock","access","insertBefore","primaryAlt","insertAfter","EditorGlobalKeyboardShortcuts","arguments","selectAll","bind","undoOrRedo","save","deleteSelectedBlocks","clearMultiSelection","props","rootBlocksClientIds","onMultiSelect","onRedo","onUndo","shiftKey","onSave","selectedBlockClientIds","hasMultiSelection","onRemove","isLocked","clearSelectedBlock","window","getSelection","removeAllRanges","primary","length","onDuplicate","onInsertAfter","onInsertBefore","Component","select","getBlockOrder","getMultiSelectedBlockClientIds","isEditedPostDirty","getBlockRootClientId","getTemplateLock","getSelectedBlock","block","clientId","isDirty","dispatch","ownProps","multiSelect","redo","undo","removeBlocks","savePost"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { first, last, some, flow } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, Fragment } from '@wordpress/element';\nimport { KeyboardShortcuts } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { rawShortcut, displayShortcut } from '@wordpress/keycodes';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockActions from '../block-actions';\n\nconst preventDefault = ( event ) => {\n\tevent.preventDefault();\n\treturn event;\n};\n\nexport const shortcuts = {\n\tduplicate: {\n\t\traw: rawShortcut.primaryShift( 'd' ),\n\t\tdisplay: displayShortcut.primaryShift( 'd' ),\n\t},\n\tremoveBlock: {\n\t\traw: rawShortcut.access( 'z' ),\n\t\tdisplay: displayShortcut.access( 'z' ),\n\t},\n\tinsertBefore: {\n\t\traw: rawShortcut.primaryAlt( 't' ),\n\t\tdisplay: displayShortcut.primaryAlt( 't' ),\n\t},\n\tinsertAfter: {\n\t\traw: rawShortcut.primaryAlt( 'y' ),\n\t\tdisplay: displayShortcut.primaryAlt( 'y' ),\n\t},\n};\n\nclass EditorGlobalKeyboardShortcuts extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.selectAll = this.selectAll.bind( this );\n\t\tthis.undoOrRedo = this.undoOrRedo.bind( this );\n\t\tthis.save = this.save.bind( this );\n\t\tthis.deleteSelectedBlocks = this.deleteSelectedBlocks.bind( this );\n\t\tthis.clearMultiSelection = this.clearMultiSelection.bind( this );\n\t}\n\n\tselectAll( event ) {\n\t\tconst { rootBlocksClientIds, onMultiSelect } = this.props;\n\t\tevent.preventDefault();\n\t\tonMultiSelect( first( rootBlocksClientIds ), last( rootBlocksClientIds ) );\n\t}\n\n\tundoOrRedo( event ) {\n\t\tconst { onRedo, onUndo } = this.props;\n\n\t\tif ( event.shiftKey ) {\n\t\t\tonRedo();\n\t\t} else {\n\t\t\tonUndo();\n\t\t}\n\n\t\tevent.preventDefault();\n\t}\n\n\tsave( event ) {\n\t\tevent.preventDefault();\n\t\tthis.props.onSave();\n\t}\n\n\tdeleteSelectedBlocks( event ) {\n\t\tconst { selectedBlockClientIds, hasMultiSelection, onRemove, isLocked } = this.props;\n\t\tif ( hasMultiSelection ) {\n\t\t\tevent.preventDefault();\n\t\t\tif ( ! isLocked ) {\n\t\t\t\tonRemove( selectedBlockClientIds );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clears current multi-selection, if one exists.\n\t */\n\tclearMultiSelection() {\n\t\tconst { hasMultiSelection, clearSelectedBlock } = this.props;\n\t\tif ( hasMultiSelection ) {\n\t\t\tclearSelectedBlock();\n\t\t\twindow.getSelection().removeAllRanges();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { selectedBlockClientIds } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t[ rawShortcut.primary( 'a' ) ]: this.selectAll,\n\t\t\t\t\t\t[ rawShortcut.primary( 'z' ) ]: this.undoOrRedo,\n\t\t\t\t\t\t[ rawShortcut.primaryShift( 'z' ) ]: this.undoOrRedo,\n\t\t\t\t\t\tbackspace: this.deleteSelectedBlocks,\n\t\t\t\t\t\tdel: this.deleteSelectedBlocks,\n\t\t\t\t\t\tescape: this.clearMultiSelection,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\tbindGlobal\n\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t[ rawShortcut.primary( 's' ) ]: this.save,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t{ selectedBlockClientIds.length > 0 && (\n\t\t\t\t\t<BlockActions clientIds={ selectedBlockClientIds }>\n\t\t\t\t\t\t{ ( { onDuplicate, onRemove, onInsertAfter, onInsertBefore } ) => (\n\t\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\t\tbindGlobal\n\t\t\t\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t\t\t\t// Prevents bookmark all Tabs shortcut in Chrome when devtools are closed.\n\t\t\t\t\t\t\t\t\t// Prevents reposition Chrome devtools pane shortcut when devtools are open.\n\t\t\t\t\t\t\t\t\t[ shortcuts.duplicate.raw ]: flow( preventDefault, onDuplicate ),\n\n\t\t\t\t\t\t\t\t\t// Does not clash with any known browser/native shortcuts, but preventDefault\n\t\t\t\t\t\t\t\t\t// is used to prevent any obscure unknown shortcuts from triggering.\n\t\t\t\t\t\t\t\t\t[ shortcuts.removeBlock.raw ]: flow( preventDefault, onRemove ),\n\n\t\t\t\t\t\t\t\t\t// Prevent 'view recently closed tabs' in Opera using preventDefault.\n\t\t\t\t\t\t\t\t\t[ shortcuts.insertBefore.raw ]: flow( preventDefault, onInsertBefore ),\n\n\t\t\t\t\t\t\t\t\t// Does not clash with any known browser/native shortcuts, but preventDefault\n\t\t\t\t\t\t\t\t\t// is used to prevent any obscure unknown shortcuts from triggering.\n\t\t\t\t\t\t\t\t\t[ shortcuts.insertAfter.raw ]: flow( preventDefault, onInsertAfter ),\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</BlockActions>\n\t\t\t\t) }\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockOrder,\n\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\thasMultiSelection,\n\t\t\tisEditedPostDirty,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetTemplateLock,\n\t\t\tgetSelectedBlock,\n\t\t} = select( 'core/editor' );\n\t\tconst block = getSelectedBlock();\n\t\tconst selectedBlockClientIds = block ? [ block.clientId ] : getMultiSelectedBlockClientIds();\n\n\t\treturn {\n\t\t\trootBlocksClientIds: getBlockOrder(),\n\t\t\thasMultiSelection: hasMultiSelection(),\n\t\t\tisLocked: some(\n\t\t\t\tselectedBlockClientIds,\n\t\t\t\t( clientId ) => !! getTemplateLock( getBlockRootClientId( clientId ) )\n\t\t\t),\n\t\t\tisDirty: isEditedPostDirty(),\n\t\t\tselectedBlockClientIds,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst {\n\t\t\tclearSelectedBlock,\n\t\t\tmultiSelect,\n\t\t\tredo,\n\t\t\tundo,\n\t\t\tremoveBlocks,\n\t\t\tsavePost,\n\t\t} = dispatch( 'core/editor' );\n\n\t\treturn {\n\t\t\tonSave() {\n\t\t\t\t// TODO: This should be handled in the `savePost` effect in\n\t\t\t\t// considering `isSaveable`. See note on `isEditedPostSaveable`\n\t\t\t\t// selector about dirtiness and meta-boxes. When removing, also\n\t\t\t\t// remember to remove `isDirty` prop passing from `withSelect`.\n\t\t\t\t//\n\t\t\t\t// See: `isEditedPostSaveable`\n\t\t\t\tif ( ! ownProps.isDirty ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsavePost();\n\t\t\t},\n\t\t\tclearSelectedBlock,\n\t\t\tonMultiSelect: multiSelect,\n\t\t\tonRedo: redo,\n\t\t\tonUndo: undo,\n\t\t\tonRemove: removeBlocks,\n\t\t};\n\t} ),\n] )( EditorGlobalKeyboardShortcuts );\n"]}