{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/post-taxonomies/flat-term-selector.js"],"names":["DEFAULT_QUERY","per_page","orderby","order","_fields","MAX_TERMS_SUGGESTIONS","isSameTermName","termA","termB","toLowerCase","FlatTermSelector","arguments","onChange","bind","searchTerms","findOrCreateTerm","state","loading","availableTerms","selectedTerms","props","terms","setState","initRequest","fetchTerms","include","join","then","xhr","statusText","searchRequest","prevProps","updateSelectedTerms","params","taxonomy","query","request","path","rest_base","concat","filter","term","availableTerm","id","reduce","result","termId","termObject","push","name","termName","method","data","catch","error","errorCode","code","addRequest","search","searchResult","Promise","reject","termNames","uniqueTerms","newTermNames","termNamesToIds","names","map","length","onUpdateTerms","all","newTerms","newAvailableTerms","slug","hasAssignAction","newTermLabel","singularName","termAddedLabel","termRemovedLabel","removeTermLabel","unescapeString","added","removed","remove","Component","select","getCurrentPost","getTaxonomy","hasCreateAction","getEditedPostAttribute","dispatch","restBase","editPost"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isEmpty, get, unescape as unescapeString, find, throttle, uniqBy, invoke } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { FormTokenField, withFilters } from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Module constants\n */\nconst DEFAULT_QUERY = {\n\tper_page: -1,\n\torderby: 'count',\n\torder: 'desc',\n\t_fields: 'id,name',\n};\nconst MAX_TERMS_SUGGESTIONS = 20;\nconst isSameTermName = ( termA, termB ) => termA.toLowerCase() === termB.toLowerCase();\n\nclass FlatTermSelector extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.searchTerms = throttle( this.searchTerms.bind( this ), 500 );\n\t\tthis.findOrCreateTerm = this.findOrCreateTerm.bind( this );\n\t\tthis.state = {\n\t\t\tloading: false,\n\t\t\tavailableTerms: [],\n\t\t\tselectedTerms: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( ! isEmpty( this.props.terms ) ) {\n\t\t\tthis.setState( { loading: false } );\n\t\t\tthis.initRequest = this.fetchTerms( {\n\t\t\t\tinclude: this.props.terms.join( ',' ),\n\t\t\t\tper_page: 100,\n\t\t\t} );\n\t\t\tthis.initRequest.then(\n\t\t\t\t() => {\n\t\t\t\t\tthis.setState( { loading: false } );\n\t\t\t\t},\n\t\t\t\t( xhr ) => {\n\t\t\t\t\tif ( xhr.statusText === 'abort' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tinvoke( this.initRequest, [ 'abort' ] );\n\t\tinvoke( this.searchRequest, [ 'abort' ] );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( prevProps.terms !== this.props.terms ) {\n\t\t\tthis.updateSelectedTerms( this.props.terms );\n\t\t}\n\t}\n\n\tfetchTerms( params = {} ) {\n\t\tconst { taxonomy } = this.props;\n\t\tconst query = { ...DEFAULT_QUERY, ...params };\n\t\tconst request = apiFetch( {\n\t\t\tpath: addQueryArgs( `/wp/v2/${ taxonomy.rest_base }`, query ),\n\t\t} );\n\t\trequest.then( ( terms ) => {\n\t\t\tthis.setState( ( state ) => ( {\n\t\t\t\tavailableTerms: state.availableTerms.concat(\n\t\t\t\t\tterms.filter( ( term ) => ! find( state.availableTerms, ( availableTerm ) => availableTerm.id === term.id ) )\n\t\t\t\t),\n\t\t\t} ) );\n\t\t\tthis.updateSelectedTerms( this.props.terms );\n\t\t} );\n\n\t\treturn request;\n\t}\n\n\tupdateSelectedTerms( terms = [] ) {\n\t\tconst selectedTerms = terms.reduce( ( result, termId ) => {\n\t\t\tconst termObject = find( this.state.availableTerms, ( term ) => term.id === termId );\n\t\t\tif ( termObject ) {\n\t\t\t\tresult.push( termObject.name );\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, [] );\n\t\tthis.setState( {\n\t\t\tselectedTerms,\n\t\t} );\n\t}\n\n\tfindOrCreateTerm( termName ) {\n\t\tconst { taxonomy } = this.props;\n\t\t// Tries to create a term or fetch it if it already exists.\n\t\treturn apiFetch( {\n\t\t\tpath: `/wp/v2/${ taxonomy.rest_base }`,\n\t\t\tmethod: 'POST',\n\t\t\tdata: { name: termName },\n\t\t} ).catch( ( error ) => {\n\t\t\tconst errorCode = error.code;\n\t\t\tif ( errorCode === 'term_exists' ) {\n\t\t\t\t// If the terms exist, fetch it instead of creating a new one.\n\t\t\t\tthis.addRequest = apiFetch( {\n\t\t\t\t\tpath: addQueryArgs( `/wp/v2/${ taxonomy.rest_base }`, { ...DEFAULT_QUERY, search: termName } ),\n\t\t\t\t} );\n\t\t\t\treturn this.addRequest.then( ( searchResult ) => {\n\t\t\t\t\treturn find( searchResult, ( result ) => isSameTermName( result.name, termName ) );\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn Promise.reject( error );\n\t\t} );\n\t}\n\n\tonChange( termNames ) {\n\t\tconst uniqueTerms = uniqBy( termNames, ( term ) => term.toLowerCase() );\n\t\tthis.setState( { selectedTerms: uniqueTerms } );\n\t\tconst newTermNames = uniqueTerms.filter( ( termName ) =>\n\t\t\t! find( this.state.availableTerms, ( term ) => isSameTermName( term.name, termName ) )\n\t\t);\n\t\tconst termNamesToIds = ( names, availableTerms ) => {\n\t\t\treturn names\n\t\t\t\t.map( ( termName ) =>\n\t\t\t\t\tfind( availableTerms, ( term ) => isSameTermName( term.name, termName ) ).id\n\t\t\t\t);\n\t\t};\n\n\t\tif ( newTermNames.length === 0 ) {\n\t\t\treturn this.props.onUpdateTerms(\n\t\t\t\ttermNamesToIds( uniqueTerms, this.state.availableTerms ),\n\t\t\t\tthis.props.taxonomy.rest_base\n\t\t\t);\n\t\t}\n\t\tPromise\n\t\t\t.all( newTermNames.map( this.findOrCreateTerm ) )\n\t\t\t.then( ( newTerms ) => {\n\t\t\t\tconst newAvailableTerms = this.state.availableTerms.concat( newTerms );\n\t\t\t\tthis.setState( { availableTerms: newAvailableTerms } );\n\t\t\t\treturn this.props.onUpdateTerms(\n\t\t\t\t\ttermNamesToIds( uniqueTerms, newAvailableTerms ),\n\t\t\t\t\tthis.props.taxonomy.rest_base\n\t\t\t\t);\n\t\t\t} );\n\t}\n\n\tsearchTerms( search = '' ) {\n\t\tinvoke( this.searchRequest, [ 'abort' ] );\n\t\tthis.searchRequest = this.fetchTerms( { search } );\n\t}\n\n\trender() {\n\t\tconst { slug, taxonomy, hasAssignAction } = this.props;\n\n\t\tif ( ! hasAssignAction ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { loading, availableTerms, selectedTerms } = this.state;\n\t\tconst termNames = availableTerms.map( ( term ) => term.name );\n\t\tconst newTermLabel = get(\n\t\t\ttaxonomy,\n\t\t\t[ 'labels', 'add_new_item' ],\n\t\t\tslug === 'post_tag' ? __( 'Add New Tag' ) : __( 'Add New Term' )\n\t\t);\n\t\tconst singularName = get(\n\t\t\ttaxonomy,\n\t\t\t[ 'labels', 'singular_name' ],\n\t\t\tslug === 'post_tag' ? __( 'Tag' ) : __( 'Term' )\n\t\t);\n\t\tconst termAddedLabel = sprintf( _x( '%s added', 'term' ), singularName );\n\t\tconst termRemovedLabel = sprintf( _x( '%s removed', 'term' ), singularName );\n\t\tconst removeTermLabel = sprintf( _x( 'Remove %s', 'term' ), singularName );\n\n\t\treturn (\n\t\t\t<FormTokenField\n\t\t\t\tvalue={ selectedTerms }\n\t\t\t\tdisplayTransform={ unescapeString }\n\t\t\t\tsuggestions={ termNames }\n\t\t\t\tonChange={ this.onChange }\n\t\t\t\tonInputChange={ this.searchTerms }\n\t\t\t\tmaxSuggestions={ MAX_TERMS_SUGGESTIONS }\n\t\t\t\tdisabled={ loading }\n\t\t\t\tlabel={ newTermLabel }\n\t\t\t\tmessages={ {\n\t\t\t\t\tadded: termAddedLabel,\n\t\t\t\t\tremoved: termRemovedLabel,\n\t\t\t\t\tremove: removeTermLabel,\n\t\t\t\t} }\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select, { slug } ) => {\n\t\tconst { getCurrentPost } = select( 'core/editor' );\n\t\tconst { getTaxonomy } = select( 'core' );\n\t\tconst taxonomy = getTaxonomy( slug );\n\t\treturn {\n\t\t\thasCreateAction: taxonomy ? get( getCurrentPost(), [ '_links', 'wp:action-create-' + taxonomy.rest_base ], false ) : false,\n\t\t\thasAssignAction: taxonomy ? get( getCurrentPost(), [ '_links', 'wp:action-assign-' + taxonomy.rest_base ], false ) : false,\n\t\t\tterms: taxonomy ? select( 'core/editor' ).getEditedPostAttribute( taxonomy.rest_base ) : [],\n\t\t\ttaxonomy,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tonUpdateTerms( terms, restBase ) {\n\t\t\t\tdispatch( 'core/editor' ).editPost( { [ restBase ]: terms } );\n\t\t\t},\n\t\t};\n\t} ),\n\twithFilters( 'editor.PostTaxonomyType' ),\n)( FlatTermSelector );\n"]}