{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/rich-text/index.js"],"names":["classnames","defer","find","isNil","isEqual","omit","memize","Component","Fragment","RawHTML","isHorizontalEdge","getRectangleFromRange","getScrollContainer","createBlobURL","BACKSPACE","DELETE","ENTER","rawShortcut","withDispatch","withSelect","rawHandler","children","getBlockTransforms","findTransform","withInstanceId","withSafeTimeout","compose","isURL","isEmpty","create","apply","applyFormat","split","toHTMLString","getTextContent","insert","insertLineSeparator","isEmptyLine","unstableToDom","getSelectionStart","getSelectionEnd","remove","isCollapsed","decodeEntities","Autocomplete","BlockFormatControls","FormatEdit","FormatToolbar","TinyMCE","TINYMCE_ZWSP","pickAriaProps","getPatterns","withBlockEditContext","window","getSelection","RichText","value","onReplace","multiline","arguments","multilineTag","multilineWrapperTags","onInit","bind","getSettings","onSetup","onFocus","onChange","onNodeChange","onDeleteKeyDown","onKeyDown","onKeyUp","onPropagateUndo","onPaste","onCreateUndoLevel","setFocusedElement","onInput","onSelectionChange","getRecord","createRecord","applyRecord","valueToFormat","setRef","isActive","formatToValue","size","savedContent","patterns","enterPatterns","filter","type","trigger","state","usedDeprecatedChildrenSource","Array","isArray","document","addEventListener","removeEventListener","node","editableRef","activeElement","settings","forced_root_block","custom_undo_redo_levels","unstableGetSettings","props","editor","on","unstableOnSetup","instanceId","shortcuts","add","primary","primaryShift","event","onUndo","onRedo","command","preventDefault","formats","text","start","end","range","getRangeAt","element","removeNode","getAttribute","unwrapNode","removeAttribute","attribute","indexOf","filterString","string","replace","record","current","createLinePadding","doc","createElement","setAttribute","clipboardData","items","files","item","test","plainText","html","getData","error1","error2","console","log","file","getAsFile","content","HTML","mode","tagName","shouldReplace","setTimeout","onSplit","splitContent","selection","pastedText","trim","attributes","href","canUserUseUnfilteredHTML","recordToInsert","length","paste","unstableOnFocus","transformed","reduce","accumlator","transform","isCaretWithinFormattedText","onEnterFormattedText","onExitFormattedText","setState","_withoutApply","lastLevel","originalEvent","onMerge","onRemove","keyCode","isReverse","empty","isEdge","transformation","regExp","map","shiftKey","toInsert","charAt","isViewportSmall","scrollToRect","getRng","rect","caretTop","top","container","graceOffset","epsilon","delta","Math","abs","scrollTo","scrollLeft","scrollTop","blocks","context","before","after","parents","selectedAnchor","getBoundingClientRect","prevProps","isSelected","prevRecord","toHTML","format","fromDOM","body","childNodes","Tagname","style","wrapperClassName","className","inlineToolbar","formattingControls","placeholder","keepPlaceholderOnFocus","autocompleters","MultilineTag","ariaProps","key","join","isPlaceholderVisible","classes","isExpanded","listBoxId","activeId","defaultProps","RichTextContainer","ownProps","focusedElement","select","isViewportMatch","dispatch","createUndoLevel","redo","undo","enterFormattedText","exitFormattedText","Content","Tag"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport {\n\tdefer,\n\tfind,\n\tisNil,\n\tisEqual,\n\tomit,\n} from 'lodash';\nimport memize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { Component, Fragment, RawHTML } from '@wordpress/element';\nimport {\n\tisHorizontalEdge,\n\tgetRectangleFromRange,\n\tgetScrollContainer,\n} from '@wordpress/dom';\nimport { createBlobURL } from '@wordpress/blob';\nimport { BACKSPACE, DELETE, ENTER, rawShortcut } from '@wordpress/keycodes';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { rawHandler, children, getBlockTransforms, findTransform } from '@wordpress/blocks';\nimport { withInstanceId, withSafeTimeout, compose } from '@wordpress/compose';\nimport { isURL } from '@wordpress/url';\nimport {\n\tisEmpty,\n\tcreate,\n\tapply,\n\tapplyFormat,\n\tsplit,\n\ttoHTMLString,\n\tgetTextContent,\n\tinsert,\n\tinsertLineSeparator,\n\tisEmptyLine,\n\tunstableToDom,\n\tgetSelectionStart,\n\tgetSelectionEnd,\n\tremove,\n\tisCollapsed,\n} from '@wordpress/rich-text';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport Autocomplete from '../autocomplete';\nimport BlockFormatControls from '../block-format-controls';\nimport FormatEdit from './format-edit';\nimport FormatToolbar from './format-toolbar';\nimport TinyMCE, { TINYMCE_ZWSP } from './tinymce';\nimport { pickAriaProps } from './aria';\nimport { getPatterns } from './patterns';\nimport { withBlockEditContext } from '../block-edit/context';\n\n/**\n * Browser dependencies\n */\n\nconst { getSelection } = window;\n\nexport class RichText extends Component {\n\tconstructor( { value, onReplace, multiline } ) {\n\t\tsuper( ...arguments );\n\n\t\tif ( multiline === true || multiline === 'p' || multiline === 'li' ) {\n\t\t\tthis.multilineTag = multiline === true ? 'p' : multiline;\n\t\t}\n\n\t\tif ( this.multilineTag === 'li' ) {\n\t\t\tthis.multilineWrapperTags = [ 'ul', 'ol' ];\n\t\t}\n\n\t\tthis.onInit = this.onInit.bind( this );\n\t\tthis.getSettings = this.getSettings.bind( this );\n\t\tthis.onSetup = this.onSetup.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.onNodeChange = this.onNodeChange.bind( this );\n\t\tthis.onDeleteKeyDown = this.onDeleteKeyDown.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\t\tthis.onKeyUp = this.onKeyUp.bind( this );\n\t\tthis.onPropagateUndo = this.onPropagateUndo.bind( this );\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onCreateUndoLevel = this.onCreateUndoLevel.bind( this );\n\t\tthis.setFocusedElement = this.setFocusedElement.bind( this );\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.getRecord = this.getRecord.bind( this );\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.applyRecord = this.applyRecord.bind( this );\n\t\tthis.isEmpty = this.isEmpty.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.setRef = this.setRef.bind( this );\n\t\tthis.isActive = this.isActive.bind( this );\n\n\t\tthis.formatToValue = memize( this.formatToValue.bind( this ), { size: 1 } );\n\n\t\tthis.savedContent = value;\n\t\tthis.patterns = getPatterns( {\n\t\t\tonReplace,\n\t\t\tmultilineTag: this.multilineTag,\n\t\t\tvalueToFormat: this.valueToFormat,\n\t\t} );\n\t\tthis.enterPatterns = getBlockTransforms( 'from' ).filter( ( { type, trigger } ) =>\n\t\t\ttype === 'pattern' && trigger === 'enter'\n\t\t);\n\n\t\tthis.state = {};\n\n\t\tthis.usedDeprecatedChildrenSource = Array.isArray( value );\n\t}\n\n\tcomponentDidMount() {\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\tsetRef( node ) {\n\t\tthis.editableRef = node;\n\t}\n\n\tisActive() {\n\t\treturn this.editableRef === document.activeElement;\n\t}\n\n\t/**\n\t * Retrieves the settings for this block.\n\t *\n\t * Allows passing in settings which will be overwritten.\n\t *\n\t * @param {Object} settings The settings to overwrite.\n\t * @return {Object} The settings for this block.\n\t */\n\tgetSettings( settings ) {\n\t\tsettings = {\n\t\t\t...settings,\n\t\t\tforced_root_block: this.multilineTag || false,\n\t\t\t// Allow TinyMCE to keep one undo level for comparing changes.\n\t\t\t// Prevent it otherwise from accumulating any history.\n\t\t\tcustom_undo_redo_levels: 1,\n\t\t};\n\n\t\tconst { unstableGetSettings } = this.props;\n\t\tif ( unstableGetSettings ) {\n\t\t\tsettings = unstableGetSettings( settings );\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Handles the onSetup event for the TinyMCE component.\n\t *\n\t * Will setup event handlers for the TinyMCE instance.\n\t * An `onSetup` function in the props will be called if it is present.\n\t *\n\t * @param {tinymce} editor The editor instance as passed by TinyMCE.\n\t */\n\tonSetup( editor ) {\n\t\tthis.editor = editor;\n\n\t\teditor.on( 'init', this.onInit );\n\t\teditor.on( 'nodechange', this.onNodeChange );\n\t\teditor.on( 'BeforeExecCommand', this.onPropagateUndo );\n\t\t// The change event in TinyMCE fires every time an undo level is added.\n\t\teditor.on( 'change', this.onCreateUndoLevel );\n\n\t\tconst { unstableOnSetup } = this.props;\n\t\tif ( unstableOnSetup ) {\n\t\t\tunstableOnSetup( editor );\n\t\t}\n\t}\n\n\tsetFocusedElement() {\n\t\tif ( this.props.setFocusedElement ) {\n\t\t\tthis.props.setFocusedElement( this.props.instanceId );\n\t\t}\n\t}\n\n\tonInit() {\n\t\tthis.editor.shortcuts.add( rawShortcut.primary( 'z' ), '', 'Undo' );\n\t\tthis.editor.shortcuts.add( rawShortcut.primaryShift( 'z' ), '', 'Redo' );\n\n\t\t// Remove TinyMCE Core shortcut for consistency with global editor\n\t\t// shortcuts. Also clashes with Mac browsers.\n\t\tthis.editor.shortcuts.remove( 'meta+y', '', 'Redo' );\n\t}\n\n\t/**\n\t * Handles an undo event from TinyMCE.\n\t *\n\t * @param {UndoEvent} event The undo event as triggered by TinyMCE.\n\t */\n\tonPropagateUndo( event ) {\n\t\tconst { onUndo, onRedo } = this.props;\n\t\tconst { command } = event;\n\n\t\tif ( command === 'Undo' && onUndo ) {\n\t\t\tdefer( onUndo );\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif ( command === 'Redo' && onRedo ) {\n\t\t\tdefer( onRedo );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t/**\n\t * Get the current record (value and selection) from props and state.\n\t *\n\t * @return {Object} The current record (value and selection).\n\t */\n\tgetRecord() {\n\t\tconst { formats, text } = this.formatToValue( this.props.value );\n\t\tconst { start, end } = this.state;\n\n\t\treturn { formats, text, start, end };\n\t}\n\n\tcreateRecord() {\n\t\tconst range = getSelection().getRangeAt( 0 );\n\n\t\treturn create( {\n\t\t\telement: this.editableRef,\n\t\t\trange,\n\t\t\tmultilineTag: this.multilineTag,\n\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\tremoveNode: ( node ) => node.getAttribute( 'data-mce-bogus' ) === 'all',\n\t\t\tunwrapNode: ( node ) => !! node.getAttribute( 'data-mce-bogus' ),\n\t\t\tremoveAttribute: ( attribute ) => attribute.indexOf( 'data-mce-' ) === 0,\n\t\t\tfilterString: ( string ) => string.replace( TINYMCE_ZWSP, '' ),\n\t\t} );\n\t}\n\n\tapplyRecord( record ) {\n\t\tapply( {\n\t\t\tvalue: record,\n\t\t\tcurrent: this.editableRef,\n\t\t\tmultilineTag: this.multilineTag,\n\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\tcreateLinePadding( doc ) {\n\t\t\t\tconst element = doc.createElement( 'br' );\n\t\t\t\telement.setAttribute( 'data-mce-bogus', '1' );\n\t\t\t\treturn element;\n\t\t\t},\n\t\t} );\n\t}\n\n\tisEmpty() {\n\t\treturn isEmpty( this.formatToValue( this.props.value ) );\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {PasteEvent} event The paste event.\n\t */\n\tonPaste( event ) {\n\t\tconst clipboardData = event.clipboardData;\n\t\tlet { items, files } = clipboardData;\n\n\t\t// In Edge these properties can be null instead of undefined, so a more\n\t\t// rigorous test is required over using default values.\n\t\titems = isNil( items ) ? [] : items;\n\t\tfiles = isNil( files ) ? [] : files;\n\n\t\tconst item = find( [ ...items, ...files ], ( { type } ) => /^image\\/(?:jpe?g|png|gif)$/.test( type ) );\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\t// Only process file if no HTML is present.\n\t\t// Note: a pasted file may have the URL as plain text.\n\t\tif ( item && ! html ) {\n\t\t\tconst file = item.getAsFile ? item.getAsFile() : item;\n\t\t\tconst content = rawHandler( {\n\t\t\t\tHTML: `<img src=\"${ createBlobURL( file ) }\">`,\n\t\t\t\tmode: 'BLOCKS',\n\t\t\t\ttagName: this.props.tagName,\n\t\t\t} );\n\t\t\tconst shouldReplace = this.props.onReplace && this.isEmpty();\n\n\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\twindow.console.log( 'Received item:\\n\\n', file );\n\n\t\t\tif ( shouldReplace ) {\n\t\t\t\t// Necessary to allow the paste bin to be removed without errors.\n\t\t\t\tthis.props.setTimeout( () => this.props.onReplace( content ) );\n\t\t\t} else if ( this.props.onSplit ) {\n\t\t\t\t// Necessary to get the right range.\n\t\t\t\t// Also done in the TinyMCE paste plugin.\n\t\t\t\tthis.props.setTimeout( () => this.splitContent( content ) );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// There is a selection, check if a URL is pasted.\n\t\tif ( ! this.editor.selection.isCollapsed() ) {\n\t\t\tconst pastedText = ( html || plainText ).replace( /<[^>]+>/g, '' ).trim();\n\n\t\t\t// A URL was pasted, turn the selection into a link\n\t\t\tif ( isURL( pastedText ) ) {\n\t\t\t\tthis.onChange( applyFormat( this.getRecord(), {\n\t\t\t\t\ttype: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: decodeEntities( pastedText ),\n\t\t\t\t\t},\n\t\t\t\t} ) );\n\n\t\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\t\twindow.console.log( 'Created link:\\n\\n', pastedText );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst shouldReplace = this.props.onReplace && this.isEmpty();\n\n\t\tlet mode = 'INLINE';\n\n\t\tif ( shouldReplace ) {\n\t\t\tmode = 'BLOCKS';\n\t\t} else if ( this.props.onSplit ) {\n\t\t\tmode = 'AUTO';\n\t\t}\n\n\t\tconst content = rawHandler( {\n\t\t\tHTML: html,\n\t\t\tplainText,\n\t\t\tmode,\n\t\t\ttagName: this.props.tagName,\n\t\t\tcanUserUseUnfilteredHTML: this.props.canUserUseUnfilteredHTML,\n\t\t} );\n\n\t\tif ( typeof content === 'string' ) {\n\t\t\tconst recordToInsert = create( { html: content } );\n\t\t\tthis.onChange( insert( this.getRecord(), recordToInsert ) );\n\t\t} else if ( this.props.onSplit ) {\n\t\t\tif ( ! content.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( shouldReplace ) {\n\t\t\t\tthis.props.onReplace( content );\n\t\t\t} else {\n\t\t\t\tthis.splitContent( content, { paste: true } );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tonFocus() {\n\t\tconst { unstableOnFocus } = this.props;\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\t}\n\n\t/**\n\t * Handle input on the next selection change event.\n\t */\n\tonInput() {\n\t\tconst record = this.createRecord();\n\t\tconst transformed = this.patterns.reduce( ( accumlator, transform ) => transform( accumlator ), record );\n\n\t\t// Don't apply changes if there's no transform. Content will be up to\n\t\t// date. In the future we could always let it flow back in the live DOM\n\t\t// if there are no performance issues.\n\t\tthis.onChange( transformed, record === transformed );\n\t}\n\n\t/**\n\t * Handles the `selectionchange` event: sync the selection to local state.\n\t */\n\tonSelectionChange() {\n\t\t// Ensure it's the active element. This is a global event.\n\t\tif ( ! this.isActive() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, formats } = this.createRecord();\n\n\t\tif ( start !== this.state.start || end !== this.state.end ) {\n\t\t\tconst isCaretWithinFormattedText = this.props.isCaretWithinFormattedText;\n\t\t\tif ( ! isCaretWithinFormattedText && formats[ start ] ) {\n\t\t\t\tthis.props.onEnterFormattedText();\n\t\t\t} else if ( isCaretWithinFormattedText && ! formats[ start ] ) {\n\t\t\t\tthis.props.onExitFormattedText();\n\t\t\t}\n\n\t\t\tthis.setState( { start, end } );\n\t\t}\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  record        The record to sync and apply.\n\t * @param {boolean} _withoutApply If true, the record won't be applied to\n\t *                                the live DOM.\n\t */\n\tonChange( record, _withoutApply ) {\n\t\tif ( ! _withoutApply ) {\n\t\t\tthis.applyRecord( record );\n\t\t}\n\n\t\tconst { start, end } = record;\n\n\t\tthis.savedContent = this.valueToFormat( record );\n\t\tthis.props.onChange( this.savedContent );\n\t\tthis.setState( { start, end } );\n\t}\n\n\tonCreateUndoLevel( event ) {\n\t\t// TinyMCE fires a `change` event when the first letter in an instance\n\t\t// is typed. This should not create a history record in Gutenberg.\n\t\t// https://github.com/tinymce/tinymce/blob/4.7.11/src/core/main/ts/api/UndoManager.ts#L116-L125\n\t\t// In other cases TinyMCE won't fire a `change` with at least a previous\n\t\t// record present, so this is a reliable check.\n\t\t// https://github.com/tinymce/tinymce/blob/4.7.11/src/core/main/ts/api/UndoManager.ts#L272-L275\n\t\tif ( event && event.lastLevel === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Always ensure the content is up-to-date. This is needed because e.g.\n\t\t// making something bold will trigger a TinyMCE change event but no\n\t\t// input event. Avoid dispatching an action if the original event is\n\t\t// blur because the content will already be up-to-date.\n\t\tif ( ! event || ! event.originalEvent || event.originalEvent.type !== 'blur' ) {\n\t\t\tthis.onChange( this.createRecord(), true );\n\t\t}\n\n\t\tthis.props.onCreateUndoLevel();\n\t}\n\n\t/**\n\t * Handles a delete keyDown event to handle merge or removal for collapsed\n\t * selection where caret is at directional edge: forward for a delete key,\n\t * reverse for a backspace key.\n\t *\n\t * @link https://en.wikipedia.org/wiki/Caret_navigation\n\t *\n\t * @param {KeyboardEvent} event Keydown event.\n\t *\n\t * @return {?boolean} True if the event was handled.\n\t */\n\tonDeleteKeyDown( event ) {\n\t\tconst { onMerge, onRemove } = this.props;\n\t\tif ( ! onMerge && ! onRemove ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { keyCode } = event;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t// Only process delete if the key press occurs at uncollapsed edge.\n\t\tif ( ! isCollapsed( this.createRecord() ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst empty = this.isEmpty();\n\n\t\t// It is important to consider emptiness because an empty container\n\t\t// will include a bogus TinyMCE BR node _after_ the caret, so in a\n\t\t// forward deletion the isHorizontalEdge function will incorrectly\n\t\t// interpret the presence of the bogus node as not being at the edge.\n\t\tconst isEdge = ( empty || isHorizontalEdge( this.editableRef, isReverse ) );\n\n\t\tif ( ! isEdge ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onMerge ) {\n\t\t\tonMerge( ! isReverse );\n\t\t}\n\n\t\t// Only handle remove on Backspace. This serves dual-purpose of being\n\t\t// an intentional user interaction distinguishing between Backspace and\n\t\t// Delete to remove the empty field, but also to avoid merge & remove\n\t\t// causing destruction of two fields (merge, then removed merged).\n\t\tif ( onRemove && empty && isReverse ) {\n\t\t\tonRemove( ! isReverse );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Handles a keydown event.\n\t *\n\t * @param {KeyboardEvent} event The keydown event.\n\t */\n\tonKeyDown( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif ( keyCode === DELETE || keyCode === BACKSPACE ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( this.onDeleteKeyDown( event ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst value = this.createRecord();\n\t\t\tconst start = getSelectionStart( value );\n\t\t\tconst end = getSelectionEnd( value );\n\n\t\t\tif ( keyCode === BACKSPACE ) {\n\t\t\t\tthis.onChange( remove(\n\t\t\t\t\tvalue,\n\t\t\t\t\t// Only remove the line if the selection is\n\t\t\t\t\t// collapsed.\n\t\t\t\t\tisCollapsed( value ) ? start - 1 : start,\n\t\t\t\t\tend\n\t\t\t\t) );\n\t\t\t} else {\n\t\t\t\tthis.onChange( remove(\n\t\t\t\t\tvalue,\n\t\t\t\t\tstart,\n\t\t\t\t\t// Only remove the line if the selection is collapsed.\n\t\t\t\t\tisCollapsed( value ) ? end + 1 : end,\n\t\t\t\t) );\n\t\t\t}\n\t\t} else if ( keyCode === ENTER ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst record = this.createRecord();\n\n\t\t\tif ( this.props.onReplace ) {\n\t\t\t\tconst text = getTextContent( record );\n\t\t\t\tconst transformation = findTransform( this.enterPatterns, ( item ) => {\n\t\t\t\t\treturn item.regExp.test( text );\n\t\t\t\t} );\n\n\t\t\t\tif ( transformation ) {\n\t\t\t\t\tthis.props.onReplace( [\n\t\t\t\t\t\ttransformation.transform( { content: text } ),\n\t\t\t\t\t] );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( this.multilineTag ) {\n\t\t\t\tif ( this.props.onSplit && isEmptyLine( record ) ) {\n\t\t\t\t\tthis.props.onSplit( ...split( record ).map( this.valueToFormat ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis.onChange( insertLineSeparator( record ) );\n\t\t\t\t}\n\t\t\t} else if ( event.shiftKey || ! this.props.onSplit ) {\n\t\t\t\tconst text = getTextContent( record );\n\t\t\t\tconst length = text.length;\n\t\t\t\tlet toInsert = '\\n';\n\n\t\t\t\t// If the caret is at the end of the text, and there is no\n\t\t\t\t// trailing line break or no text at all, we have to insert two\n\t\t\t\t// line breaks in order to create a new line visually and place\n\t\t\t\t// the caret there.\n\t\t\t\tif ( record.end === length && (\n\t\t\t\t\ttext.charAt( length - 1 ) !== '\\n' || length === 0\n\t\t\t\t) ) {\n\t\t\t\t\ttoInsert = '\\n\\n';\n\t\t\t\t}\n\n\t\t\t\tthis.onChange( insert( record, toInsert ) );\n\t\t\t} else {\n\t\t\t\tthis.splitContent();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles a keyup event.\n\t *\n\t * @param {number} $1.keyCode The key code that has been pressed on the\n\t *                            keyboard.\n\t */\n\tonKeyUp( { keyCode } ) {\n\t\t// The input event does not fire when the whole field is selected and\n\t\t// BACKSPACE is pressed.\n\t\tif ( keyCode === BACKSPACE ) {\n\t\t\tthis.onChange( this.createRecord(), true );\n\t\t}\n\n\t\t// `scrollToRect` is called on `nodechange`, whereas calling it on\n\t\t// `keyup` *when* moving to a new RichText element results in incorrect\n\t\t// scrolling. Though the following allows false positives, it results\n\t\t// in much smoother scrolling.\n\t\tif ( this.props.isViewportSmall && keyCode !== BACKSPACE && keyCode !== ENTER ) {\n\t\t\tthis.scrollToRect( getRectangleFromRange( this.editor.selection.getRng() ) );\n\t\t}\n\t}\n\n\tscrollToRect( rect ) {\n\t\tconst { top: caretTop } = rect;\n\t\tconst container = getScrollContainer( this.editableRef );\n\n\t\tif ( ! container ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When scrolling, avoid positioning the caret at the very top of\n\t\t// the viewport, providing some \"air\" and some textual context for\n\t\t// the user, and avoiding toolbars.\n\t\tconst graceOffset = 100;\n\n\t\t// Avoid pointless scrolling by establishing a threshold under\n\t\t// which scrolling should be skipped;\n\t\tconst epsilon = 10;\n\t\tconst delta = caretTop - graceOffset;\n\n\t\tif ( Math.abs( delta ) > epsilon ) {\n\t\t\tcontainer.scrollTo(\n\t\t\t\tcontainer.scrollLeft,\n\t\t\t\tcontainer.scrollTop + delta,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Splits the content at the location of the selection.\n\t *\n\t * Replaces the content of the editor inside this element with the contents\n\t * before the selection. Sends the elements after the selection to the `onSplit`\n\t * handler.\n\t *\n\t * @param {Array}  blocks  The blocks to add after the split point.\n\t * @param {Object} context The context for splitting.\n\t */\n\tsplitContent( blocks = [], context = {} ) {\n\t\tconst { onSplit } = this.props;\n\t\tconst record = this.createRecord();\n\n\t\tif ( ! onSplit ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet [ before, after ] = split( record );\n\n\t\t// In case split occurs at the trailing or leading edge of the field,\n\t\t// assume that the before/after values respectively reflect the current\n\t\t// value. This also provides an opportunity for the parent component to\n\t\t// determine whether the before/after value has changed using a trivial\n\t\t//  strict equality operation.\n\t\tif ( isEmpty( after ) ) {\n\t\t\tbefore = record;\n\t\t} else if ( isEmpty( before ) ) {\n\t\t\tafter = record;\n\t\t}\n\n\t\t// If pasting and the split would result in no content other than the\n\t\t// pasted blocks, remove the before and after blocks.\n\t\tif ( context.paste ) {\n\t\t\tbefore = isEmpty( before ) ? null : before;\n\t\t\tafter = isEmpty( after ) ? null : after;\n\t\t}\n\n\t\tif ( before ) {\n\t\t\tbefore = this.valueToFormat( before );\n\t\t}\n\n\t\tif ( after ) {\n\t\t\tafter = this.valueToFormat( after );\n\t\t}\n\n\t\tonSplit( before, after, ...blocks );\n\t}\n\n\tonNodeChange( { parents } ) {\n\t\tif ( ! this.isActive() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.isViewportSmall ) {\n\t\t\tlet rect;\n\t\t\tconst selectedAnchor = find( parents, ( node ) => node.tagName === 'A' );\n\t\t\tif ( selectedAnchor ) {\n\t\t\t\t// If we selected a link, position the Link UI below the link\n\t\t\t\trect = selectedAnchor.getBoundingClientRect();\n\t\t\t} else {\n\t\t\t\t// Otherwise, position the Link UI below the cursor or text selection\n\t\t\t\trect = getRectangleFromRange( this.editor.selection.getRng() );\n\t\t\t}\n\n\t\t\t// Originally called on `focusin`, that hook turned out to be\n\t\t\t// premature. On `nodechange` we can work with the finalized TinyMCE\n\t\t\t// instance and scroll to proper position.\n\t\t\tthis.scrollToRect( rect );\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst { tagName, value, isSelected } = this.props;\n\n\t\tif (\n\t\t\ttagName === prevProps.tagName &&\n\t\t\tvalue !== prevProps.value &&\n\t\t\tvalue !== this.savedContent\n\t\t) {\n\t\t\t// Handle deprecated `children` and `node` sources.\n\t\t\t// The old way of passing a value with the `node` matcher required\n\t\t\t// the value to be mapped first, creating a new array each time, so\n\t\t\t// a shallow check wouldn't work. We need to check deep equality.\n\t\t\t// This is only executed for a deprecated API and will eventually be\n\t\t\t// removed.\n\t\t\tif ( Array.isArray( value ) && isEqual( value, this.savedContent ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst record = this.formatToValue( value );\n\n\t\t\tif ( isSelected ) {\n\t\t\t\tconst prevRecord = this.formatToValue( prevProps.value );\n\t\t\t\tconst length = getTextContent( prevRecord ).length;\n\t\t\t\trecord.start = length;\n\t\t\t\trecord.end = length;\n\t\t\t}\n\n\t\t\tthis.applyRecord( record );\n\t\t\tthis.savedContent = value;\n\t\t}\n\n\t\t// If blocks are merged, but the content remains the same, e.g. merging\n\t\t// an empty paragraph into another, then also set the selection to the\n\t\t// end.\n\t\tif ( isSelected && ! prevProps.isSelected && ! this.isActive() ) {\n\t\t\tconst record = this.formatToValue( value );\n\t\t\tconst prevRecord = this.formatToValue( prevProps.value );\n\t\t\tconst length = getTextContent( prevRecord ).length;\n\t\t\trecord.start = length;\n\t\t\trecord.end = length;\n\t\t\tthis.applyRecord( record );\n\t\t}\n\t}\n\n\tformatToValue( value ) {\n\t\t// Handle deprecated `children` and `node` sources.\n\t\tif ( Array.isArray( value ) ) {\n\t\t\treturn create( {\n\t\t\t\thtml: children.toHTML( value ),\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.props.format === 'string' ) {\n\t\t\treturn create( {\n\t\t\t\thtml: value,\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t} );\n\t\t}\n\n\t\t// Guard for blocks passing `null` in onSplit callbacks. May be removed\n\t\t// if onSplit is revised to not pass a `null` value.\n\t\tif ( value === null ) {\n\t\t\treturn create();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tvalueToFormat( { formats, text } ) {\n\t\t// Handle deprecated `children` and `node` sources.\n\t\tif ( this.usedDeprecatedChildrenSource ) {\n\t\t\treturn children.fromDOM( unstableToDom( {\n\t\t\t\tvalue: { formats, text },\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t} ).body.childNodes );\n\t\t}\n\n\t\tif ( this.props.format === 'string' ) {\n\t\t\treturn toHTMLString( {\n\t\t\t\tvalue: { formats, text },\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t} );\n\t\t}\n\n\t\treturn { formats, text };\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttagName: Tagname = 'div',\n\t\t\tstyle,\n\t\t\tvalue,\n\t\t\twrapperClassName,\n\t\t\tclassName,\n\t\t\tinlineToolbar = false,\n\t\t\tformattingControls,\n\t\t\tplaceholder,\n\t\t\tkeepPlaceholderOnFocus = false,\n\t\t\tisSelected,\n\t\t\tautocompleters,\n\t\t} = this.props;\n\n\t\tconst MultilineTag = this.multilineTag;\n\t\tconst ariaProps = pickAriaProps( this.props );\n\n\t\t// Generating a key that includes `tagName` ensures that if the tag\n\t\t// changes, we unmount and destroy the previous TinyMCE element, then\n\t\t// mount and initialize a new child element in its place.\n\t\tconst key = [ 'editor', Tagname ].join();\n\t\tconst isPlaceholderVisible = placeholder && ( ! isSelected || keepPlaceholderOnFocus ) && this.isEmpty();\n\t\tconst classes = classnames( wrapperClassName, 'editor-rich-text' );\n\t\tconst record = this.getRecord();\n\n\t\treturn (\n\t\t\t<div className={ classes }\n\t\t\t\tonFocus={ this.setFocusedElement }\n\t\t\t>\n\t\t\t\t{ isSelected && ! inlineToolbar && (\n\t\t\t\t\t<BlockFormatControls>\n\t\t\t\t\t\t<FormatToolbar controls={ formattingControls } />\n\t\t\t\t\t</BlockFormatControls>\n\t\t\t\t) }\n\t\t\t\t{ isSelected && inlineToolbar && (\n\t\t\t\t\t<div className=\"editor-rich-text__inline-toolbar\">\n\t\t\t\t\t\t<FormatToolbar controls={ formattingControls } />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<Autocomplete\n\t\t\t\t\tonReplace={ this.props.onReplace }\n\t\t\t\t\tcompleters={ autocompleters }\n\t\t\t\t\trecord={ record }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t>\n\t\t\t\t\t{ ( { isExpanded, listBoxId, activeId } ) => (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<TinyMCE\n\t\t\t\t\t\t\t\ttagName={ Tagname }\n\t\t\t\t\t\t\t\tgetSettings={ this.getSettings }\n\t\t\t\t\t\t\t\tonSetup={ this.onSetup }\n\t\t\t\t\t\t\t\tstyle={ style }\n\t\t\t\t\t\t\t\tdefaultValue={ value }\n\t\t\t\t\t\t\t\tisPlaceholderVisible={ isPlaceholderVisible }\n\t\t\t\t\t\t\t\taria-label={ placeholder }\n\t\t\t\t\t\t\t\taria-autocomplete=\"list\"\n\t\t\t\t\t\t\t\taria-expanded={ isExpanded }\n\t\t\t\t\t\t\t\taria-owns={ listBoxId }\n\t\t\t\t\t\t\t\taria-activedescendant={ activeId }\n\t\t\t\t\t\t\t\t{ ...ariaProps }\n\t\t\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\t\t\t\t\tonInput={ this.onInput }\n\t\t\t\t\t\t\t\tonKeyDown={ this.onKeyDown }\n\t\t\t\t\t\t\t\tonKeyUp={ this.onKeyUp }\n\t\t\t\t\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\t\t\t\t\tmultilineTag={ this.multilineTag }\n\t\t\t\t\t\t\t\tmultilineWrapperTags={ this.multilineWrapperTags }\n\t\t\t\t\t\t\t\tsetRef={ this.setRef }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ isPlaceholderVisible &&\n\t\t\t\t\t\t\t\t<Tagname\n\t\t\t\t\t\t\t\t\tclassName={ classnames( 'editor-rich-text__tinymce', className ) }\n\t\t\t\t\t\t\t\t\tstyle={ style }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ MultilineTag ? <MultilineTag>{ placeholder }</MultilineTag> : placeholder }\n\t\t\t\t\t\t\t\t</Tagname>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{ isSelected && <FormatEdit value={ record } onChange={ this.onChange } /> }\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) }\n\t\t\t\t</Autocomplete>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformattingControls: [ 'bold', 'italic', 'link', 'strikethrough' ],\n\tformat: 'string',\n\tvalue: '',\n};\n\nconst RichTextContainer = compose( [\n\twithInstanceId,\n\twithBlockEditContext( ( context, ownProps ) => {\n\t\t// When explicitly set as not selected, do nothing.\n\t\tif ( ownProps.isSelected === false ) {\n\t\t\treturn {};\n\t\t}\n\t\t// When explicitly set as selected, use the value stored in the context instead.\n\t\tif ( ownProps.isSelected === true ) {\n\t\t\treturn {\n\t\t\t\tisSelected: context.isSelected,\n\t\t\t};\n\t\t}\n\n\t\t// Ensures that only one RichText component can be focused.\n\t\treturn {\n\t\t\tisSelected: context.isSelected && context.focusedElement === ownProps.instanceId,\n\t\t\tsetFocusedElement: context.setFocusedElement,\n\t\t};\n\t} ),\n\twithSelect( ( select ) => {\n\t\tconst { isViewportMatch } = select( 'core/viewport' );\n\t\tconst { canUserUseUnfilteredHTML, isCaretWithinFormattedText } = select( 'core/editor' );\n\n\t\treturn {\n\t\t\tisViewportSmall: isViewportMatch( '< small' ),\n\t\t\tcanUserUseUnfilteredHTML: canUserUseUnfilteredHTML(),\n\t\t\tisCaretWithinFormattedText: isCaretWithinFormattedText(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst {\n\t\t\tcreateUndoLevel,\n\t\t\tredo,\n\t\t\tundo,\n\t\t\tenterFormattedText,\n\t\t\texitFormattedText,\n\t\t} = dispatch( 'core/editor' );\n\n\t\treturn {\n\t\t\tonCreateUndoLevel: createUndoLevel,\n\t\t\tonRedo: redo,\n\t\t\tonUndo: undo,\n\t\t\tonEnterFormattedText: enterFormattedText,\n\t\t\tonExitFormattedText: exitFormattedText,\n\t\t};\n\t} ),\n\twithSafeTimeout,\n] )( RichText );\n\nRichTextContainer.Content = ( { value, tagName: Tag, multiline, ...props } ) => {\n\tlet html = value;\n\tlet MultilineTag;\n\n\tif ( multiline === true || multiline === 'p' || multiline === 'li' ) {\n\t\tMultilineTag = multiline === true ? 'p' : multiline;\n\t}\n\n\t// Handle deprecated `children` and `node` sources.\n\tif ( Array.isArray( value ) ) {\n\t\thtml = children.toHTML( value );\n\t}\n\n\tif ( ! html && MultilineTag ) {\n\t\thtml = `<${ MultilineTag }></${ MultilineTag }>`;\n\t}\n\n\tconst content = <RawHTML>{ html }</RawHTML>;\n\n\tif ( Tag ) {\n\t\treturn <Tag { ...omit( props, [ 'format' ] ) }>{ content }</Tag>;\n\t}\n\n\treturn content;\n};\n\nRichTextContainer.isEmpty = ( value = '' ) => {\n\t// Handle deprecated `children` and `node` sources.\n\tif ( Array.isArray( value ) ) {\n\t\treturn ! value || value.length === 0;\n\t}\n\n\treturn value.length === 0;\n};\n\nRichTextContainer.Content.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\nexport default RichTextContainer;\n"]}