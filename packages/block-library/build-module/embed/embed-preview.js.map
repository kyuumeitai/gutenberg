{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/block-library/src/embed/embed-preview.js"],"names":["HOSTS_NO_PREVIEWS","getPhotoHtml","parse","includes","classnames","__","sprintf","Placeholder","SandBox","RichText","BlockIcon","EmbedPreview","props","preview","url","type","caption","onCaptionChange","isSelected","className","icon","label","scripts","html","parsedUrl","cannotPreview","host","replace","iframeTitle","sandboxClassnames","embedWrapper","__html","isEmpty"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport { HOSTS_NO_PREVIEWS } from './constants';\nimport { getPhotoHtml } from './util';\n\n/**\n * External dependencies\n */\nimport { parse } from 'url';\nimport { includes } from 'lodash';\nimport classnames from 'classnames/dedupe';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Placeholder, SandBox } from '@wordpress/components';\nimport { RichText, BlockIcon } from '@wordpress/editor';\n\nconst EmbedPreview = ( props ) => {\n\tconst { preview, url, type, caption, onCaptionChange, isSelected, className, icon, label } = props;\n\tconst { scripts } = preview;\n\n\tconst html = 'photo' === type ? getPhotoHtml( preview ) : preview.html;\n\tconst parsedUrl = parse( url );\n\tconst cannotPreview = includes( HOSTS_NO_PREVIEWS, parsedUrl.host.replace( /^www\\./, '' ) );\n\t// translators: %s: host providing embed content e.g: www.youtube.com\n\tconst iframeTitle = sprintf( __( 'Embedded content from %s' ), parsedUrl.host );\n\tconst sandboxClassnames = classnames( type, className, 'wp-block-embed__wrapper' );\n\n\tconst embedWrapper = 'wp-embed' === type ? (\n\t\t<div\n\t\t\tclassName={ sandboxClassnames }\n\t\t\tdangerouslySetInnerHTML={ { __html: html } }\n\t\t/>\n\t) : (\n\t\t<div className=\"wp-block-embed__wrapper\">\n\t\t\t<SandBox\n\t\t\t\thtml={ html }\n\t\t\t\tscripts={ scripts }\n\t\t\t\ttitle={ iframeTitle }\n\t\t\t\ttype={ sandboxClassnames }\n\t\t\t/>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<figure className={ classnames( className, 'wp-block-embed', { 'is-type-video': 'video' === type } ) }>\n\t\t\t{ ( cannotPreview ) ? (\n\t\t\t\t<Placeholder icon={ <BlockIcon icon={ icon } showColors /> } label={ label }>\n\t\t\t\t\t<p className=\"components-placeholder__error\"><a href={ url }>{ url }</a></p>\n\t\t\t\t\t<p className=\"components-placeholder__error\">{ __( 'Previews for this are unavailable in the editor, sorry!' ) }</p>\n\t\t\t\t</Placeholder>\n\t\t\t) : embedWrapper }\n\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\tplaceholder={ __( 'Write captionâ€¦' ) }\n\t\t\t\t\tvalue={ caption }\n\t\t\t\t\tonChange={ onCaptionChange }\n\t\t\t\t\tinlineToolbar\n\t\t\t\t/>\n\t\t\t) }\n\t\t</figure>\n\t);\n};\n\nexport default EmbedPreview;\n"]}