{"version":3,"sources":["/Users/ky/Sites/valet/copesacontent/web/app/plugins/gutenberg/packages/editor/src/components/navigable-toolbar/index.js"],"names":["cond","matchesProperty","NavigableMenu","KeyboardShortcuts","Component","findDOMNode","focus","ESCAPE","window","Node","getSelection","NavigableToolbar","arguments","bindNode","bind","focusToolbar","focusSelection","switchOnKeyDown","ref","toolbar","tabbables","tabbable","find","length","selection","focusNode","focusElement","nodeType","ELEMENT_NODE","parentElement","props","children"],"mappings":";;;;;;;;;;AAAA;;;AAGA,SAASA,IAAT,EAAeC,eAAf,QAAsC,QAAtC;AAEA;;;;AAGA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,uBAAjD;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAEA;;;;cAI+BC,M;IAAvBC,I,WAAAA,I;IAAMC,Y,WAAAA,Y;;IAERC,gB;;;;;AACL,8BAAc;AAAA;;AAAA;;AACb,2FAAUC,SAAV;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,uDAAtB;AAEA,UAAKG,eAAL,GAAuBjB,IAAI,CAAE,CAC5B,CAAEC,eAAe,CAAE,CAAE,SAAF,CAAF,EAAiBM,MAAjB,CAAjB,EAA4C,MAAKS,cAAjD,CAD4B,CAAF,CAA3B;AAPa;AAUb;;;;6BAESE,G,EAAM;AACf;AACA;AACA;AACA,WAAKC,OAAL,GAAed,WAAW,CAAEa,GAAF,CAA1B;AACA;;;mCAEc;AACd,UAAME,SAAS,GAAGd,KAAK,CAACe,QAAN,CAAeC,IAAf,CAAqB,KAAKH,OAA1B,CAAlB;;AACA,UAAKC,SAAS,CAACG,MAAf,EAAwB;AACvBH,QAAAA,SAAS,CAAE,CAAF,CAAT,CAAed,KAAf;AACA;AACD;AAED;;;;;;;qCAIiB;AAChB;AACA,UAAMkB,SAAS,GAAGd,YAAY,EAA9B;;AACA,UAAK,CAAEc,SAAP,EAAmB;AAClB;AACA,OALe,CAOhB;AACA;;;AARgB,UASRC,SATQ,GASMD,SATN,CASRC,SATQ;AAUhB,UAAIC,YAAY,GAAGD,SAAnB;;AACA,UAAKC,YAAY,CAACC,QAAb,KAA0BlB,IAAI,CAACmB,YAApC,EAAmD;AAClDF,QAAAA,YAAY,GAAGA,YAAY,CAACG,aAA5B;AACA;;AAED,UAAKH,YAAL,EAAoB;AACnBA,QAAAA,YAAY,CAACpB,KAAb;AACA;AACD;;;6BAEQ;AAAA,wBACuB,KAAKwB,KAD5B;AAAA,UACAC,QADA,eACAA,QADA;AAAA,UACaD,KADb;;AAER,aACC,cAAC,aAAD;AACC,QAAA,WAAW,EAAC,YADb;AAEC,QAAA,IAAI,EAAC,SAFN;AAGC,QAAA,GAAG,EAAG,KAAKjB,QAHZ;AAIC,QAAA,SAAS,EAAG,KAAKI;AAJlB,SAKMa,KALN,GAOC,cAAC,iBAAD;AACC,QAAA,UAAU,MADX,CAEC;AAFD;AAGC,QAAA,SAAS,EAAC,SAHX;AAIC,QAAA,SAAS,EAAG;AACX,qBAAW,KAAKf;AADL;AAJb,QAPD,EAeGgB,QAfH,CADD;AAmBA;;;;EAxE6B3B,S;;AA2E/B,eAAeO,gBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { cond, matchesProperty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { NavigableMenu, KeyboardShortcuts } from '@wordpress/components';\nimport { Component, findDOMNode } from '@wordpress/element';\nimport { focus } from '@wordpress/dom';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Browser dependencies\n */\n\nconst { Node, getSelection } = window;\n\nclass NavigableToolbar extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.bindNode = this.bindNode.bind( this );\n\t\tthis.focusToolbar = this.focusToolbar.bind( this );\n\t\tthis.focusSelection = this.focusSelection.bind( this );\n\n\t\tthis.switchOnKeyDown = cond( [\n\t\t\t[ matchesProperty( [ 'keyCode' ], ESCAPE ), this.focusSelection ],\n\t\t] );\n\t}\n\n\tbindNode( ref ) {\n\t\t// Disable reason: Need DOM node for finding first focusable element\n\t\t// on keyboard interaction to shift to toolbar.\n\t\t// eslint-disable-next-line react/no-find-dom-node\n\t\tthis.toolbar = findDOMNode( ref );\n\t}\n\n\tfocusToolbar() {\n\t\tconst tabbables = focus.tabbable.find( this.toolbar );\n\t\tif ( tabbables.length ) {\n\t\t\ttabbables[ 0 ].focus();\n\t\t}\n\t}\n\n\t/**\n\t * Programmatically shifts focus to the element where the current selection\n\t * exists, if there is a selection.\n\t */\n\tfocusSelection() {\n\t\t// Ensure that a selection exists.\n\t\tconst selection = getSelection();\n\t\tif ( ! selection ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Focus node may be a text node, which cannot be focused directly.\n\t\t// Find its parent element instead.\n\t\tconst { focusNode } = selection;\n\t\tlet focusElement = focusNode;\n\t\tif ( focusElement.nodeType !== Node.ELEMENT_NODE ) {\n\t\t\tfocusElement = focusElement.parentElement;\n\t\t}\n\n\t\tif ( focusElement ) {\n\t\t\tfocusElement.focus();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { children, ...props } = this.props;\n\t\treturn (\n\t\t\t<NavigableMenu\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\trole=\"toolbar\"\n\t\t\t\tref={ this.bindNode }\n\t\t\t\tonKeyDown={ this.switchOnKeyDown }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\tbindGlobal\n\t\t\t\t\t// Use the same event that TinyMCE uses in the Classic block for its own `alt+f10` shortcut.\n\t\t\t\t\teventName=\"keydown\"\n\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t'alt+f10': this.focusToolbar,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</NavigableMenu>\n\t\t);\n\t}\n}\n\nexport default NavigableToolbar;\n"]}